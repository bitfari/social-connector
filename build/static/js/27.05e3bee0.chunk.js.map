{"version":3,"sources":["views/ui-elements/page-layouts/BoxedLayout.js","@core/components/breadcrumbs/index.js","@core/components/widgets/stats/TinyChartStats.js","views/ui-elements/cards/development/Earnings.js","views/ui-elements/cards/development/RevenueReport.js","views/ui-elements/cards/network/OrdersBarChart.js","views/ui-elements/cards/network/ProfitLineChart.js","views/dashboard/network/index.js"],"names":["BoxedLayout","breadCrumbTitle","breadCrumbParent","breadCrumbActive","color","className","BreadCrumbs","props","breadCrumbParent2","breadCrumbParent3","tag","to","active","size","end","Link","TinyChartStats","title","stats","options","series","type","height","defaultProps","Earnings","success","chart","toolbar","show","dataLabels","enabled","legend","comparedResult","labels","stroke","width","colors","grid","padding","right","bottom","left","plotOptions","pie","startAngle","donut","name","offsetY","value","formatter","val","parseInt","label","responsive","breakpoint","xs","RevenueReport","data","setData","useState","useEffect","axios","get","then","res","revenueOptions","stacked","top","yaxis","lines","xaxis","categories","style","fontSize","axisTicks","axisBorder","primary","warning","bar","columnWidth","endingShape","distributed","budgetOptions","zoom","sparkline","curve","dashArray","tooltip","md","id","price","budget","OrdersBarChart","horizontal","borderRadius","backgroundBarColors","backgroundBarRadius","x","statistics","ProfitLineChart","info","borderColor","strokeDashArray","markers","strokeColors","strokeWidth","strokeOpacity","fillOpacity","discrete","seriesIndex","dataPointIndex","fillColor","strokeColor","shape","radius","hover","NetworkDashboard","useContext","ThemeColors","lg","main"],"mappings":"qHAAA,mDAwBeA,UAdK,IAEhB,eAAC,WAAD,WACE,cAAC,IAAD,CAAaC,gBAAgB,eAAeC,iBAAiB,UAAUC,iBAAiB,iBACxF,cAAC,IAAD,CAAOC,MAAM,UAAb,SACE,qBAAKC,UAAU,aAAf,SACE,sBAAMA,UAAU,UAAhB,wBAGJ,cAAC,UAAD,Q,iCCnBN,wEAuFeC,IAtEKC,IAElB,MAAM,gBAAEN,EAAF,iBAAmBC,EAAnB,kBAAqCM,EAArC,kBAAwDC,EAAxD,iBAA2EN,GAAqBI,EAEtG,OACE,sBAAKF,UAAU,qBAAf,UACE,qBAAKA,UAAU,2CAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,sBAAKA,UAAU,SAAf,UACGJ,EAAkB,oBAAII,UAAU,wCAAd,SAAuDJ,IAAwB,GAClG,qBAAKI,UAAU,6DAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAgBK,IAAI,KAApB,SACE,cAAC,IAAD,CAAMC,GAAG,IAAT,oBAEF,cAAC,IAAD,CAAgBD,IAAI,KAAKL,UAAU,eAAnC,SACGH,IAEFM,EACC,cAAC,IAAD,CAAgBE,IAAI,KAAKL,UAAU,eAAnC,SACGG,IAGH,GAEDC,EACC,cAAC,IAAD,CAAgBC,IAAI,KAAKL,UAAU,eAAnC,SACGI,IAGH,GAEF,cAAC,IAAD,CAAgBC,IAAI,KAAKE,QAAM,EAA/B,SACGT,gBAOb,qBAAKE,UAAU,qEAAf,SACE,qBAAKA,UAAU,4BAAf,SACE,eAAC,KAAD,WACE,cAAC,IAAD,CAAgBD,MAAM,UAAUS,KAAK,KAAKR,UAAU,qCAApD,SACE,cAAC,IAAD,CAAMQ,KAAM,OAEd,eAAC,IAAD,CAAcH,IAAI,KAAKI,KAAG,EAA1B,UACE,eAAC,IAAD,CAAcJ,IAAKK,IAAMJ,GAAG,cAA5B,UACE,cAAC,IAAD,CAAaN,UAAU,OAAOQ,KAAM,KACpC,sBAAMR,UAAU,eAAhB,sBAEF,eAAC,IAAD,CAAcK,IAAKK,IAAMJ,GAAG,oBAA5B,UACE,cAAC,IAAD,CAAeN,UAAU,OAAOQ,KAAM,KACtC,sBAAMR,UAAU,eAAhB,4BAEF,eAAC,IAAD,CAAcK,IAAKK,IAAMJ,GAAG,iBAA5B,UACE,cAAC,IAAD,CAAMN,UAAU,OAAOQ,KAAM,KAC7B,sBAAMR,UAAU,eAAhB,yBAEF,eAAC,IAAD,CAAcK,IAAKK,IAAMJ,GAAG,aAA5B,UACE,cAAC,IAAD,CAAUN,UAAU,OAAOQ,KAAM,KACjC,sBAAMR,UAAU,eAAhB,oC,iCC9EhB,qCAOA,MAAMW,EAAiBT,IAErB,MAAM,MAAEU,EAAF,MAASC,EAAT,QAAgBC,EAAhB,OAAyBC,EAAzB,KAAiCC,EAAjC,OAAuCC,GAAWf,EAExD,OACE,cAAC,IAAD,CAAMF,UAAU,uBAAhB,SACE,eAAC,IAAD,CAAUA,UAAU,QAApB,UACE,6BAAKY,IACL,oBAAIZ,UAAU,iBAAd,SAAgCa,IAChC,cAAC,IAAD,CAAOC,QAASA,EAASC,OAAQA,EAAQC,KAAMA,EAAMC,OAAQA,UAMtDN,MAYfA,EAAeO,aAAe,CAC5BD,OAAQ,M,uDCnCV,qCAgHeE,IA7GE,IAAkB,IAAjB,QAAEC,GAAc,EAChC,MAAMN,EAAU,CACdO,MAAO,CACLC,QAAS,CACPC,MAAM,IAGVC,WAAY,CACVC,SAAS,GAEXC,OAAQ,CAAEH,MAAM,GAChBI,eAAgB,CAAC,GAAI,EAAG,GACxBC,OAAQ,CAAC,aAAc,UACvBC,OAAQ,CAAEC,MAAO,GACjBC,OAAQ,CAAC,YAAa,YAAaX,GACnCY,KAAM,CACJC,QAAS,CACPC,OAAQ,GACRC,QAAS,EACTC,MAAO,KAGXC,YAAa,CACXC,IAAK,CACHC,YAAa,GACbC,MAAO,CACLZ,OAAQ,CACNL,MAAM,EACNkB,KAAM,CACJC,QAAS,IAEXC,MAAO,CACLD,SAAU,GACVE,UAAUC,GACF,GAAN,OAAUC,SAASD,GAAnB,OAGJF,MAAO,CACLpB,MAAM,EACNmB,QAAS,EACTK,MAAO,YACPH,UAAUC,GACF,GAAN,OAAUC,SAASD,GAAnB,OAGJF,MAAO,CACLpB,MAAM,EACNmB,QAAS,EACTK,MAAO,SACPH,UAAUC,GACF,GAAN,OAAUC,SAASD,GAAnB,UAMVG,WAAY,CACZ,CACEC,WAAY,KACZnC,QAAS,CACPO,MAAO,CACLJ,OAAQ,OAId,CACEgC,WAAY,KACZnC,QAAS,CACPO,MAAO,CACLJ,OAAQ,OAId,CACEgC,WAAY,KACZnC,QAAS,CACPO,MAAO,CACLJ,OAAQ,OAId,CACEgC,WAAY,IACZnC,QAAS,CACPO,MAAO,CACLJ,OAAQ,UAQlB,OACE,cAAC,IAAD,CAAMjB,UAAU,gBAAhB,SACE,cAAC,IAAD,UACE,eAAC,KAAD,WACE,cAAC,IAAD,CAAKkD,GAAG,IAAR,SACE,cAAC,IAAD,CAAWlD,UAAU,OAArB,wBAEF,cAAC,IAAD,CAAKkD,GAAG,IAAR,SACE,cAAC,IAAD,CAAOpC,QAASA,EAASC,OAAQ,CAAC,GAAI,IAAKC,KAAK,MAAMC,OAAQ,iB,iCCxG1E,6DAiJekC,IAlIOjD,IACpB,MAAOkD,EAAMC,GAAWC,mBAAS,MAEjCC,qBAAU,KACRC,IAAMC,IAAI,yCAAyCC,MAAKC,GAAON,EAAQM,EAAIP,UAC1E,IAEH,MAAMQ,EAAiB,CACnBvC,MAAO,CACLwC,SAAS,EACT7C,KAAM,MACNM,QAAS,CAAEC,MAAM,IAEnBS,KAAM,CACJC,QAAS,CACP6B,KAAM,GACN3B,QAAS,IAEX4B,MAAO,CACLC,MAAO,CAAEzC,MAAM,KAGnB0C,MAAO,CACLC,WAAY,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACrEtC,OAAQ,CACNuC,MAAO,CACLpC,OAAQ,UACRqC,SAAU,YAGdC,UAAW,CACT9C,MAAM,GAER+C,WAAY,CACV/C,MAAM,IAGVG,OAAQ,CACNH,MAAM,GAERC,WAAY,CACVC,SAAS,GAEXM,OAAQ,CAAC7B,EAAMqE,QAASrE,EAAMsE,SAC9BnC,YAAa,CACXoC,IAAK,CACHC,YAAa,MACbC,YAAa,WAEfC,aAAa,GAEfb,MAAO,CACLnC,OAAQ,CACNuC,MAAO,CACLpC,OAAQ,UACRqC,SAAU,cAwBlBS,EAAgB,CACdxD,MAAO,CACLC,QAAS,CAAEC,MAAM,GACjBuD,KAAM,CAAErD,SAAS,GACjBT,KAAM,OACN+D,UAAW,CAAEtD,SAAS,IAExBI,OAAQ,CACNmD,MAAO,SACPC,UAAW,CAAC,EAAG,GACfnD,MAAO,CAAC,IAEVC,OAAQ,CAAC7B,EAAMqE,QAAS,WACxBW,QAAS,CACPzD,SAAS,IAIf,OAAgB,OAAT2B,EACL,cAAC,IAAD,CAAMpD,UAAU,sBAAhB,SACE,eAAC,KAAD,CAAKA,UAAU,OAAf,UACE,eAAC,IAAD,CAAKA,UAAU,yBAAyBmF,GAAG,IAAIjC,GAAG,KAAlD,UACE,sBAAKlD,UAAU,4DAAf,UACE,cAAC,IAAD,CAAWA,UAAU,gBAArB,2BACA,sBAAKA,UAAU,4BAAf,UACE,sBAAKA,UAAU,iCAAf,UACE,sBAAMA,UAAU,+CAChB,8CAEF,sBAAKA,UAAU,4BAAf,UACE,sBAAMA,UAAU,+CAChB,iDAIN,cAAC,IAAD,CAAOoF,GAAG,uBAAuBpE,KAAK,MAAMC,OAAO,MAAMH,QAAS8C,EAAgB7C,OAtDxE,CACd,CACE0B,KAAM,UACNW,KAAM,CAAC,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,KAE/C,CACEX,KAAM,UACNW,KAAM,EAAE,KAAM,IAAK,IAAK,KAAM,KAAM,IAAK,IAAK,IAAK,YAiDnD,eAAC,IAAD,CAAKpD,UAAU,iBAAiBmF,GAAG,IAAIjC,GAAG,KAA1C,UACE,qBAAIlD,UAAU,QAAd,cAAwBoD,EAAKiC,SAC7B,sBAAKrF,UAAU,gCAAf,UACE,sBAAMA,UAAU,2BAAhB,wBACA,+BAAOoD,EAAKkC,YAEd,cAAC,IAAD,CAAOF,GAAG,eAAepE,KAAK,OAAOC,OAAO,KAAKH,QAAS+D,EAAe9D,OAnD5D,CACjB,CACEqC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAEjD,CACEA,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,QA+C3C,cAAC,IAAD,CAAQrD,MAAM,UAAd,wCAIJ,O,iCC9IN,4CAqFewF,IA5EQ,IAAkB,IAAjB,QAAEf,GAAc,EAEtC,MAAOpB,EAAMC,GAAWC,mBAAS,MAEjCC,qBAAU,KACRC,IAAMC,IAAI,uCAAuCC,MAAKC,GAAON,EAAQM,EAAIP,QAClE,IAAMC,EAAQ,QACpB,IAEH,MAAMvC,EAAU,CACdO,MAAO,CACLwC,SAAS,EACTvC,QAAS,CACPC,MAAM,IAGVS,KAAM,CACJT,MAAM,EACNU,QAAS,CACPG,KAAM,EACNF,MAAO,EACP4B,KAAM,GACN3B,QAAS,KAGbE,YAAa,CACXoC,IAAK,CACHe,YAAY,EACZd,YAAa,MACbe,aAAc,CAAC,EAAG,GAClB1D,OAAQ,CACN2D,oBAAqB,CAAC,UAAW,UAAW,UAAW,UAAW,WAClEC,oBAAqB,KAI3BjE,OAAQ,CACNH,MAAM,GAERC,WAAY,CACVC,SAAS,GAEXM,OAAQ,CAACyC,GACTP,MAAO,CACLrC,OAAQ,CACNL,MAAM,GAER+C,WAAY,CACV/C,MAAM,GAER8C,UAAW,CACT9C,MAAM,IAGVwC,MAAO,CACLxC,MAAM,GAER2D,QAAS,CACPU,EAAG,CACDrE,MAAM,KAKZ,OAAgB,OAAT6B,EACL,cAAC,IAAD,CACEnC,OAAQ,GACRD,KAAK,MACLF,QAASA,EACTF,MAAOwC,EAAKxC,MACZC,MAAOuC,EAAKyC,WACZ9E,OAAQqC,EAAKrC,SAEb,O,iCClFN,4CAiHe+E,IAxGS,IAAe,IAAd,KAAEC,GAAW,EAEpC,MAAO3C,EAAMC,GAAWC,mBAAS,MAEjCC,qBAAU,KACRC,IAAMC,IAAI,wCAAwCC,MAAKC,GAAON,EAAQM,EAAIP,QACnE,IAAMC,EAAQ,QACpB,IAEH,MAAMvC,EAAU,CACdO,MAAO,CACLC,QAAS,CACPC,MAAM,GAERuD,KAAM,CACJrD,SAAS,IAGbO,KAAM,CACJgE,YAAa,UACbC,gBAAiB,EACjBhC,MAAO,CACLD,MAAO,CACLzC,MAAM,IAGVwC,MAAO,CACLC,MAAO,CACLzC,MAAM,IAGVU,QAAS,CACP6B,KAAM,GACN3B,QAAS,KAGbN,OAAQ,CACNC,MAAO,GAETC,OAAQ,CAACgE,GACThF,OAAQ,CACN,CACEqC,KAAM,CAAC,EAAG,GAAI,EAAG,GAAI,GAAI,MAG7B8C,QAAS,CACP1F,KAAM,EACNuB,OAAQgE,EACRI,aAAcJ,EACdK,YAAa,EACbC,cAAe,EACfJ,gBAAiB,EACjBK,YAAa,EACbC,SAAU,CACR,CACEC,YAAa,EACbC,eAAgB,EAChBC,UAAW,UACXC,YAAaZ,EACbvF,KAAM,IAGVoG,MAAO,SACPC,OAAQ,EACRC,MAAO,CACLtG,KAAM,IAGVyD,MAAO,CACLrC,OAAQ,CACNL,MAAM,EACN4C,MAAO,CACLC,SAAU,QAGdE,WAAY,CACV/C,MAAM,GAER8C,UAAW,CACT9C,MAAM,IAGVwC,MAAO,CACLxC,MAAM,GAER2D,QAAS,CACPU,EAAG,CACDrE,MAAM,KAKZ,OAAgB,OAAT6B,EACL,cAAC,IAAD,CACEnC,OAAQ,GACRD,KAAK,OACLF,QAASA,EACTF,MAAOwC,EAAKxC,MACZC,MAAOuC,EAAKyC,WACZ9E,OAAQqC,EAAKrC,SAEb,O,uDC9GN,8FAsCegG,UA3BU,KACvB,MAAM,OAAEhF,GAAWiF,qBAAWC,KAE9B,OACE,qBAAK7B,GAAG,oBAAR,SACE,eAAC,KAAD,CAAKpF,UAAU,eAAf,UACE,cAAC,IAAD,CAAKkH,GAAG,IAAI/B,GAAG,KAAf,SACE,eAAC,KAAD,CAAKnF,UAAU,eAAf,UACE,cAAC,IAAD,CAAKkH,GAAG,IAAI/B,GAAG,IAAIjC,GAAG,IAAtB,SACE,cAAC,IAAD,CAAgBsB,QAASzC,EAAOyC,QAAQ2C,SAE1C,cAAC,IAAD,CAAKD,GAAG,IAAI/B,GAAG,IAAIjC,GAAG,IAAtB,SACE,cAAC,IAAD,CAAiB6C,KAAMhE,EAAOgE,KAAKoB,SAErC,cAAC,IAAD,CAAKD,GAAG,KAAK/B,GAAG,IAAIjC,GAAG,KAAvB,SACE,cAAC,IAAD,CAAU9B,QAASW,EAAOX,QAAQ+F,cAIxC,cAAC,IAAD,CAAKD,GAAG,IAAI/B,GAAG,KAAf,SACE,cAAC,IAAD,CAAeZ,QAASxC,EAAOwC,QAAQ4C,KAAM3C,QAASzC,EAAOyC,QAAQ2C","file":"static/js/27.05e3bee0.chunk.js","sourcesContent":["// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Alert } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport Breadcrumbs from '@components/breadcrumbs'\r\nimport Network from '../../dashboard/network'\r\n\r\nconst BoxedLayout = () => {\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumbs breadCrumbTitle='Layout Boxed' breadCrumbParent='Layouts' breadCrumbActive='Layout Boxed' />\r\n      <Alert color='primary'>\r\n        <div className='alert-body'>\r\n          <span className='fw-bold'>Info: </span>\r\n        </div>\r\n      </Alert>\r\n      <Network />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default BoxedLayout\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-start mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  {breadCrumbParent}\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\r\n        <div className='breadcrumb-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' end>\r\n              <DropdownItem tag={Link} to='/apps/focus'>\r\n                <CheckSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Focus</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/instafriend'>\r\n                <MessageSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Instafriend</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/tellfari'>\r\n                <Mail className='me-1' size={14} />\r\n                <span className='align-middle'>Tellfari</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/book'>\r\n                <Calendar className='me-1' size={14} />\r\n                <span className='align-middle'>Book</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n","// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport Chart from 'react-apexcharts'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody } from 'reactstrap'\r\n\r\nconst TinyChartStats = props => {\r\n  // ** Props\r\n  const { title, stats, options, series, type, height } = props\r\n\r\n  return (\r\n    <Card className='card-tiny-line-stats'>\r\n      <CardBody className='pb-50'>\r\n        <h6>{title}</h6>\r\n        <h2 className='fw-bolder mb-1'>{stats}</h2>\r\n        <Chart options={options} series={series} type={type} height={height} />\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default TinyChartStats\r\n\r\n// ** PropTypes\r\nTinyChartStats.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  stats: PropTypes.string.isRequired,\r\n  series: PropTypes.array.isRequired,\r\n  options: PropTypes.object.isRequired\r\n}\r\n\r\n// ** Default Props\r\nTinyChartStats.defaultProps = {\r\n  height: 100\r\n}\r\n","import Chart from 'react-apexcharts'\r\nimport { Card, CardTitle, CardText, CardBody, Row, Col } from 'reactstrap'\r\n\r\nconst Earnings = ({ success }) => {\r\n  const options = {\r\n    chart: {\r\n      toolbar: {\r\n        show: false\r\n      }\r\n    },\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    legend: { show: false },\r\n    comparedResult: [2, -3, 8],\r\n    labels: ['Billboards', 'Online'],\r\n    stroke: { width: 0 },\r\n    colors: ['#28c76f66', '#28c76f33', success],\r\n    grid: {\r\n      padding: {\r\n        right: -20,\r\n        bottom: -8,\r\n        left: -20\r\n      }\r\n    },\r\n    plotOptions: {\r\n      pie: {\r\n        startAngle: -10,\r\n        donut: {\r\n          labels: {\r\n            show: true,\r\n            name: {\r\n              offsetY: 15\r\n            },\r\n            value: {\r\n              offsetY: -15,\r\n              formatter(val) {\r\n                return `${parseInt(val)} %`\r\n              }\r\n            },\r\n            value: {\r\n              show: true,\r\n              offsetY: 5,\r\n              label: 'Available',\r\n              formatter(val) {\r\n                return `${parseInt(val)} %`\r\n              }\r\n            },\r\n            value: {\r\n              show: true,\r\n              offsetY: 5,\r\n              label: 'Booked',\r\n              formatter(val) {\r\n                return `${parseInt(val)} %`\r\n              }\r\n            }\r\n        }          \r\n      }\r\n    },\r\n      responsive: [\r\n      {\r\n        breakpoint: 1325,\r\n        options: {\r\n          chart: {\r\n            height: 100\r\n          }\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 1200,\r\n        options: {\r\n          chart: {\r\n            height: 120\r\n          }\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 1065,\r\n        options: {\r\n          chart: {\r\n            height: 100\r\n          }\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 992,\r\n        options: {\r\n          chart: {\r\n            height: 120\r\n          }\r\n        }\r\n      }\r\n    ]\r\n  }\r\n  }\r\n\r\n  return (\r\n    <Card className='earnings-card'>\r\n      <CardBody>\r\n        <Row>\r\n          <Col xs='6'>\r\n            <CardTitle className='mb-1'>Ad Space</CardTitle>\r\n          </Col>\r\n          <Col xs='6'>\r\n            <Chart options={options} series={[78, 22]} type='pie' height={120} />\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Earnings","import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport {\r\n  Card,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledButtonDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle\r\n} from 'reactstrap'\r\nimport Chart from 'react-apexcharts'\r\n\r\nconst RevenueReport = props => {\r\n  const [data, setData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-development/revenue-report').then(res => setData(res.data))\r\n  }, [])\r\n\r\n  const revenueOptions = {\r\n      chart: {\r\n        stacked: true,\r\n        type: 'bar',\r\n        toolbar: { show: false }\r\n      },\r\n      grid: {\r\n        padding: {\r\n          top: -20,\r\n          bottom: -10\r\n        },\r\n        yaxis: {\r\n          lines: { show: false }\r\n        }\r\n      },\r\n      xaxis: {\r\n        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep'],\r\n        labels: {\r\n          style: {\r\n            colors: '#b9b9c3',\r\n            fontSize: '0.86rem'\r\n          }\r\n        },\r\n        axisTicks: {\r\n          show: false\r\n        },\r\n        axisBorder: {\r\n          show: false\r\n        }\r\n      },\r\n      legend: {\r\n        show: false\r\n      },\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      colors: [props.primary, props.warning],\r\n      plotOptions: {\r\n        bar: {\r\n          columnWidth: '17%',\r\n          endingShape: 'rounded'\r\n        },\r\n        distributed: true\r\n      },\r\n      yaxis: {\r\n        labels: {\r\n          style: {\r\n            colors: '#b9b9c3',\r\n            fontSize: '0.86rem'\r\n          }\r\n        }\r\n      }\r\n    },\r\n    revenueSeries = [\r\n      {\r\n        name: 'Earning',\r\n        data: [95, 177, 284, 256, 105, 63, 168, 218, 72]\r\n      },\r\n      {\r\n        name: 'Expense',\r\n        data: [-145, -80, -60, -180, -100, -60, -85, -75, -100]\r\n      }\r\n    ]\r\n\r\n  const budgetSeries = [\r\n      {\r\n        data: [61, 48, 69, 52, 60, 40, 79, 60, 59, 43, 62]\r\n      },\r\n      {\r\n        data: [20, 10, 30, 15, 23, 0, 25, 15, 20, 5, 27]\r\n      }\r\n    ],\r\n    budgetOptions = {\r\n      chart: {\r\n        toolbar: { show: false },\r\n        zoom: { enabled: false },\r\n        type: 'line',\r\n        sparkline: { enabled: true }\r\n      },\r\n      stroke: {\r\n        curve: 'smooth',\r\n        dashArray: [0, 5],\r\n        width: [2]\r\n      },\r\n      colors: [props.primary, '#dcdae3'],\r\n      tooltip: {\r\n        enabled: false\r\n      }\r\n    }\r\n\r\n  return data !== null ? (\r\n    <Card className='card-revenue-budget'>\r\n      <Row className='mx-0'>\r\n        <Col className='revenue-report-wrapper' md='8' xs='12'>\r\n          <div className='d-sm-flex justify-content-between align-items-center mb-3'>\r\n            <CardTitle className='mb-50 mb-sm-0'>Registrations</CardTitle>\r\n            <div className='d-flex align-items-center'>\r\n              <div className='d-flex align-items-center mr-2'>\r\n                <span className='bullet bullet-primary mr-50 cursor-pointer'></span>\r\n                <span>Screens</span>\r\n              </div>\r\n              <div className='d-flex align-items-center'>\r\n                <span className='bullet bullet-warning mr-50 cursor-pointer'></span>\r\n                <span>Apps</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Chart id='revenue-report-chart' type='bar' height='230' options={revenueOptions} series={revenueSeries} />\r\n        </Col>\r\n        <Col className='budget-wrapper' md='4' xs='12'>\r\n          <h2 className='mb-25'>${data.price}</h2>\r\n          <div className='d-flex justify-content-center'>\r\n            <span className='font-weight-bolder mr-25'>FARI Price</span>\r\n            <span>{data.budget}</span>\r\n          </div>\r\n          <Chart id='budget-chart' type='line' height='80' options={budgetOptions} series={budgetSeries} />\r\n          <Button color='primary'>Buy the FARI Token</Button>\r\n        </Col>\r\n      </Row>\r\n    </Card>\r\n  ) : null\r\n}\r\n\r\nexport default RevenueReport\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\n\r\n// ** Custom Components\r\nimport TinyChartStats from '@components/widgets/stats/TinyChartStats'\r\n\r\nconst OrdersBarChart = ({ warning }) => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-network/orders-bar-chart').then(res => setData(res.data))\r\n    return () => setData(null)\r\n  }, [])\r\n\r\n  const options = {\r\n    chart: {\r\n      stacked: true,\r\n      toolbar: {\r\n        show: false\r\n      }\r\n    },\r\n    grid: {\r\n      show: false,\r\n      padding: {\r\n        left: 0,\r\n        right: 0,\r\n        top: -15,\r\n        bottom: -15\r\n      }\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: false,\r\n        columnWidth: '20%',\r\n        borderRadius: [0, 5],\r\n        colors: {\r\n          backgroundBarColors: ['#f3f3f3', '#f3f3f3', '#f3f3f3', '#f3f3f3', '#f3f3f3'],\r\n          backgroundBarRadius: 5\r\n        }\r\n      }\r\n    },\r\n    legend: {\r\n      show: false\r\n    },\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    colors: [warning],\r\n    xaxis: {\r\n      labels: {\r\n        show: false\r\n      },\r\n      axisBorder: {\r\n        show: false\r\n      },\r\n      axisTicks: {\r\n        show: false\r\n      }\r\n    },\r\n    yaxis: {\r\n      show: false\r\n    },\r\n    tooltip: {\r\n      x: {\r\n        show: false\r\n      }\r\n    }\r\n  }\r\n\r\n  return data !== null ? (\r\n    <TinyChartStats\r\n      height={70}\r\n      type='bar'\r\n      options={options}\r\n      title={data.title}\r\n      stats={data.statistics}\r\n      series={data.series}\r\n    />\r\n  ) : null\r\n}\r\n\r\nexport default OrdersBarChart\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\n\r\n// ** Custom Components\r\nimport TinyChartStats from '@components/widgets/stats/TinyChartStats'\r\n\r\nconst ProfitLineChart = ({ info }) => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-network/profit-line-chart').then(res => setData(res.data))\r\n    return () => setData(null)\r\n  }, [])\r\n\r\n  const options = {\r\n    chart: {\r\n      toolbar: {\r\n        show: false\r\n      },\r\n      zoom: {\r\n        enabled: false\r\n      }\r\n    },\r\n    grid: {\r\n      borderColor: '#EBEBEB',\r\n      strokeDashArray: 5,\r\n      xaxis: {\r\n        lines: {\r\n          show: true\r\n        }\r\n      },\r\n      yaxis: {\r\n        lines: {\r\n          show: false\r\n        }\r\n      },\r\n      padding: {\r\n        top: -30,\r\n        bottom: -10\r\n      }\r\n    },\r\n    stroke: {\r\n      width: 3\r\n    },\r\n    colors: [info],\r\n    series: [\r\n      {\r\n        data: [0, 20, 5, 30, 15, 45]\r\n      }\r\n    ],\r\n    markers: {\r\n      size: 2,\r\n      colors: info,\r\n      strokeColors: info,\r\n      strokeWidth: 2,\r\n      strokeOpacity: 1,\r\n      strokeDashArray: 0,\r\n      fillOpacity: 1,\r\n      discrete: [\r\n        {\r\n          seriesIndex: 0,\r\n          dataPointIndex: 5,\r\n          fillColor: '#ffffff',\r\n          strokeColor: info,\r\n          size: 5\r\n        }\r\n      ],\r\n      shape: 'circle',\r\n      radius: 2,\r\n      hover: {\r\n        size: 3\r\n      }\r\n    },\r\n    xaxis: {\r\n      labels: {\r\n        show: true,\r\n        style: {\r\n          fontSize: '0px'\r\n        }\r\n      },\r\n      axisBorder: {\r\n        show: false\r\n      },\r\n      axisTicks: {\r\n        show: false\r\n      }\r\n    },\r\n    yaxis: {\r\n      show: false\r\n    },\r\n    tooltip: {\r\n      x: {\r\n        show: false\r\n      }\r\n    }\r\n  }\r\n\r\n  return data !== null ? (\r\n    <TinyChartStats\r\n      height={70}\r\n      type='line'\r\n      options={options}\r\n      title={data.title}\r\n      stats={data.statistics}\r\n      series={data.series}\r\n    />\r\n  ) : null\r\n}\r\n\r\nexport default ProfitLineChart\r\n","import { useContext } from 'react'\nimport { Row, Col } from 'reactstrap'\nimport { ThemeColors } from '@src/utility/context/ThemeColors'\nimport Earnings from '@src/views/ui-elements/cards/development/Earnings'\nimport RevenueReport from '@src/views/ui-elements/cards/development/RevenueReport'\nimport OrdersBarChart from '@src/views/ui-elements/cards/network/OrdersBarChart'\nimport ProfitLineChart from '@src/views/ui-elements/cards/network/ProfitLineChart'\n\nimport '@styles/react/libs/charts/apex-charts.scss'\nimport '@styles/base/pages/dashboard-network.scss'\n\nconst NetworkDashboard = () => {\n  const { colors } = useContext(ThemeColors)\n   \n  return (\n    <div id='dashboard-network'>\n      <Row className='match-height'>\n        <Col lg='4' md='12'>\n          <Row className='match-height'>\n            <Col lg='6' md='3' xs='6'>\n              <OrdersBarChart warning={colors.warning.main} />\n            </Col>\n            <Col lg='6' md='3' xs='6'>\n              <ProfitLineChart info={colors.info.main} />\n            </Col>\n            <Col lg='12' md='6' xs='12'>\n              <Earnings success={colors.success.main} />\n            </Col>\n          </Row>\n        </Col>\n        <Col lg='8' md='12'>\n          <RevenueReport primary={colors.primary.main} warning={colors.warning.main} />\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default NetworkDashboard\n"],"sourceRoot":""}