{"version":3,"sources":["views/components/badge/BadgeLink.js","views/components/badge/BadgeGlow.js","views/components/badge/BadgeBlock.js","views/components/badge/BadgeIcons.js","views/components/badge/BadgeLight.js","views/components/badge/BadgeContextual.js","views/components/badge/BadgeSourceCode.js","views/components/badge/index.js","@core/components/breadcrumbs/index.js","@core/components/card-snippet/index.js"],"names":["BadgeLink","color","href","size","className","BadgeGlow","BadgeBlock","BadgeIcons","BadgeLight","BadgeContextual","badgeContextual","badgeGlow","badgeLight","badgeIcons","badgeLink","badgeBlock","Badges","useEffect","Prism","highlightAll","breadCrumbTitle","breadCrumbParent","breadCrumbActive","sm","title","code","md","BreadCrumbs","props","breadCrumbParent2","breadCrumbParent3","tag","to","active","end","Link","CardSnippet","children","noBody","iconCode","isOpen","setIsOpen","useState","IconCode","Wrapper","Fragment","CardBody","onClick"],"mappings":"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","file":"static/js/79.8cf8f09f.chunk.js","sourcesContent":["// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\n// ** Icons Imports\r\nimport { Link } from 'react-feather'\r\n\r\nconst BadgeLink = () => {\r\n  return (\r\n    <Badge color='primary' href='#'>\r\n      <Link size={12} className='me-25' />\r\n      <span className='align-middle'>Link Badge</span>\r\n    </Badge>\r\n  )\r\n}\r\nexport default BadgeLink\r\n","// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgeGlow = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Badge color='primary' className='badge-glow'>\r\n        Primary\r\n      </Badge>\r\n      <Badge color='secondary' className='badge-glow'>\r\n        Secondary\r\n      </Badge>\r\n      <Badge color='success' className='badge-glow'>\r\n        Success\r\n      </Badge>\r\n      <Badge color='danger' className='badge-glow'>\r\n        Danger\r\n      </Badge>\r\n      <Badge color='warning' className='badge-glow'>\r\n        Warning\r\n      </Badge>\r\n      <Badge color='info' className='badge-glow'>\r\n        Info\r\n      </Badge>\r\n      <Badge color='dark' className='badge-glow'>\r\n        Dark\r\n      </Badge>\r\n    </div>\r\n  )\r\n}\r\nexport default BadgeGlow\r\n","// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgeBlock = () => {\r\n  return (\r\n    <Badge color='primary' className='d-block'>\r\n      <span>Block Badge</span>\r\n    </Badge>\r\n  )\r\n}\r\nexport default BadgeBlock\r\n","// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\n// ** Icons Imports\r\nimport { Star } from 'react-feather'\r\n\r\nconst BadgeIcons = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Badge color='primary'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle ms-25'>Primary</span>\r\n      </Badge>\r\n      <Badge color='secondary'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle ms-25'>Secondary</span>\r\n      </Badge>\r\n      <Badge color='success'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle ms-25'>Success</span>\r\n      </Badge>\r\n      <Badge color='danger'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle ms-25'>Danger</span>\r\n      </Badge>\r\n      <Badge color='warning'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle ms-25'>Warning</span>\r\n      </Badge>\r\n      <Badge color='info'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle ms-25'>Info</span>\r\n      </Badge>\r\n      <Badge color='dark'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle ms-25'>Dark</span>\r\n      </Badge>\r\n    </div>\r\n  )\r\n}\r\nexport default BadgeIcons\r\n","// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgeLight = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Badge color='light-primary'>Primary</Badge>\r\n      <Badge color='light-secondary'>Secondary</Badge>\r\n      <Badge color='light-success'>Success</Badge>\r\n      <Badge color='light-danger'>Danger</Badge>\r\n      <Badge color='light-warning'>Warning</Badge>\r\n      <Badge color='light-info'>Info</Badge>\r\n      <Badge color='light-dark'>Dark</Badge>\r\n    </div>\r\n  )\r\n}\r\nexport default BadgeLight\r\n","// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgeContextual = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Badge color='primary'>Primary</Badge>\r\n      <Badge color='secondary'>Secondary</Badge>\r\n      <Badge color='success'>Success</Badge>\r\n      <Badge color='danger'>Danger</Badge>\r\n      <Badge color='warning'>Warning</Badge>\r\n      <Badge color='info'>Info</Badge>\r\n      <Badge color='dark'>Dark</Badge>\r\n    </div>\r\n  )\r\n}\r\nexport default BadgeContextual\r\n","export const badgeContextual = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgeContextual = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Badge color='primary'>\r\n        Primary\r\n      </Badge>\r\n      <Badge color='secondary'>\r\n        Secondary\r\n      </Badge>\r\n      <Badge color='success'>\r\n        Success\r\n      </Badge>\r\n      <Badge color='danger'>\r\n        Danger\r\n      </Badge>\r\n      <Badge color='warning'>\r\n        Warning\r\n      </Badge>\r\n      <Badge color='info'>\r\n        Info\r\n      </Badge>\r\n      <Badge color='dark'>\r\n        Dark\r\n      </Badge>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default BadgeContextual\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgeGlow = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgeGlow = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Badge color='primary' className='badge-glow'>\r\n        Primary\r\n      </Badge>\r\n      <Badge color='secondary' className='badge-glow'>\r\n        Secondary\r\n      </Badge>\r\n      <Badge color='success' className='badge-glow'>\r\n        Success\r\n      </Badge>\r\n      <Badge color='danger' className='badge-glow'>\r\n        Danger\r\n      </Badge>\r\n      <Badge color='warning' className='badge-glow'>\r\n        Warning\r\n      </Badge>\r\n      <Badge color='info' className='badge-glow'>\r\n        Info\r\n      </Badge>\r\n      <Badge color='dark' className='badge-glow'>\r\n        Dark\r\n      </Badge>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default BadgeGlow\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgeLight = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgeLight = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Badge color='light-primary'>\r\n        Primary\r\n      </Badge>\r\n      <Badge color='light-secondary'>\r\n        Secondary\r\n      </Badge>\r\n      <Badge color='light-success'>\r\n        Success\r\n      </Badge>\r\n      <Badge color='light-danger'>\r\n        Danger\r\n      </Badge>\r\n      <Badge color='light-warning'>\r\n        Warning\r\n      </Badge>\r\n      <Badge color='light-info'>\r\n        Info\r\n      </Badge>\r\n      <Badge color='light-dark'>\r\n        Dark\r\n      </Badge>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default BadgeLight\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgeIcons = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Badge } from 'reactstrap'\r\nimport { Star } from 'react-feather'\r\n\r\nconst BadgeIcons = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Badge color='primary'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle'>Primary</span>\r\n      </Badge>\r\n      <Badge color='secondary'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle'>Secondary</span>\r\n      </Badge>\r\n      <Badge color='success'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle'>Success</span>\r\n      </Badge>\r\n      <Badge color='danger'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle'>Danger</span>\r\n      </Badge>\r\n      <Badge color='warning'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle'>Warning</span>\r\n      </Badge>\r\n      <Badge color='info'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle'>Info</span>\r\n      </Badge>\r\n      <Badge color='dark'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle'>Dark</span>\r\n      </Badge>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default BadgeIcons\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgeLink = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Badge } from 'reactstrap'\r\nimport { Link } from 'react-feather'\r\n\r\nconst BadgeLink = () => {\r\n  return (\r\n    <Badge color='primary' href='#'>\r\n      <Link size={12} className='me-25' />\r\n      <span>Link Badge</span>\r\n    </Badge>\r\n  )\r\n}\r\nexport default BadgeLink\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgeBlock = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgeBlock = () => {\r\n  return (\r\n    <Badge color='primary' className='d-block'>\r\n      <span>Block Badge</span>\r\n    </Badge>\r\n  )\r\n}\r\nexport default BadgeBlock\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n","// ** React Imports\r\nimport { Fragment, useEffect } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, CardText } from 'reactstrap'\r\n\r\n// ** Third Party Components\r\nimport Prism from 'prismjs'\r\n\r\n// ** Custom Components\r\nimport Card from '@components/card-snippet'\r\nimport BreadCrumbs from '@components/breadcrumbs'\r\n\r\n// ** Demo Components\r\nimport BadgeLink from './BadgeLink'\r\nimport BadgeGlow from './BadgeGlow'\r\nimport BadgeBlock from './BadgeBlock'\r\nimport BadgeIcons from './BadgeIcons'\r\nimport BadgeLight from './BadgeLight'\r\nimport BadgeContextual from './BadgeContextual'\r\n\r\n// ** Source Code\r\nimport { badgeContextual, badgeGlow, badgeLight, badgeIcons, badgeLink, badgeBlock } from './BadgeSourceCode'\r\n\r\nconst Badges = () => {\r\n  useEffect(() => {\r\n    Prism.highlightAll()\r\n  }, [])\r\n  return (\r\n    <Fragment>\r\n      <BreadCrumbs breadCrumbTitle='Badges' breadCrumbParent='Components' breadCrumbActive='Badges' />\r\n      <Row>\r\n        <Col sm='12'>\r\n          <Card title='Contextual Badges' code={badgeContextual}>\r\n            <CardText className='mb-0'>\r\n              Use prop <code>color</code> with <code>Badge</code> tag to create badge with different colors.\r\n            </CardText>\r\n            <BadgeContextual />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Glow Badges' code={badgeGlow}>\r\n            <CardText className='mb-0'>\r\n              Use class <code>badge-glow</code> with <code>Badge</code> tag to add glow effect to your badge\r\n            </CardText>\r\n            <BadgeGlow />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Light Badges' code={badgeLight}>\r\n            <CardText className='mb-0'>\r\n              Use prop <code>color=\"light-COLOR_NAME\"</code> with <code>Badge</code> tag to create badge with different\r\n              colors.\r\n            </CardText>\r\n            <BadgeLight />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Badges With Icons' code={badgeIcons}>\r\n            <BadgeIcons />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Link Badge' code={badgeLink}>\r\n            <CardText>\r\n              Use <code>href=\"#\"</code> prop to use badge as a link.\r\n            </CardText>\r\n            <BadgeLink />\r\n          </Card>\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Block Badge' code={badgeBlock}>\r\n            <CardText>\r\n              Use <code>.d-block</code> class to make badge display as block.\r\n            </CardText>\r\n            <BadgeBlock />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default Badges\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-start mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  {breadCrumbParent}\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\r\n        <div className='breadcrumb-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' end>\r\n              <DropdownItem tag={Link} to='/apps/focus'>\r\n                <CheckSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Focus</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/instafriend'>\r\n                <MessageSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Instafriend</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/tellfari'>\r\n                <Mail className='me-1' size={14} />\r\n                <span className='align-middle'>Tellfari</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/book'>\r\n                <Calendar className='me-1' size={14} />\r\n                <span className='align-middle'>Book</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n","// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport { Code } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\r\n\r\nconst CardSnippet = props => {\r\n  // ** Props\r\n  const { title, children, noBody, code, iconCode } = props\r\n\r\n  // ** State\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  // ** If user passes custom icon then render that else render default icon\r\n  const IconCode = iconCode ? iconCode : <Code size={15} />\r\n\r\n  // ** To toggle collapse\r\n  const toggle = () => setIsOpen(!isOpen)\r\n\r\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\r\n  const Wrapper = noBody ? Fragment : CardBody\r\n\r\n  return (\r\n    <Card className='card-snippet'>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>{title}</CardTitle>\r\n        <div className='views cursor-pointer' onClick={toggle}>\r\n          {IconCode}\r\n        </div>\r\n      </CardHeader>\r\n      <Wrapper>{children}</Wrapper>\r\n      <Collapse isOpen={isOpen}>\r\n        <CardBody>{code}</CardBody>\r\n      </Collapse>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CardSnippet\r\n\r\n// ** PropTypes\r\nCardSnippet.propTypes = {\r\n  code: PropTypes.node,\r\n  noBody: PropTypes.bool,\r\n  children: PropTypes.any,\r\n  iconCode: PropTypes.node,\r\n  className: PropTypes.string,\r\n  title: PropTypes.string.isRequired\r\n}\r\n"],"sourceRoot":""}