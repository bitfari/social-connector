{"version":3,"sources":["@core/components/input-password-toggle/index.js","views/forms/form-elements/input-groups/InputGroupBasic.js","views/forms/form-elements/input-groups/InputGroupSizes.js","views/forms/form-elements/input-groups/InputGroupMerged.js","views/forms/form-elements/input-groups/InputGroupButtons.js","views/forms/form-elements/input-groups/InputGroupCbAndRadio.js","views/forms/form-elements/input-groups/InputGroupDropdown.js","views/forms/form-elements/input-groups/InputGroupSourceCode.js","views/forms/form-elements/input-groups/index.js","@core/components/breadcrumbs/index.js","@core/components/card-snippet/index.js"],"names":["InputPasswordToggle","forwardRef","props","ref","label","hideIcon","showIcon","visible","className","htmlFor","placeholder","iconSize","inputClassName","invalid","rest","inputVisibility","setInputVisibility","useState","for","classnames","type","id","onClick","size","renderIcon","defaultProps","InputGroupBasic","InputGroupSizes","InputGroupMerged","InputGroupButtons","md","sm","color","outline","InputGroupCbAndRadio","name","InputGroupDropdowns","dropdownOpen","setDropdownOpen","dropdownIcon","setDropdownIcon","dropdownRight","setDropdownRight","isOpen","toggle","caret","disabled","divider","inputGroupBasic","inputGroupMerged","inputGroupCBRadio","inputGroupButtons","inputGroupDropdowns","inputGroupSizes","InputGroups","useEffect","Prism","highlightAll","breadCrumbTitle","breadCrumbParent","breadCrumbActive","title","code","InputGroupDropdown","BreadCrumbs","breadCrumbParent2","breadCrumbParent3","tag","to","active","end","Link","CardSnippet","children","noBody","iconCode","setIsOpen","IconCode","Wrapper","Fragment","CardBody"],"mappings":"iHAAA,4DAWA,MAAMA,EAAsBC,sBAAW,CAACC,EAAOC,KAE7C,MAAM,MACJC,EADI,SAEJC,EAFI,SAGJC,EAHI,QAIJC,EAJI,UAKJC,EALI,QAMJC,EANI,YAOJC,EAPI,SAQJC,EARI,eASJC,EATI,QAUJC,KACGC,GACDZ,GAGGa,EAAiBC,GAAsBC,mBAASV,GAavD,OACE,eAAC,WAAD,WACGH,EACC,cAAC,IAAD,CAAOI,UAAU,aAAaU,IAAKT,EAAnC,SACGL,IAED,KACJ,eAAC,IAAD,CACEI,UAAWW,IAAW,CACpB,CAACX,GAAYA,EACb,aAAcK,IAHlB,UAME,cAAC,IAAD,CACEV,IAAKA,EACLU,QAASA,EACTO,MAA0B,IAApBL,EAA4B,WAAa,OAC/CL,YAAaA,GAA4B,mDACzCF,UAAWW,IAAW,CACpB,CAACP,GAAiBA,OAGfR,GAASK,EACV,CACEY,GAAIZ,GAEN,MACAK,IAGN,cAAC,IAAD,CAAgBN,UAAU,iBAAiBc,QAAS,IAAMN,GAAoBD,GAA9E,SAxCa,MACjB,MAAMQ,EAAOZ,GAAsB,GAEnC,OAAwB,IAApBI,EACKV,GAAsB,cAAC,IAAD,CAAKkB,KAAMA,IAEjCjB,GAAsB,cAAC,IAAD,CAAQiB,KAAMA,KAmCtCC,cAOIxB,MA2BfA,EAAoByB,aAAe,CACjClB,SAAS,I,yHCpEImB,MAlCS,IAEpB,eAAC,WAAD,WACE,eAAC,IAAD,CAAYlB,UAAU,OAAtB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAQe,KAAM,OAEhB,cAAC,IAAD,CAAOb,YAAY,iBAErB,cAAC,IAAD,CAAqBF,UAAU,OAAOJ,MAAM,WAAWK,QAAQ,2BAC/D,eAAC,IAAD,CAAYD,UAAU,OAAtB,UACE,cAAC,IAAD,gBACA,cAAC,IAAD,CAAOE,YAAY,gBAErB,eAAC,IAAD,CAAYF,UAAU,OAAtB,UACE,cAAC,IAAD,CAAOE,YAAY,yBACnB,cAAC,IAAD,8BAEF,eAAC,IAAD,CAAYF,UAAU,OAAtB,UACE,cAAC,IAAD,yCACA,cAAC,IAAD,OAEF,eAAC,IAAD,CAAYA,UAAU,OAAtB,UACE,cAAC,IAAD,gBACA,cAAC,IAAD,CAAOE,YAAY,WAErB,eAAC,IAAD,WACE,cAAC,IAAD,4BACA,cAAC,IAAD,CAAOU,KAAK,mBCTLO,MArBS,IAEpB,eAAC,WAAD,WACE,eAAC,IAAD,CAAYnB,UAAU,OAAOe,KAAK,KAAlC,UACE,cAAC,IAAD,gBACA,cAAC,IAAD,CAAOb,YAAY,gBAGrB,eAAC,IAAD,CAAYF,UAAU,OAAtB,UACE,cAAC,IAAD,gBACA,cAAC,IAAD,CAAOE,YAAY,gBAGrB,eAAC,IAAD,CAAYa,KAAK,KAAjB,UACE,cAAC,IAAD,gBACA,cAAC,IAAD,CAAOb,YAAY,mBCqBZkB,MAlCU,IAErB,eAAC,WAAD,WACE,eAAC,IAAD,CAAYpB,UAAU,yBAAtB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAQe,KAAM,OAEhB,cAAC,IAAD,CAAOb,YAAY,iBAErB,cAAC,IAAD,CAAqBF,UAAU,yBAAyBJ,MAAM,WAAWK,QAAQ,mBACjF,eAAC,IAAD,CAAYD,UAAU,yBAAtB,UACE,cAAC,IAAD,gBACA,cAAC,IAAD,CAAOE,YAAY,gBAErB,eAAC,IAAD,CAAYF,UAAU,yBAAtB,UACE,cAAC,IAAD,CAAOE,YAAY,yBACnB,cAAC,IAAD,8BAEF,eAAC,IAAD,CAAYF,UAAU,yBAAtB,UACE,cAAC,IAAD,yCACA,cAAC,IAAD,OAEF,eAAC,IAAD,CAAYA,UAAU,yBAAtB,UACE,cAAC,IAAD,gBACA,cAAC,IAAD,CAAOE,YAAY,WAErB,eAAC,IAAD,CAAYF,UAAU,oBAAtB,UACE,cAAC,IAAD,4BACA,cAAC,IAAD,CAAOY,KAAK,mBCJLS,MA1BW,IAEtB,eAAC,KAAD,WACE,cAAC,IAAD,CAAKrB,UAAU,OAAOsB,GAAG,IAAIC,GAAG,KAAhC,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOrB,YAAY,yBACnB,cAAC,IAAD,CAAQsB,MAAM,UAAUC,SAAO,EAA/B,qBAKJ,cAAC,IAAD,CAAKzB,UAAU,OAAOsB,GAAG,IAAIC,GAAG,KAAhC,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAQC,MAAM,UAAUC,SAAO,EAA/B,SACE,cAAC,IAAD,CAAQV,KAAM,OAEhB,cAAC,IAAD,CAAOH,KAAK,OAAOV,YAAY,yBAC/B,cAAC,IAAD,CAAQsB,MAAM,UAAUC,SAAO,EAA/B,8BC+BKC,MAjDc,IAEzB,eAAC,KAAD,WACE,cAAC,IAAD,CAAOhB,IAAI,SAAX,uCACA,cAAC,IAAD,CAAKV,UAAU,OAAOsB,GAAG,IAAIC,GAAG,KAAhC,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,qBAAKvB,UAAU,aAAf,SACE,cAAC,IAAD,CAAOY,KAAK,WAAWC,GAAG,8BAG9B,cAAC,IAAD,CAAOD,KAAK,OAAOV,YAAY,iBAGnC,cAAC,IAAD,CAAKF,UAAU,OAAOsB,GAAG,IAAIC,GAAG,KAAhC,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,qBAAKvB,UAAU,aAAf,SACE,cAAC,IAAD,CAAOY,KAAK,WAAWC,GAAG,8BAG9B,cAAC,IAAD,CAAOD,KAAK,OAAOV,YAAY,iBAGnC,cAAC,IAAD,CAAOQ,IAAI,YAAX,oCACA,cAAC,IAAD,CAAKV,UAAU,eAAesB,GAAG,IAAIC,GAAG,KAAxC,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,qBAAKvB,UAAU,aAAf,SACE,cAAC,IAAD,CAAOY,KAAK,QAAQe,KAAK,yBAAyBd,GAAG,2BAGzD,cAAC,IAAD,CAAOD,KAAK,OAAOV,YAAY,iBAGnC,cAAC,IAAD,CAAKoB,GAAG,IAAIC,GAAG,KAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,qBAAKvB,UAAU,aAAf,SACE,cAAC,IAAD,CAAOY,KAAK,QAAQe,KAAK,yBAAyBd,GAAG,2BAGzD,cAAC,IAAD,CAAOD,KAAK,OAAOV,YAAY,oB,SCgC1B0B,MAtEa,KAC1B,MAAOC,EAAcC,GAAmBrB,oBAAS,IAC1CsB,EAAcC,GAAmBvB,oBAAS,IAC1CwB,EAAeC,GAAoBzB,oBAAS,GAYnD,OACE,eAAC,KAAD,WACE,cAAC,IAAD,CAAKa,GAAG,IAAIC,GAAG,KAAf,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAUY,OAAQN,EAAcO,OAdjB,KACrBN,GAAiBD,IAaX,UACE,cAAC,IAAD,CAAgBL,MAAM,UAAUa,OAAK,EAACZ,SAAO,EAA7C,oBAGA,eAAC,IAAD,WACE,cAAC,IAAD,CAAczB,UAAU,QAAxB,sBACA,cAAC,IAAD,CAAcA,UAAU,QAAQsC,UAAQ,EAAxC,oBAGA,cAAC,IAAD,CAActC,UAAU,QAAQuC,SAAO,IACvC,cAAC,IAAD,CAAcvC,UAAU,QAAxB,kCAGJ,cAAC,IAAD,SAGJ,cAAC,IAAD,CAAKsB,GAAG,IAAIC,GAAG,KAAf,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAUY,OAAQJ,EAAcK,OA7Bb,KACzBJ,GAAiBD,IA4BX,UACE,cAAC,IAAD,CAAgBP,MAAM,UAAUa,OAAK,EAACZ,SAAO,EAA7C,SACE,cAAC,IAAD,CAAMV,KAAM,OAEd,eAAC,IAAD,WACE,cAAC,IAAD,CAAcf,UAAU,QAAxB,sBACA,cAAC,IAAD,CAAcA,UAAU,QAAQsC,UAAQ,EAAxC,oBAGA,cAAC,IAAD,CAActC,UAAU,QAAQuC,SAAO,IACvC,cAAC,IAAD,CAAcvC,UAAU,QAAxB,kCAGJ,cAAC,IAAD,IACA,eAAC,IAAD,CAAUmC,OAAQF,EAAeG,OAxCb,KAC1BF,GAAkBD,IAuCZ,UACE,cAAC,IAAD,CAAgBT,MAAM,UAAUC,SAAO,EAACY,OAAK,EAA7C,oBAGA,eAAC,IAAD,WACE,cAAC,IAAD,CAAcrC,UAAU,QAAxB,sBACA,cAAC,IAAD,CAAcA,UAAU,QAAQsC,UAAQ,EAAxC,oBAGA,cAAC,IAAD,CAActC,UAAU,QAAQuC,SAAO,IACvC,cAAC,IAAD,CAAcvC,UAAU,QAAxB,2CCnEP,MAAMwC,EACX,8BACE,sBAAMxC,UAAU,eAAhB,+0CA+CSyC,EACX,8BACE,sBAAMzC,UAAU,eAAhB,29CA+CS0C,EACX,8BACE,sBAAM1C,UAAU,eAAhB,m8CAuDS2C,EACX,8BACE,sBAAM3C,UAAU,eAAhB,wxBAsCS4C,EACX,8BACE,sBAAM5C,UAAU,eAAhB,k4EAsFS6C,EACX,8BACE,sBAAM7C,UAAU,eAAhB,mpBCpNW8C,UA1CK,KAClBC,qBAAU,KACRC,IAAMC,kBAGN,eAAC,WAAD,WACE,cAAC,IAAD,CAAaC,gBAAgB,eAAeC,iBAAiB,gBAAgBC,iBAAiB,gBAC9F,eAAC,KAAD,CAAKpD,UAAU,eAAf,UACE,cAAC,IAAD,CAAKsB,GAAG,IAAIC,GAAG,KAAf,SACE,cAAC,IAAD,CAAM8B,MAAM,QAAQC,KAAMd,EAA1B,SACE,cAAC,EAAD,QAGJ,cAAC,IAAD,CAAKlB,GAAG,IAAIC,GAAG,KAAf,SACE,cAAC,IAAD,CAAM8B,MAAM,SAASC,KAAMb,EAA3B,SACE,cAAC,EAAD,QAGJ,cAAC,IAAD,CAAKnB,GAAG,IAAIC,GAAG,KAAf,SACE,cAAC,IAAD,CAAM8B,MAAM,SAASC,KAAMT,EAA3B,SACE,cAAC,EAAD,QAGJ,cAAC,IAAD,CAAKvB,GAAG,IAAIC,GAAG,KAAf,SACE,cAAC,IAAD,CAAM8B,MAAM,mBAAmBC,KAAMZ,EAArC,SACE,cAAC,EAAD,QAGJ,cAAC,IAAD,CAAKnB,GAAG,KAAR,SACE,cAAC,IAAD,CAAM8B,MAAM,2BAA2BC,KAAMX,EAA7C,SACE,cAAC,EAAD,QAGJ,cAAC,IAAD,CAAKpB,GAAG,KAAR,SACE,cAAC,IAAD,CAAM8B,MAAM,wBAAwBC,KAAMV,EAA1C,SACE,cAACW,EAAD,gB,iCClEZ,wEAuFeC,IAtEK9D,IAElB,MAAM,gBAAEwD,EAAF,iBAAmBC,EAAnB,kBAAqCM,EAArC,kBAAwDC,EAAxD,iBAA2EN,GAAqB1D,EAEtG,OACE,sBAAKM,UAAU,qBAAf,UACE,qBAAKA,UAAU,2CAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,sBAAKA,UAAU,SAAf,UACGkD,EAAkB,oBAAIlD,UAAU,wCAAd,SAAuDkD,IAAwB,GAClG,qBAAKlD,UAAU,6DAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAgB2D,IAAI,KAApB,SACE,cAAC,IAAD,CAAMC,GAAG,IAAT,oBAEF,cAAC,IAAD,CAAgBD,IAAI,KAAK3D,UAAU,eAAnC,SACGmD,IAEFM,EACC,cAAC,IAAD,CAAgBE,IAAI,KAAK3D,UAAU,eAAnC,SACGyD,IAGH,GAEDC,EACC,cAAC,IAAD,CAAgBC,IAAI,KAAK3D,UAAU,eAAnC,SACG0D,IAGH,GAEF,cAAC,IAAD,CAAgBC,IAAI,KAAKE,QAAM,EAA/B,SACGT,gBAOb,qBAAKpD,UAAU,qEAAf,SACE,qBAAKA,UAAU,4BAAf,SACE,eAAC,KAAD,WACE,cAAC,IAAD,CAAgBwB,MAAM,UAAUT,KAAK,KAAKf,UAAU,qCAApD,SACE,cAAC,IAAD,CAAMe,KAAM,OAEd,eAAC,IAAD,CAAc4C,IAAI,KAAKG,KAAG,EAA1B,UACE,eAAC,IAAD,CAAcH,IAAKI,IAAMH,GAAG,cAA5B,UACE,cAAC,IAAD,CAAa5D,UAAU,OAAOe,KAAM,KACpC,sBAAMf,UAAU,eAAhB,sBAEF,eAAC,IAAD,CAAc2D,IAAKI,IAAMH,GAAG,oBAA5B,UACE,cAAC,IAAD,CAAe5D,UAAU,OAAOe,KAAM,KACtC,sBAAMf,UAAU,eAAhB,4BAEF,eAAC,IAAD,CAAc2D,IAAKI,IAAMH,GAAG,iBAA5B,UACE,cAAC,IAAD,CAAM5D,UAAU,OAAOe,KAAM,KAC7B,sBAAMf,UAAU,eAAhB,yBAEF,eAAC,IAAD,CAAc2D,IAAKI,IAAMH,GAAG,aAA5B,UACE,cAAC,IAAD,CAAU5D,UAAU,OAAOe,KAAM,KACjC,sBAAMf,UAAU,eAAhB,oC,iCC9EhB,mCA0CegE,IAhCKtE,IAElB,MAAM,MAAE2D,EAAF,SAASY,EAAT,OAAmBC,EAAnB,KAA2BZ,EAA3B,SAAiCa,GAAazE,GAG7CyC,EAAQiC,GAAa3D,oBAAS,GAG/B4D,EAAWF,GAAsB,cAAC,IAAD,CAAMpD,KAAM,KAM7CuD,EAAUJ,EAASK,WAAWC,IAEpC,OACE,eAAC,IAAD,CAAMxE,UAAU,eAAhB,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAW2D,IAAI,KAAf,SAAqBN,IACrB,qBAAKrD,UAAU,uBAAuBc,QAT7B,IAAMsD,GAAWjC,GAS1B,SACGkC,OAGL,cAACC,EAAD,UAAUL,IACV,cAAC,IAAD,CAAU9B,OAAQA,EAAlB,SACE,cAAC,IAAD,UAAWmB","file":"static/js/69.09a62638.chunk.js","sourcesContent":["// ** React Imports\r\nimport { Fragment, useState, forwardRef } from 'react'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Eye, EyeOff } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { InputGroup, Input, InputGroupText, Label } from 'reactstrap'\r\n\r\nconst InputPasswordToggle = forwardRef((props, ref) => {\r\n  // ** Props\r\n  const {\r\n    label,\r\n    hideIcon,\r\n    showIcon,\r\n    visible,\r\n    className,\r\n    htmlFor,\r\n    placeholder,\r\n    iconSize,\r\n    inputClassName,\r\n    invalid,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** State\r\n  const [inputVisibility, setInputVisibility] = useState(visible)\r\n\r\n  // ** Renders Icon Based On Visibility\r\n  const renderIcon = () => {\r\n    const size = iconSize ? iconSize : 14\r\n\r\n    if (inputVisibility === false) {\r\n      return hideIcon ? hideIcon : <Eye size={size} />\r\n    } else {\r\n      return showIcon ? showIcon : <EyeOff size={size} />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {label ? (\r\n        <Label className='form-label' for={htmlFor}>\r\n          {label}\r\n        </Label>\r\n      ) : null}\r\n      <InputGroup\r\n        className={classnames({\r\n          [className]: className,\r\n          'is-invalid': invalid\r\n        })}\r\n      >\r\n        <Input\r\n          ref={ref}\r\n          invalid={invalid}\r\n          type={inputVisibility === false ? 'password' : 'text'}\r\n          placeholder={placeholder ? placeholder : '············'}\r\n          className={classnames({\r\n            [inputClassName]: inputClassName\r\n          })}\r\n          /*eslint-disable */\r\n          {...(label && htmlFor\r\n            ? {\r\n                id: htmlFor\r\n              }\r\n            : {})}\r\n          {...rest}\r\n          /*eslint-enable */\r\n        />\r\n        <InputGroupText className='cursor-pointer' onClick={() => setInputVisibility(!inputVisibility)}>\r\n          {renderIcon()}\r\n        </InputGroupText>\r\n      </InputGroup>\r\n    </Fragment>\r\n  )\r\n})\r\n\r\nexport default InputPasswordToggle\r\n\r\n// ** PropTypes\r\nInputPasswordToggle.propTypes = {\r\n  invalid: PropTypes.bool,\r\n  hideIcon: PropTypes.node,\r\n  showIcon: PropTypes.node,\r\n  visible: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  iconSize: PropTypes.number,\r\n  inputClassName: PropTypes.string,\r\n  label(props, propName) {\r\n    // ** If label is defined and htmlFor is undefined throw error\r\n    if (props[propName] && props['htmlFor'] === 'undefined') {\r\n      throw new Error('htmlFor prop is required when label prop is present')\r\n    }\r\n  },\r\n  htmlFor(props, propName) {\r\n    // ** If htmlFor is defined and label is undefined throw error\r\n    if (props[propName] && props['label'] === 'undefined') {\r\n      throw new Error('label prop is required when htmlFor prop is present')\r\n    }\r\n  }\r\n}\r\n\r\n// ** Default Props\r\nInputPasswordToggle.defaultProps = {\r\n  visible: false\r\n}\r\n","import { Fragment } from 'react'\r\nimport { Search } from 'react-feather'\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\nimport { InputGroup, Input, InputGroupText } from 'reactstrap'\r\n\r\nconst InputGroupBasic = () => {\r\n  return (\r\n    <Fragment>\r\n      <InputGroup className='mb-2'>\r\n        <InputGroupText>\r\n          <Search size={14} />\r\n        </InputGroupText>\r\n        <Input placeholder='search...' />\r\n      </InputGroup>\r\n      <InputPasswordToggle className='mb-2' label='Password' htmlFor='basic-default-password' />\r\n      <InputGroup className='mb-2'>\r\n        <InputGroupText>@</InputGroupText>\r\n        <Input placeholder='Username' />\r\n      </InputGroup>\r\n      <InputGroup className='mb-2'>\r\n        <Input placeholder=\"Recipient's username\" />\r\n        <InputGroupText>@example.com</InputGroupText>\r\n      </InputGroup>\r\n      <InputGroup className='mb-2'>\r\n        <InputGroupText>https://example.com/users/</InputGroupText>\r\n        <Input />\r\n      </InputGroup>\r\n      <InputGroup className='mb-2'>\r\n        <InputGroupText>$</InputGroupText>\r\n        <Input placeholder='100' />\r\n      </InputGroup>\r\n      <InputGroup>\r\n        <InputGroupText>With textarea</InputGroupText>\r\n        <Input type='textarea' />\r\n      </InputGroup>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default InputGroupBasic\r\n","import { Fragment } from 'react'\r\nimport { InputGroup, InputGroupText, Input } from 'reactstrap'\r\n\r\nconst InputGroupSizes = () => {\r\n  return (\r\n    <Fragment>\r\n      <InputGroup className='mb-1' size='lg'>\r\n        <InputGroupText>@</InputGroupText>\r\n        <Input placeholder='username' />\r\n      </InputGroup>\r\n\r\n      <InputGroup className='mb-1'>\r\n        <InputGroupText>@</InputGroupText>\r\n        <Input placeholder='username' />\r\n      </InputGroup>\r\n\r\n      <InputGroup size='sm'>\r\n        <InputGroupText>@</InputGroupText>\r\n        <Input placeholder='username' />\r\n      </InputGroup>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default InputGroupSizes\r\n","import { Fragment } from 'react'\r\nimport { Search } from 'react-feather'\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\nimport { InputGroup, Input, InputGroupText } from 'reactstrap'\r\n\r\nconst InputGroupMerged = () => {\r\n  return (\r\n    <Fragment>\r\n      <InputGroup className='input-group-merge mb-2'>\r\n        <InputGroupText>\r\n          <Search size={14} />\r\n        </InputGroupText>\r\n        <Input placeholder='search...' />\r\n      </InputGroup>\r\n      <InputPasswordToggle className='input-group-merge mb-2' label='Password' htmlFor='merge-password' />\r\n      <InputGroup className='input-group-merge mb-2'>\r\n        <InputGroupText>@</InputGroupText>\r\n        <Input placeholder='Username' />\r\n      </InputGroup>\r\n      <InputGroup className='input-group-merge mb-2'>\r\n        <Input placeholder=\"Recipient's username\" />\r\n        <InputGroupText>@example.com</InputGroupText>\r\n      </InputGroup>\r\n      <InputGroup className='input-group-merge mb-2'>\r\n        <InputGroupText>https://example.com/users/</InputGroupText>\r\n        <Input />\r\n      </InputGroup>\r\n      <InputGroup className='input-group-merge mb-2'>\r\n        <InputGroupText>$</InputGroupText>\r\n        <Input placeholder='100' />\r\n      </InputGroup>\r\n      <InputGroup className='input-group-merge'>\r\n        <InputGroupText>With textarea</InputGroupText>\r\n        <Input type='textarea' />\r\n      </InputGroup>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default InputGroupMerged\r\n","import { Button, InputGroup, Input, Row, Col } from 'reactstrap'\r\nimport { Search } from 'react-feather'\r\n\r\nconst InputGroupButtons = () => {\r\n  return (\r\n    <Row>\r\n      <Col className='mb-1' md='6' sm='12'>\r\n        <InputGroup>\r\n          <Input placeholder='Button on right side' />\r\n          <Button color='primary' outline>\r\n            Go\r\n          </Button>\r\n        </InputGroup>\r\n      </Col>\r\n      <Col className='mb-1' md='6' sm='12'>\r\n        <InputGroup>\r\n          <Button color='primary' outline>\r\n            <Search size={12} />\r\n          </Button>\r\n          <Input type='text' placeholder='Button on both sides' />\r\n          <Button color='primary' outline>\r\n            Search !\r\n          </Button>\r\n        </InputGroup>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default InputGroupButtons\r\n","import { InputGroup, InputGroupText, Row, Col, Input, Label } from 'reactstrap'\r\n\r\nconst InputGroupCbAndRadio = () => {\r\n  return (\r\n    <Row>\r\n      <Label for='col-cb'>Input Group with Checkbox</Label>\r\n      <Col className='mb-1' md='6' sm='12'>\r\n        <InputGroup>\r\n          <InputGroupText>\r\n            <div className='form-check'>\r\n              <Input type='checkbox' id='exampleCustomCheckbox' />\r\n            </div>\r\n          </InputGroupText>\r\n          <Input type='text' placeholder='Message' />\r\n        </InputGroup>\r\n      </Col>\r\n      <Col className='mb-1' md='6' sm='12'>\r\n        <InputGroup>\r\n          <InputGroupText>\r\n            <div className='form-check'>\r\n              <Input type='checkbox' id='exampleCustomCheckbox' />\r\n            </div>\r\n          </InputGroupText>\r\n          <Input type='text' placeholder='Message' />\r\n        </InputGroup>\r\n      </Col>\r\n      <Label for='col-radio'>Input Group with Radio</Label>\r\n      <Col className='mb-md-0 mb-1' md='6' sm='12'>\r\n        <InputGroup>\r\n          <InputGroupText>\r\n            <div className='form-check'>\r\n              <Input type='radio' name='inputGroupExampleRadio' id='exampleCustomRadio' />\r\n            </div>\r\n          </InputGroupText>\r\n          <Input type='text' placeholder='Message' />\r\n        </InputGroup>\r\n      </Col>\r\n      <Col md='6' sm='12'>\r\n        <InputGroup>\r\n          <InputGroupText>\r\n            <div className='form-check'>\r\n              <Input type='radio' name='inputGroupExampleRadio' id='exampleCustomRadio' />\r\n            </div>\r\n          </InputGroupText>\r\n          <Input type='text' placeholder='Message' />\r\n        </InputGroup>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default InputGroupCbAndRadio\r\n","import { useState } from 'react'\r\n\r\nimport { Row, Col, Input, InputGroup, Dropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\r\n\r\nimport { Edit } from 'react-feather'\r\n\r\nconst InputGroupDropdowns = () => {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false)\r\n  const [dropdownIcon, setDropdownIcon] = useState(false)\r\n  const [dropdownRight, setDropdownRight] = useState(false)\r\n\r\n  const toggleDropDown = () => {\r\n    setDropdownOpen(!dropdownOpen)\r\n  }\r\n  const toggleDropdownIcon = () => {\r\n    setDropdownIcon(!dropdownIcon)\r\n  }\r\n  const toggleDropDownRight = () => {\r\n    setDropdownRight(!dropdownRight)\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md='6' sm='12'>\r\n        <InputGroup>\r\n          <Dropdown isOpen={dropdownOpen} toggle={toggleDropDown}>\r\n            <DropdownToggle color='primary' caret outline>\r\n              Action\r\n            </DropdownToggle>\r\n            <DropdownMenu>\r\n              <DropdownItem className='w-100'>Action 1</DropdownItem>\r\n              <DropdownItem className='w-100' disabled>\r\n                Action\r\n              </DropdownItem>\r\n              <DropdownItem className='w-100' divider />\r\n              <DropdownItem className='w-100'>Another Action</DropdownItem>\r\n            </DropdownMenu>\r\n          </Dropdown>\r\n          <Input />\r\n        </InputGroup>\r\n      </Col>\r\n      <Col md='6' sm='12'>\r\n        <InputGroup>\r\n          <Dropdown isOpen={dropdownIcon} toggle={toggleDropdownIcon}>\r\n            <DropdownToggle color='primary' caret outline>\r\n              <Edit size={12} />\r\n            </DropdownToggle>\r\n            <DropdownMenu>\r\n              <DropdownItem className='w-100'>Action 1</DropdownItem>\r\n              <DropdownItem className='w-100' disabled>\r\n                Action\r\n              </DropdownItem>\r\n              <DropdownItem className='w-100' divider />\r\n              <DropdownItem className='w-100'>Another Action</DropdownItem>\r\n            </DropdownMenu>\r\n          </Dropdown>\r\n          <Input />\r\n          <Dropdown isOpen={dropdownRight} toggle={toggleDropDownRight}>\r\n            <DropdownToggle color='primary' outline caret>\r\n              Action\r\n            </DropdownToggle>\r\n            <DropdownMenu>\r\n              <DropdownItem className='w-100'>Action 1</DropdownItem>\r\n              <DropdownItem className='w-100' disabled>\r\n                Action\r\n              </DropdownItem>\r\n              <DropdownItem className='w-100' divider />\r\n              <DropdownItem className='w-100'>Another Action</DropdownItem>\r\n            </DropdownMenu>\r\n          </Dropdown>\r\n        </InputGroup>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default InputGroupDropdowns\r\n","export const inputGroupBasic = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Search } from 'react-feather'\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\nimport { InputGroup, Input, InputGroupText } from 'reactstrap'\r\n\r\nconst InputGroupBasic = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <InputGroup className='mb-2'>\r\n          <InputGroupText>\r\n            <Search size={14} />\r\n          </InputGroupText>\r\n        <Input placeholder='search...' />\r\n      </InputGroup>\r\n      <InputPasswordToggle className='mb-2' label='Password' htmlFor='basic-default-password' />\r\n      <InputGroup className='mb-2'>\r\n          <InputGroupText>@</InputGroupText>\r\n        <Input placeholder='Username' />\r\n      </InputGroup>\r\n      <InputGroup className='mb-2'>\r\n        <Input placeholder=\"Recipient's username\" />\r\n          <InputGroupText>@example.com</InputGroupText>\r\n      </InputGroup>\r\n      <InputGroup className='mb-2'>\r\n          <InputGroupText>https://example.com/users/</InputGroupText>\r\n        <Input />\r\n      </InputGroup>\r\n      <InputGroup className='mb-2'>\r\n          <InputGroupText>$</InputGroupText>\r\n        <Input placeholder='100' />\r\n      </InputGroup>\r\n      <InputGroup>\r\n          <InputGroupText>With textarea</InputGroupText>\r\n        <Input type='textarea' />\r\n      </InputGroup>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default InputGroupBasic\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const inputGroupMerged = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Search } from 'react-feather'\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\nimport { InputGroup, Input, InputGroupText } from 'reactstrap'\r\n\r\nconst InputGroupMerged = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <InputGroup className='input-group-merge mb-2'>\r\n          <InputGroupText>\r\n            <Search size={14} />\r\n          </InputGroupText>\r\n        <Input placeholder='search...' />\r\n      </InputGroup>\r\n      <InputPasswordToggle className='input-group-merge mb-2' label='Password' htmlFor='basic-default-password' />\r\n      <InputGroup className='input-group-merge mb-2'>\r\n          <InputGroupText>@</InputGroupText>\r\n        <Input placeholder='Username' />\r\n      </InputGroup>\r\n      <InputGroup className='input-group-merge mb-2'>\r\n        <Input placeholder=\"Recipient's username\" />\r\n          <InputGroupText>@example.com</InputGroupText>\r\n      </InputGroup>\r\n      <InputGroup className='input-group-merge mb-2'>\r\n          <InputGroupText>https://example.com/users/</InputGroupText>\r\n        <Input />\r\n      </InputGroup>\r\n      <InputGroup className='input-group-merge mb-2'>\r\n          <InputGroupText>$</InputGroupText>\r\n        <Input placeholder='100' />\r\n      </InputGroup>\r\n      <InputGroup className='input-group-merge'>\r\n          <InputGroupText>With textarea</InputGroupText>\r\n        <Input type='textarea' />\r\n      </InputGroup>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default InputGroupMerged\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const inputGroupCBRadio = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { InputGroup, Input, InputGroupText, Row, Col, Input } from 'reactstrap'\r\n\r\nconst InputGroupCbAndRadio = () => {\r\n  return (\r\n    <Row>\r\n      <Col md='6' sm='12'>\r\n        <InputGroup>\r\n            <InputGroupText>\r\n              <input type='checkbox' />\r\n            </InputGroupText>\r\n          <Input type='text' placeholder='Message' />\r\n        </InputGroup>\r\n      </Col>\r\n      <Col md='6' sm='12'>\r\n        <InputGroup>\r\n            <InputGroupText>\r\n              <input type='radio' />\r\n            </InputGroupText>\r\n          <Input type='text' placeholder='Message' />\r\n        </InputGroup>\r\n      </Col>\r\n      <small className='fw-semibold w-100 ms-1 my-1'>Custom checkbox and radio</small>\r\n      <Col className='mb-md-0 mb-1' md='6' sm='12'>\r\n        <InputGroup>\r\n          <InputGroupText>\r\n            <div className='form-check'>\r\n              <Input type='checkbox' id='exampleCustomCheckbox' />\r\n            </div>\r\n          </InputGroupText>\r\n          <Input type='text' placeholder='Message' />\r\n        </InputGroup>\r\n      </Col>\r\n      <Col md='6' sm='12'>\r\n        <InputGroup>\r\n          <InputGroupText>\r\n            <div className='form-check'>\r\n              <Input type='radio' id='exampleCustomRadio' />\r\n            </div>\r\n          </InputGroupText>\r\n          <Input type='text' placeholder='Message' />\r\n        </InputGroup>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default InputGroupCbAndRadio\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const inputGroupButtons = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Button, InputGroup, Input,  Row, Col } from 'reactstrap'\r\nimport { Search } from 'react-feather'\r\n\r\nconst InputGroupButtons = () => {\r\n  return (\r\n    <Row>\r\n      <Col className='mb-1' lg='6' md='12'>\r\n        <InputGroup>\r\n          <Input />\r\n            <Button color='primary' outline>\r\n              Go\r\n            </Button>\r\n        </InputGroup>\r\n      </Col>\r\n      <Col className='mb-1' lg='6' md='12'>\r\n        <InputGroup>\r\n            <Button color='primary' outline>\r\n              <Search size={12} />\r\n            </Button>\r\n          <Input type='text' />\r\n            <Button color='primary' outline>\r\n              Search !\r\n            </Button>\r\n        </InputGroup>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default InputGroupButtons\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const inputGroupDropdowns = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\nimport React, { useState } from 'react'\r\nimport {\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Dropdown,\r\n\r\n  InputGroup,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle\r\n} from 'reactstrap'\r\nimport { Edit } from 'react-feather'\r\n\r\nconst InputGroupDropdowns = () => {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false)\r\n  const [dropdownIcon, setDropdownIcon] = useState(false)\r\n  const [dropdownRight, setDropdownRight] = useState(false)\r\n\r\n  const toggleDropDown = () => {\r\n    setDropdownOpen(!dropdownOpen)\r\n  }\r\n  const toggleDropdownIcon = () => {\r\n    setDropdownIcon(!dropdownIcon)\r\n  }\r\n  const toggleDropDownRight = () => {\r\n    setDropdownRight(!dropdownRight)\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col lg='6' md='12'>\r\n        <InputGroup>\r\n          <Dropdown isOpen={dropdownOpen} toggle={toggleDropDown}>\r\n            <DropdownToggle color='primary' caret outline>\r\n              Action\r\n            </DropdownToggle>\r\n            <DropdownMenu>\r\n              <DropdownItem>Action 1</DropdownItem>\r\n              <DropdownItem disabled>Action</DropdownItem>\r\n              <DropdownItem divider />\r\n              <DropdownItem>Another Action</DropdownItem>\r\n            </DropdownMenu>\r\n          </Dropdown>\r\n          <Input />\r\n        </InputGroup>\r\n      </Col>\r\n      <Col lg='6' md='12'>\r\n        <InputGroup>\r\n          <Dropdown isOpen={dropdownIcon} toggle={toggleDropdownIcon}>\r\n            <DropdownToggle color='primary' caret outline>\r\n              <Edit size={12} />\r\n            </DropdownToggle>\r\n            <DropdownMenu>\r\n              <DropdownItem>Action 1</DropdownItem>\r\n              <DropdownItem disabled>Action</DropdownItem>\r\n              <DropdownItem divider />\r\n              <DropdownItem>Another Action</DropdownItem>\r\n            </DropdownMenu>\r\n          </Dropdown>\r\n          <Input />\r\n          <Dropdown isOpen={dropdownRight} toggle={toggleDropDownRight}>\r\n            <DropdownToggle color='primary' outline caret>\r\n              Action\r\n            </DropdownToggle>\r\n            <DropdownMenu>\r\n              <DropdownItem>Action 1</DropdownItem>\r\n              <DropdownItem disabled>Action</DropdownItem>\r\n              <DropdownItem divider />\r\n              <DropdownItem>Another Action</DropdownItem>\r\n            </DropdownMenu>\r\n          </Dropdown>\r\n        </InputGroup>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default InputGroupDropdowns\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const inputGroupSizes = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { InputGroup, InputGroupText, Input } from 'reactstrap'\r\n\r\nconst InputGroupSizes = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <InputGroup className='mb-1' size='lg'>\r\n        <InputGroupText>@</InputGroupText>\r\n        <Input placeholder='username' />\r\n      </InputGroup>\r\n\r\n      <InputGroup className='mb-1'>\r\n        <InputGroupText>@</InputGroupText>\r\n        <Input placeholder='username' />\r\n      </InputGroup>\r\n\r\n      <InputGroup size='sm'>\r\n        <InputGroupText>@</InputGroupText>\r\n        <Input placeholder='username' />\r\n      </InputGroup>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default InputGroupSizes\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n","// ** React Imports\r\nimport { Fragment, useEffect } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Third Party Components\r\nimport Prism from 'prismjs'\r\n\r\n// ** Custom Components\r\nimport Card from '@components/card-snippet'\r\nimport Breadcrumbs from '@components/breadcrumbs'\r\n\r\n// ** Demo Components\r\nimport InputGroupBasic from './InputGroupBasic'\r\nimport InputGroupSizes from './InputGroupSizes'\r\nimport InputGroupMerged from './InputGroupMerged'\r\nimport InputGroupButtons from './InputGroupButtons'\r\nimport InputCbAndRadio from './InputGroupCbAndRadio'\r\nimport InputGroupDropdown from './InputGroupDropdown'\r\n\r\n// ** Source Code\r\nimport {\r\n  inputGroupBasic,\r\n  inputGroupSizes,\r\n  inputGroupMerged,\r\n  inputGroupCBRadio,\r\n  inputGroupButtons,\r\n  inputGroupDropdowns\r\n} from './InputGroupSourceCode'\r\n\r\nconst InputGroups = () => {\r\n  useEffect(() => {\r\n    Prism.highlightAll()\r\n  })\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumbs breadCrumbTitle='Input Groups' breadCrumbParent='Form Elements' breadCrumbActive='InputGroups' />\r\n      <Row className='match-height'>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Basic' code={inputGroupBasic}>\r\n            <InputGroupBasic />\r\n          </Card>\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Merged' code={inputGroupMerged}>\r\n            <InputGroupMerged />\r\n          </Card>\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Sizing' code={inputGroupSizes}>\r\n            <InputGroupSizes />\r\n          </Card>\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Checkbox & Radio' code={inputGroupCBRadio}>\r\n            <InputCbAndRadio />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Input Group with Buttons' code={inputGroupButtons}>\r\n            <InputGroupButtons />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Input Group Dropdowns' code={inputGroupDropdowns}>\r\n            <InputGroupDropdown />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default InputGroups\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-start mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  {breadCrumbParent}\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\r\n        <div className='breadcrumb-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' end>\r\n              <DropdownItem tag={Link} to='/apps/focus'>\r\n                <CheckSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Focus</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/instafriend'>\r\n                <MessageSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Instafriend</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/tellfari'>\r\n                <Mail className='me-1' size={14} />\r\n                <span className='align-middle'>Tellfari</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/book'>\r\n                <Calendar className='me-1' size={14} />\r\n                <span className='align-middle'>Book</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n","// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport { Code } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\r\n\r\nconst CardSnippet = props => {\r\n  // ** Props\r\n  const { title, children, noBody, code, iconCode } = props\r\n\r\n  // ** State\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  // ** If user passes custom icon then render that else render default icon\r\n  const IconCode = iconCode ? iconCode : <Code size={15} />\r\n\r\n  // ** To toggle collapse\r\n  const toggle = () => setIsOpen(!isOpen)\r\n\r\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\r\n  const Wrapper = noBody ? Fragment : CardBody\r\n\r\n  return (\r\n    <Card className='card-snippet'>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>{title}</CardTitle>\r\n        <div className='views cursor-pointer' onClick={toggle}>\r\n          {IconCode}\r\n        </div>\r\n      </CardHeader>\r\n      <Wrapper>{children}</Wrapper>\r\n      <Collapse isOpen={isOpen}>\r\n        <CardBody>{code}</CardBody>\r\n      </Collapse>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CardSnippet\r\n\r\n// ** PropTypes\r\nCardSnippet.propTypes = {\r\n  code: PropTypes.node,\r\n  noBody: PropTypes.bool,\r\n  children: PropTypes.any,\r\n  iconCode: PropTypes.node,\r\n  className: PropTypes.string,\r\n  title: PropTypes.string.isRequired\r\n}\r\n"],"sourceRoot":""}