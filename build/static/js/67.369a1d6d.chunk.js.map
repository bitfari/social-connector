{"version":3,"sources":["views/extensions/tour/index.js","@core/components/extensions-header/index.js"],"names":["backBtnClass","nextBtnClass","instance","steps","id","title","text","attachTo","element","on","cancelIcon","enabled","buttons","action","cancel","classes","next","back","Content","tour","useContext","ShepherdTourContext","color","onClick","start","outline","TourComponent","subTitle","link","xs","tag","tourOptions","useModalOverlay","ExtensionsHeader","props","className","sm","href","target","rel"],"mappings":"yIAAA,sEAgBA,MAAMA,EAAe,iCACnBC,EAAe,kCAEjB,IAAIC,EAAW,KAEf,MAAMC,EAAQ,CACZ,CACEC,GAAI,SACJC,MAAO,SACPC,KAAM,sBACNC,SAAU,CAAEC,QAAS,UAAWC,GAAI,UACpCC,WAAY,CACVC,SAAS,GAEXC,QAAS,CACP,CACEC,OAAQ,IAAMX,EAASY,SACvBC,QAASf,EACTM,KAAM,QAER,CACEA,KAAM,OACNS,QAASd,EACTY,OAAQ,IAAMX,EAASc,UAI7B,CACEZ,GAAI,OACJC,MAAO,OACPC,KAAM,iBACNC,SAAU,CAAEC,QAAS,oBAAqBC,GAAI,OAC9CC,WAAY,CACVC,SAAS,GAEXC,QAAS,CACP,CACEN,KAAM,OACNS,QAASf,EACTa,OAAQ,IAAMX,EAASY,UAEzB,CACER,KAAM,OACNS,QAASf,EACTa,OAAQ,IAAMX,EAASe,QAEzB,CACEX,KAAM,OACNS,QAASd,EACTY,OAAQ,IAAMX,EAASc,UAI7B,CACEZ,GAAI,SACJC,MAAO,SACPC,KAAM,qBACNC,SAAU,CAAEC,QAAS,UAAWC,GAAI,OACpCC,WAAY,CACVC,SAAS,GAEXC,QAAS,CACP,CACEN,KAAM,OACNS,QAASf,EACTa,OAAQ,IAAMX,EAASe,QAEzB,CACEX,KAAM,SACNS,QAASd,EACTY,OAAQ,IAAMX,EAASY,aAMzBI,EAAU,KACd,MAAMC,EAAOC,qBAAWC,KAGxB,OAFAnB,EAAWiB,EAGT,cAAC,IAAD,CAAQG,MAAM,UAAUC,QAAS,IAAMJ,EAAKK,QAASC,SAAO,EAA5D,yBAqCWC,UA/BO,IAElB,eAAC,WAAD,WACE,cAAC,IAAD,CACErB,MAAM,iBACNsB,SAAS,+DACTC,KAAK,oDAEP,cAAC,KAAD,CAAKxB,GAAG,aAAR,SACE,cAAC,IAAD,CAAKyB,GAAI,GAAT,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAWC,IAAI,KAAf,oBAEF,cAAC,IAAD,UACE,cAAC,IAAD,CACE3B,MAAOA,EACP4B,YAAa,CACXC,iBAAiB,GAHrB,SAME,cAACd,EAAD,mB,iCC5HhB,mBAwBee,IAlBUC,GAErB,cAAC,KAAD,CAAKC,UAAU,OAAf,SACE,eAAC,IAAD,CAAKC,GAAG,KAAKD,UAAU,QAAvB,UACE,mBAAGA,UAAU,qCAAqC,YAAU,kBAA5D,SACGD,EAAM7B,QAER6B,EAAMN,KACL,mBAAGS,KAAMH,EAAMN,KAAMU,OAAO,SAASC,IAAI,sBAAzC,SACGL,EAAMP,WAGT,mBAAGQ,UAAU,eAAb,SAA6BD,EAAMP","file":"static/js/67.369a1d6d.chunk.js","sourcesContent":["// ** React Imports\r\nimport { Fragment, useContext } from 'react'\r\n\r\n// ** Custom Components\r\nimport ExtensionsHeader from '@components/extensions-header'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, Card, CardHeader, CardTitle, CardBody, Button } from 'reactstrap'\r\n\r\n// ** Third Party Components\r\nimport { ShepherdTour, ShepherdTourContext } from 'react-shepherd'\r\n\r\n// ** Styles\r\nimport 'shepherd.js/dist/css/shepherd.css'\r\nimport '@styles/react/libs/shepherd-tour/shepherd-tour.scss'\r\n\r\nconst backBtnClass = 'btn btn-sm btn-outline-primary',\r\n  nextBtnClass = 'btn btn-sm btn-primary btn-next'\r\n\r\nlet instance = null\r\n\r\nconst steps = [\r\n  {\r\n    id: 'navbar',\r\n    title: 'Navbar',\r\n    text: 'This is your navbar',\r\n    attachTo: { element: '.navbar', on: 'bottom' },\r\n    cancelIcon: {\r\n      enabled: true\r\n    },\r\n    buttons: [\r\n      {\r\n        action: () => instance.cancel(),\r\n        classes: backBtnClass,\r\n        text: 'Skip'\r\n      },\r\n      {\r\n        text: 'Next',\r\n        classes: nextBtnClass,\r\n        action: () => instance.next()\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    id: 'card',\r\n    title: 'Card',\r\n    text: 'This is a card',\r\n    attachTo: { element: '#basic-tour .card', on: 'top' },\r\n    cancelIcon: {\r\n      enabled: true\r\n    },\r\n    buttons: [\r\n      {\r\n        text: 'Skip',\r\n        classes: backBtnClass,\r\n        action: () => instance.cancel()\r\n      },\r\n      {\r\n        text: 'Back',\r\n        classes: backBtnClass,\r\n        action: () => instance.back()\r\n      },\r\n      {\r\n        text: 'Next',\r\n        classes: nextBtnClass,\r\n        action: () => instance.next()\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    id: 'footer',\r\n    title: 'Footer',\r\n    text: 'This is the footer',\r\n    attachTo: { element: '.footer', on: 'top' },\r\n    cancelIcon: {\r\n      enabled: true\r\n    },\r\n    buttons: [\r\n      {\r\n        text: 'Back',\r\n        classes: backBtnClass,\r\n        action: () => instance.back()\r\n      },\r\n      {\r\n        text: 'Finish',\r\n        classes: nextBtnClass,\r\n        action: () => instance.cancel()\r\n      }\r\n    ]\r\n  }\r\n]\r\n\r\nconst Content = () => {\r\n  const tour = useContext(ShepherdTourContext)\r\n  instance = tour\r\n\r\n  return (\r\n    <Button color='primary' onClick={() => tour.start()} outline>\r\n      Start Tour\r\n    </Button>\r\n  )\r\n}\r\n\r\nconst TourComponent = () => {\r\n  return (\r\n    <Fragment>\r\n      <ExtensionsHeader\r\n        title='React Shepherd'\r\n        subTitle='Tourist Guide into your React Components With React Shepherd'\r\n        link='https://github.com/shipshapecode/react-shepherd'\r\n      />\r\n      <Row id='basic-tour'>\r\n        <Col xs={12}>\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle tag='h4'>Tour</CardTitle>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <ShepherdTour\r\n                steps={steps}\r\n                tourOptions={{\r\n                  useModalOverlay: true\r\n                }}\r\n              >\r\n                <Content />\r\n              </ShepherdTour>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default TourComponent\r\n","// ** React Imports\r\nimport Proptypes from 'prop-types'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\nconst ExtensionsHeader = props => {\r\n  return (\r\n    <Row className='mb-2'>\r\n      <Col sm='12' className='ms-50'>\r\n        <p className='font-medium-5 mt-1 extension-title' data-tour='extension-title'>\r\n          {props.title}\r\n        </p>\r\n        {props.link ? (\r\n          <a href={props.link} target='_blank' rel='noopener noreferrer'>\r\n            {props.subTitle}\r\n          </a>\r\n        ) : (\r\n          <p className='text-primary'>{props.subTitle}</p>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\nexport default ExtensionsHeader\r\n\r\n// ** PropTypes\r\nExtensionsHeader.propTypes = {\r\n  link: Proptypes.string,\r\n  title: Proptypes.string.isRequired,\r\n  subTitle: Proptypes.string.isRequired\r\n}\r\n"],"sourceRoot":""}