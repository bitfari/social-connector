{"version":3,"sources":["views/pages/pricing/PricingFaqs.js","views/pages/pricing/PricingCards.js","views/pages/pricing/PricingTrial.js","views/pages/pricing/PricingHeader.js","views/pages/pricing/index.js","assets/images/illustration/pricing-Illustration.svg"],"names":["PricingFaqs","data","className","sm","lg","size","offset","map","r","index","tag","targetId","String","question","accordionId","ans","PricingCards","duration","bordered","fullWidth","cols","colsProps","md","xs","classnames","item","monthlyPrice","yearlyPlan","perMonth","yearlyPrice","totalAnnual","imgClasses","title","border","popular","toLowerCase","color","pill","src","img","alt","subtitle","planBenefits","benefit","i","PricingTrial","trialSvg","style","transform","PricingHeader","setDuration","id","type","checked","onChange","e","target","Pricing","setData","useState","faq","setFaq","useEffect","axios","get","then","res","dataArr","faqArr","Object","entries","forEach","key","val","push"],"mappings":"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","file":"static/js/59.c08a1a83.chunk.js","sourcesContent":["// ** Reactstrap Imports\r\nimport { Row, Col, AccordionBody, AccordionItem, AccordionHeader, UncontrolledAccordion } from 'reactstrap'\r\n\r\nconst PricingFaqs = ({ data }) => {\r\n  return (\r\n    <div className='pricing-faq'>\r\n      <h3 className='text-center'>FAQ's</h3>\r\n      <p className='text-center mb-0'>Let us help answer the most common questions.</p>\r\n      <Row className='mt-75 mb-2'>\r\n        <Col className='mx-auto' sm='12' lg={{ size: 10, offset: 2 }}>\r\n          <UncontrolledAccordion className='accordion-margin mt-2'>\r\n            {data.map((r, index) => {\r\n              return (\r\n                <AccordionItem key={index + 1}>\r\n                  <AccordionHeader tag='h2' targetId={String(index + 1)}>\r\n                    {r.question}\r\n                  </AccordionHeader>\r\n                  <AccordionBody accordionId={String(index + 1)}>{r.ans}</AccordionBody>\r\n                </AccordionItem>\r\n              )\r\n            })}\r\n          </UncontrolledAccordion>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PricingFaqs\r\n","// ** Third Party Components\r\nimport classnames from 'classnames'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, Card, CardBody, CardText, Badge, ListGroup, ListGroupItem, Button } from 'reactstrap'\r\n\r\nconst PricingCards = ({ data, duration, bordered, fullWidth, cols }) => {\r\n  const colsProps = cols ? cols : { md: 4, xs: 12 }\r\n\r\n  const renderPricingCards = () => {\r\n    return data.map((item, index) => {\r\n      const monthlyPrice = duration === 'yearly' ? item.yearlyPlan.perMonth : item.monthlyPrice,\r\n        yearlyPrice = duration === 'yearly' ? item.yearlyPlan.totalAnnual : item.monthlyPrice,\r\n        imgClasses = item.title === 'Basic' ? 'mb-2 mt-5' : item.title === 'Standard' ? 'mb-1' : 'mb-2'\r\n\r\n      return (\r\n        <Col key={index} {...colsProps}>\r\n          <Card\r\n            className={classnames('text-center', {\r\n              border: bordered,\r\n              'shadow-none': bordered,\r\n              popular: item.popular === true,\r\n              'border-primary': bordered && item.popular === true,\r\n              [`${item.title.toLowerCase()}-pricing`]: item.title\r\n            })}\r\n          >\r\n            <CardBody>\r\n              {item.popular === true ? (\r\n                <div className='pricing-badge text-end'>\r\n                  <Badge color='light-primary' pill>\r\n                    Popular\r\n                  </Badge>\r\n                </div>\r\n              ) : null}\r\n              <img className={imgClasses} src={item.img} alt='pricing svg' />\r\n              <h3>{item.title}</h3>\r\n              <CardText>{item.subtitle}</CardText>\r\n              <div className='annual-plan'>\r\n                <div className='plan-price mt-2'>\r\n                  <sup className='font-medium-1 fw-bold text-primary me-25'>$</sup>\r\n                  <span className={`pricing-${item.title.toLowerCase()}-value fw-bolder text-primary`}>\r\n                    {monthlyPrice}\r\n                  </span>\r\n                  <span className='pricing-duration text-body font-medium-1 fw-bold ms-25'>/month</span>\r\n                </div>\r\n                {item.title !== 'Basic' && duration === 'yearly' ? (\r\n                  <small className='annual-pricing text-muted'>USD {yearlyPrice} / year</small>\r\n                ) : null}\r\n              </div>\r\n              <ListGroup tag='ul' className='list-group-circle text-start mb-2'>\r\n                {item.planBenefits.map((benefit, i) => (\r\n                  <ListGroupItem key={i} tag='li'>\r\n                    {benefit}\r\n                  </ListGroupItem>\r\n                ))}\r\n              </ListGroup>\r\n               \r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      )\r\n    })\r\n  }\r\n\r\n  const defaultCols = {\r\n    sm: { offset: 2, size: 10 },\r\n    lg: { offset: 2, size: 10 }\r\n  }\r\n\r\n  return (\r\n    <Row className='pricing-card'>\r\n      <Col {...(!fullWidth ? defaultCols : {})} className={classnames({ 'mx-auto': !fullWidth })}>\r\n        <Row>{renderPricingCards()}</Row>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default PricingCards\r\n","// ** Reactstrap Imports\r\nimport { Row, Col, Button } from 'reactstrap'\r\n\r\n// ** Images\r\nimport trialSvg from '@src/assets/images/illustration/pricing-Illustration.svg'\r\n\r\nconst PricingTrial = () => {\r\n  return (\r\n    <div className='pricing-free-trial'>\r\n      <Row>\r\n        <Col className='mx-auto' lg={{ size: 10, offset: 3 }} sm='12'>\r\n          <div className='pricing-trial-content d-flex justify-content-between'>\r\n            <div className='text-center text-md-start mt-3'>\r\n              <h3 className='text-primary'>Buy FARI and Save 50%!</h3>\r\n              <h5>Get up to 90% savings compared to traditional ads. </h5>\r\n              <div className='mt-2 mt-lg-3'>\r\n                <Button color='primary'>Buy FARI</Button>\r\n              </div>\r\n            </div>\r\n            <img\r\n              className='pricing-trial-img img-fluid'\r\n              src={trialSvg}\r\n              alt='trial svg'\r\n              style={{\r\n                transform: 'scaleX(1)'\r\n              }}\r\n            />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PricingTrial\r\n","// ** Reactstrap Imports\r\nimport { Input } from 'reactstrap'\r\n\r\nconst PricingHeader = ({ duration, setDuration }) => {\r\n  const onChange = e => {\r\n    if (e.target.checked) {\r\n      setDuration('yearly')\r\n    } else {\r\n      setDuration('monthly')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='text-center'>\r\n      <h1 className='mt-5'>Pricing Plans</h1>\r\n      <p className='mb-2 pb-75'>\r\n        All plans include 40+ advanced tools and features to boost your product. Choose the best plan to fit your needs.\r\n      </p>\r\n      <div className='d-flex align-items-center justify-content-center mb-5 pb-50'>\r\n        <h6 className='me-50 mb-0'>Monthly</h6>\r\n        <div className='form-switch'>\r\n          <Input id='plan-switch' type='switch' checked={duration === 'yearly'} onChange={onChange} />\r\n        </div>\r\n        <h6 className='ms-50 mb-0'>Annually</h6>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PricingHeader\r\n","// ** React Imports\r\nimport { useState, useEffect, Fragment } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\n\r\n// ** Demo Components\r\nimport PricingFaqs from './PricingFaqs'\r\nimport PricingCards from './PricingCards'\r\nimport PricingTrial from './PricingTrial'\r\nimport PricingHeader from './PricingHeader'\r\n\r\n// ** Styles\r\nimport '@styles/base/pages/page-pricing.scss'\r\n\r\nconst Pricing = () => {\r\n  // ** States\r\n  const [data, setData] = useState(null),\r\n    [faq, setFaq] = useState(null),\r\n    [duration, setDuration] = useState('monthly')\r\n\r\n  useEffect(() => {\r\n    axios.get('/pricing/data').then(res => {\r\n      const dataArr = [],\r\n        faqArr = []\r\n\r\n      Object.entries(res.data).forEach(([key, val]) => {\r\n        if (key !== 'qandA') {\r\n          dataArr.push(val)\r\n          setData([...dataArr])\r\n        } else {\r\n          faqArr.push(val)\r\n          setFaq(faqArr[0])\r\n        }\r\n      })\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <div id='pricing-table'>\r\n      <PricingHeader duration={duration} setDuration={setDuration} />\r\n      {data !== null && faq !== null ? (\r\n        <Fragment>\r\n          <PricingCards data={data} duration={duration} />\r\n          <PricingTrial />\r\n          <PricingFaqs data={faq} />\r\n        </Fragment>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pricing\r\n","export default __webpack_public_path__ + \"static/media/pricing-Illustration.1f07f42e.svg\";"],"sourceRoot":""}