{"version":3,"sources":["views/components/progress/ProgressBasic.js","views/components/progress/ProgressColored.js","views/components/progress/ProgressLabeled.js","views/components/progress/ProgressStriped.js","views/components/progress/ProgressAnimated.js","views/components/progress/ProgressMultipleStacked.js","views/components/progress/ProgressSourceCode.js","views/components/progress/index.js","@core/components/breadcrumbs/index.js","@core/components/card-snippet/index.js"],"names":["ProgressBasic","className","value","ProgressColored","ProgressLabeled","ProgressStriped","striped","ProgressAnimated","animated","ProgressMultipleStacked","multi","bar","color","progressBasic","progressColored","progressMultipleStacked","progressLabeled","progressStriped","progressAnimated","Progress","useEffect","Prism","highlightAll","breadCrumbTitle","breadCrumbParent","breadCrumbActive","lg","title","code","BreadCrumbs","props","breadCrumbParent2","breadCrumbParent3","tag","to","active","size","end","Link","CardSnippet","children","noBody","iconCode","isOpen","setIsOpen","useState","IconCode","Wrapper","Fragment","CardBody","onClick"],"mappings":"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","file":"static/js/91.385ebf3c.chunk.js","sourcesContent":["// ** Reactstrap Imports\r\nimport { Progress } from 'reactstrap'\r\n\r\nconst ProgressBasic = () => {\r\n  return (\r\n    <div className='demo-vertical-spacing'>\r\n      <div>\r\n        <span>Reticulating splines… 0%</span>\r\n        <Progress />\r\n      </div>\r\n      <div>\r\n        <span>Reticulating splines… 25%</span>\r\n        <Progress value='25' />\r\n      </div>\r\n      <div>\r\n        <span>Reticulating splines… 50%</span>\r\n        <Progress value={50} />\r\n      </div>\r\n      <div>\r\n        <span>Reticulating splines… 75%</span>\r\n        <Progress value={75} />\r\n      </div>\r\n      <div>\r\n        <span>Reticulating splines… 100%</span>\r\n        <Progress value='100' />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default ProgressBasic\r\n","// ** Reactstrap Imports\r\nimport { Progress } from 'reactstrap'\r\n\r\nconst ProgressColored = () => {\r\n  return (\r\n    <div className='demo-vertical-spacing'>\r\n      <Progress value={25} />\r\n      <Progress className='progress-bar-secondary' value={35} />\r\n      <Progress className='progress-bar-success' value={45} />\r\n      <Progress className='progress-bar-danger' value={55} />\r\n      <Progress className='progress-bar-warning' value={65} />\r\n      <Progress className='progress-bar-info' value={75} />\r\n      <Progress className='progress-bar-dark' value={85} />\r\n    </div>\r\n  )\r\n}\r\nexport default ProgressColored\r\n","// ** Reactstrap Imports\r\nimport { Progress } from 'reactstrap'\r\n\r\nconst ProgressLabeled = () => {\r\n  return (\r\n    <div className='demo-vertical-spacing'>\r\n      <Progress value='25'>25%</Progress>\r\n      <Progress value='35' className='progress-bar-secondary'>\r\n        35%\r\n      </Progress>\r\n      <Progress value='45' className='progress-bar-success'>\r\n        45%\r\n      </Progress>\r\n      <Progress value='55' className='progress-bar-danger'>\r\n        55%\r\n      </Progress>\r\n      <Progress className='progress-bar-warning' value='65'>\r\n        65%\r\n      </Progress>\r\n      <Progress className='progress-bar-info' value='75'>\r\n        75%\r\n      </Progress>\r\n      <Progress className='progress-bar-dark' value='85'>\r\n        85%\r\n      </Progress>\r\n    </div>\r\n  )\r\n}\r\nexport default ProgressLabeled\r\n","// ** Reactstrap Imports\r\nimport { Progress } from 'reactstrap'\r\n\r\nconst ProgressStriped = () => {\r\n  return (\r\n    <div className='demo-vertical-spacing'>\r\n      <Progress striped value={20} />\r\n      <Progress striped className='progress-bar-success' value={40} />\r\n      <Progress striped className='progress-bar-danger' value={60} />\r\n      <Progress striped className='progress-bar-warning' value={80} />\r\n      <Progress striped className='progress-bar-info' value={100} />\r\n    </div>\r\n  )\r\n}\r\nexport default ProgressStriped\r\n","// ** Reactstrap Imports\r\nimport { Progress } from 'reactstrap'\r\n\r\nconst ProgressAnimated = () => {\r\n  return (\r\n    <div className='demo-vertical-spacing'>\r\n      <Progress animated striped value={20} />\r\n      <Progress animated striped className='progress-bar-success' value={40} />\r\n      <Progress animated striped className='progress-bar-danger' value={60} />\r\n      <Progress animated striped className='progress-bar-warning' value={80} />\r\n      <Progress animated striped className='progress-bar-info' value={100} />\r\n    </div>\r\n  )\r\n}\r\nexport default ProgressAnimated\r\n","// ** Reactstrap Imports\r\nimport { Progress } from 'reactstrap'\r\n\r\nconst ProgressMultipleStacked = () => {\r\n  return (\r\n    <Progress multi>\r\n      <Progress bar color='danger' value='15'>\r\n        15%\r\n      </Progress>\r\n      <Progress bar color='warning' value='50'>\r\n        50%\r\n      </Progress>\r\n      <Progress bar color='primary' value='10'>\r\n        10%\r\n      </Progress>\r\n    </Progress>\r\n  )\r\n}\r\nexport default ProgressMultipleStacked\r\n","export const progressBasic = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Progress } from 'reactstrap'\r\nconst ProgressBasic = () => {\r\n  return (\r\n    <div className='demo-vertical-spacing'>\r\n      <div>\r\n        <span>Reticulating splines… 0%</span>\r\n        <Progress />\r\n      </div>\r\n      <div>\r\n        <span>Reticulating splines… 25%</span>\r\n        <Progress value='25' />\r\n      </div>\r\n      <div>\r\n        <span>Reticulating splines… 50%</span>\r\n        <Progress value={50} />\r\n      </div>\r\n      <div>\r\n        <span>Reticulating splines… 75%</span>\r\n        <Progress value={75} />\r\n      </div>\r\n      <div>\r\n        <span>Reticulating splines… 100%</span>\r\n        <Progress value='100' />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default ProgressBasic\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const progressColored = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Progress } from 'reactstrap'\r\n\r\nconst ProgressColored = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Progress value={25} />\r\n      <Progress className='progress-bar-secondary' value={35} />\r\n      <Progress className='progress-bar-success' value={45} />\r\n      <Progress className='progress-bar-danger' value={55} />\r\n      <Progress className='progress-bar-warning' value={65} />\r\n      <Progress className='progress-bar-info' value={75} />\r\n      <Progress className='progress-bar-dark' value={85} />\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default ProgressColored\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const progressMultipleStacked = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Progress } from 'reactstrap'\r\n\r\nconst ProgressMultipleStacked = () => {\r\n  return (\r\n     <Progress multi>\r\n        <Progress bar color='danger' value='15'>\r\n          15%\r\n        </Progress>\r\n        <Progress bar color='warning' value='50'>\r\n          50%\r\n        </Progress>\r\n        <Progress bar color='primary' value='10'>\r\n          10%\r\n        </Progress>\r\n    </Progress>\r\n  )\r\n}\r\nexport default ProgressMultipleStacked\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const progressLabeled = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Progress } from 'reactstrap'\r\n\r\nconst ProgressLabeled = () => {\r\n  return (\r\n    <div className='demo-vertical-spacing'>\r\n      <Progress value='25'>25%</Progress>\r\n      <Progress value='35' className='progress-bar-secondary'>\r\n        35%\r\n      </Progress>\r\n      <Progress value='45' className='progress-bar-success'>\r\n        45%\r\n      </Progress>\r\n      <Progress value='55' className='progress-bar-danger'>\r\n        55%\r\n      </Progress>\r\n      <Progress className='progress-bar-warning' value='65'>\r\n        65%\r\n      </Progress>\r\n      <Progress className='progress-bar-info' value='75'>\r\n        75%\r\n      </Progress>\r\n      <Progress className='progress-bar-dark' value='85'>\r\n        85%\r\n      </Progress>\r\n    </div>\r\n  )\r\n}\r\nexport default ProgressLabeled\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const progressStriped = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Progress } from 'reactstrap'\r\nconst ProgressStriped = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Progress striped value={20} />\r\n      <Progress striped className='progress-bar-success' value={40} />\r\n      <Progress striped className='progress-bar-danger' value={60} />\r\n      <Progress striped className='progress-bar-warning' value={80} />\r\n      <Progress striped className='progress-bar-info' value={100} />\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default ProgressStriped\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const progressAnimated = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Progress } from 'reactstrap'\r\n\r\nconst ProgressAnimated = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Progress striped value={20} />\r\n      <Progress striped className='progress-bar-success' value={40} />\r\n      <Progress striped className='progress-bar-danger' value={60} />\r\n      <Progress striped className='progress-bar-warning' value={80} />\r\n      <Progress striped className='progress-bar-info' value={100} />\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default ProgressAnimated\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n","// ** React Imports\r\nimport { Fragment, useEffect } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, CardText } from 'reactstrap'\r\n\r\n// ** Third Party Components\r\nimport Prism from 'prismjs'\r\n\r\n// ** Custom Components\r\nimport Card from '@components/card-snippet'\r\nimport BreadCrumbs from '@components/breadcrumbs'\r\n\r\n// ** Demo Components\r\nimport ProgressBasic from './ProgressBasic'\r\nimport ProgressColored from './ProgressColored'\r\nimport ProgressLabeled from './ProgressLabeled'\r\nimport ProgressStriped from './ProgressStriped'\r\nimport ProgressAnimated from './ProgressAnimated'\r\nimport ProgressMultipleStacked from './ProgressMultipleStacked'\r\n\r\n// ** Source Code\r\nimport {\r\n  progressBasic,\r\n  progressColored,\r\n  progressLabeled,\r\n  progressStriped,\r\n  progressAnimated,\r\n  progressMultipleStacked\r\n} from './ProgressSourceCode'\r\n\r\nconst Progress = () => {\r\n  useEffect(() => {\r\n    Prism.highlightAll()\r\n  }, [])\r\n  return (\r\n    <Fragment>\r\n      <BreadCrumbs breadCrumbTitle='Progress' breadCrumbParent='Components' breadCrumbActive='Progress' />\r\n      <Row>\r\n        <Col lg='12'>\r\n          <Card title='Basic Progress' code={progressBasic}>\r\n            <ProgressBasic />\r\n          </Card>\r\n        </Col>\r\n        <Col lg='12'>\r\n          <Card title='Colored Progress' code={progressColored}>\r\n            <CardText>\r\n              Use <code>progress-bar-[color]</code> class with progress to change progress color.\r\n            </CardText>\r\n            <ProgressColored />\r\n          </Card>\r\n        </Col>\r\n        <Col lg='12'>\r\n          <Card title='Labeled Progress' code={progressLabeled}>\r\n            <CardText>Add text between progress tag to create a labeled progress bar.</CardText>\r\n            <ProgressLabeled />\r\n          </Card>\r\n        </Col>\r\n        <Col lg='12'>\r\n          <Card title='Multiple Stacked' code={progressMultipleStacked}>\r\n            <CardText>\r\n              To create a multi colored progress wrap all of your progresses in with <code>multi</code> prop.\r\n            </CardText>\r\n            <ProgressMultipleStacked />\r\n          </Card>\r\n        </Col>\r\n        <Col lg='12'>\r\n          <Card title='Striped Progress' code={progressStriped}>\r\n            <CardText>\r\n              Use <code>striped</code> prop with progress to create a striped progress bar.\r\n            </CardText>\r\n            <ProgressStriped />\r\n          </Card>\r\n        </Col>\r\n        <Col lg='12'>\r\n          <Card title='Animated Progress' code={progressAnimated}>\r\n            <CardText>\r\n              Use <code>animated</code> prop with progress to animate progress bar.\r\n            </CardText>\r\n            <ProgressAnimated />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default Progress\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-start mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  {breadCrumbParent}\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\r\n        <div className='breadcrumb-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' end>\r\n              <DropdownItem tag={Link} to='/apps/focus'>\r\n                <CheckSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Focus</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/instafriend'>\r\n                <MessageSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Instafriend</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/tellfari'>\r\n                <Mail className='me-1' size={14} />\r\n                <span className='align-middle'>Tellfari</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/book'>\r\n                <Calendar className='me-1' size={14} />\r\n                <span className='align-middle'>Book</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n","// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport { Code } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\r\n\r\nconst CardSnippet = props => {\r\n  // ** Props\r\n  const { title, children, noBody, code, iconCode } = props\r\n\r\n  // ** State\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  // ** If user passes custom icon then render that else render default icon\r\n  const IconCode = iconCode ? iconCode : <Code size={15} />\r\n\r\n  // ** To toggle collapse\r\n  const toggle = () => setIsOpen(!isOpen)\r\n\r\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\r\n  const Wrapper = noBody ? Fragment : CardBody\r\n\r\n  return (\r\n    <Card className='card-snippet'>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>{title}</CardTitle>\r\n        <div className='views cursor-pointer' onClick={toggle}>\r\n          {IconCode}\r\n        </div>\r\n      </CardHeader>\r\n      <Wrapper>{children}</Wrapper>\r\n      <Collapse isOpen={isOpen}>\r\n        <CardBody>{code}</CardBody>\r\n      </Collapse>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CardSnippet\r\n\r\n// ** PropTypes\r\nCardSnippet.propTypes = {\r\n  code: PropTypes.node,\r\n  noBody: PropTypes.bool,\r\n  children: PropTypes.any,\r\n  iconCode: PropTypes.node,\r\n  className: PropTypes.string,\r\n  title: PropTypes.string.isRequired\r\n}\r\n"],"sourceRoot":""}