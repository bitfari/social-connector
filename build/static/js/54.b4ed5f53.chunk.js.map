{"version":3,"sources":["views/ui-elements/cards/development/AvgSessions.js","views/ui-elements/cards/development/SupportTracker.js","views/dashboard/development/index.js"],"names":["AvgSessions","props","data","setData","useState","useEffect","axios","get","then","res","options","chart","sparkline","enabled","toolbar","show","grid","padding","left","right","states","hover","filter","colors","primary","plotOptions","bar","columnWidth","distributed","borderRadius","tooltip","x","xaxis","type","className","sm","size","order","xs","kFormatter","sessions","growth","color","end","last_days","map","item","series","name","height","md","goal","value","users","retention","duration","SupportTracker","radialBar","offsetY","startAngle","endAngle","hollow","track","background","strokeWidth","dataLabels","fontFamily","fontSize","danger","fill","gradient","shade","shadeIntensity","gradientToColors","inverseColors","opacityFrom","opacityTo","stops","stroke","dashArray","labels","tag","title","totalTicket","id","newTicket","openTicket","responseTime","DevelopmentDashboard","useContext","ThemeColors","lg","main"],"mappings":"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","file":"static/js/54.b4ed5f53.chunk.js","sourcesContent":["// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport Chart from 'react-apexcharts'\r\n\r\n// ** Utils\r\nimport { kFormatter } from '@utils'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Button,\r\n  CardBody,\r\n  CardText,\r\n  Progress,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown\r\n} from 'reactstrap'\r\n\r\nconst AvgSessions = props => {\r\n  // ** States\r\n  const [data, setData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-development/avg-sessions').then(res => setData(res.data))\r\n    return () => setData(null)\r\n  }, [])\r\n\r\n  const options = {\r\n      chart: {\r\n        sparkline: { enabled: true },\r\n        toolbar: { show: false }\r\n      },\r\n      grid: {\r\n        show: false,\r\n        padding: {\r\n          left: 0,\r\n          right: 0\r\n        }\r\n      },\r\n      states: {\r\n        hover: {\r\n          filter: 'none'\r\n        }\r\n      },\r\n      colors: ['#ebf0f7', '#ebf0f7', props.primary, '#ebf0f7', '#ebf0f7', '#ebf0f7'],\r\n      plotOptions: {\r\n        bar: {\r\n          columnWidth: '45%',\r\n          distributed: true,\r\n          borderRadius: [10]\r\n        }\r\n      },\r\n      tooltip: {\r\n        x: { show: false }\r\n      },\r\n      xaxis: {\r\n        type: 'numeric'\r\n      }\r\n    },\r\n    series = [\r\n      {\r\n        name: 'Sessions',\r\n        data: [75, 125, 225, 175, 125, 75, 25]\r\n      }\r\n    ]\r\n\r\n  return data !== null ? (\r\n    <Card>\r\n      <CardBody>\r\n        <Row className='pb-50'>\r\n          <Col\r\n            sm={{ size: 6, order: 1 }}\r\n            xs={{ order: 2 }}\r\n            className='d-flex justify-content-between flex-column mt-lg-0 mt-2'\r\n          >\r\n            <div className='session-info mb-1 mb-lg-0'>\r\n              <h2 className='fw-bold mb-25'>{kFormatter(data.sessions)}</h2>\r\n              <CardText className='fw-bold mb-2'>Avg Sessions</CardText>\r\n              <h5 className='font-medium-2'>\r\n                <span className='text-success me-50'>{data.growth}</span>\r\n                <span className='fw-normal'>vs last 7 days</span>\r\n              </h5>\r\n            </div>\r\n            <Button color='primary'>View Details</Button>\r\n          </Col>\r\n          <Col\r\n            sm={{ size: 6, order: 2 }}\r\n            xs={{ order: 1 }}\r\n            className='d-flex justify-content-between flex-column text-end'\r\n          >\r\n            <UncontrolledDropdown className='chart-dropdown'>\r\n              <DropdownToggle color='' className='bg-transparent btn-sm border-0 p-50'>\r\n                Last 7 days\r\n              </DropdownToggle>\r\n              <DropdownMenu end>\r\n                {data.last_days.map(item => (\r\n                  <DropdownItem className='w-100' key={item}>\r\n                    {item}\r\n                  </DropdownItem>\r\n                ))}\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n            <Chart options={options} series={series} type='bar' height={200} />\r\n          </Col>\r\n        </Row>\r\n        <hr />\r\n        <Row className='pt-50'>\r\n          <Col className='mb-2' md='6' sm='12'>\r\n            <p className='mb-50'>Goal: ${data.goal}</p>\r\n            <Progress className='avg-session-progress mt-25' value='50' />\r\n          </Col>\r\n          <Col className='mb-2' md='6' sm='12'>\r\n            <p className='mb-50'>Users: {kFormatter(data.users)}</p>\r\n            <Progress className='avg-session-progress progress-bar-warning mt-25' value='60' />\r\n          </Col>\r\n          <Col md='6' sm='12'>\r\n            <p className='mb-50'>Retention: {data.retention}%</p>\r\n            <Progress className='avg-session-progress progress-bar-danger mt-25' value='70' />\r\n          </Col>\r\n          <Col md='6' sm='12'>\r\n            <p className='mb-50'>Duration: {data.duration}yr</p>\r\n            <Progress className='avg-session-progress progress-bar-success mt-25' value='80' />\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n    </Card>\r\n  ) : null\r\n}\r\nexport default AvgSessions\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport Chart from 'react-apexcharts'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  CardText,\r\n  CardTitle,\r\n  CardHeader,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown\r\n} from 'reactstrap'\r\n\r\nconst SupportTracker = props => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-development/support-tracker').then(res => setData(res.data))\r\n    return () => setData(null)\r\n  }, [])\r\n\r\n  const options = {\r\n      plotOptions: {\r\n        radialBar: {\r\n          size: 150,\r\n          offsetY: 20,\r\n          startAngle: -150,\r\n          endAngle: 150,\r\n          hollow: {\r\n            size: '65%'\r\n          },\r\n          track: {\r\n            background: '#fff',\r\n            strokeWidth: '100%'\r\n          },\r\n          dataLabels: {\r\n            name: {\r\n              offsetY: -5,\r\n              fontFamily: 'Montserrat',\r\n              fontSize: '1rem'\r\n            },\r\n            value: {\r\n              offsetY: 15,\r\n              fontFamily: 'Montserrat',\r\n              fontSize: '1.714rem'\r\n            }\r\n          }\r\n        }\r\n      },\r\n      colors: [props.danger],\r\n      fill: {\r\n        type: 'gradient',\r\n        gradient: {\r\n          shade: 'dark',\r\n          type: 'horizontal',\r\n          shadeIntensity: 0.5,\r\n          gradientToColors: [props.primary],\r\n          inverseColors: true,\r\n          opacityFrom: 1,\r\n          opacityTo: 1,\r\n          stops: [0, 100]\r\n        }\r\n      },\r\n      stroke: {\r\n        dashArray: 8\r\n      },\r\n      labels: ['Completed Tickets']\r\n    },\r\n    series = [96]\r\n\r\n  return data !== null ? (\r\n    <Card>\r\n      <CardHeader className='pb-0'>\r\n        <CardTitle tag='h4'>{data.title}</CardTitle>\r\n        <UncontrolledDropdown className='chart-dropdown'>\r\n          <DropdownToggle color='' className='bg-transparent btn-sm border-0 p-50'>\r\n            Last 7 days\r\n          </DropdownToggle>\r\n          <DropdownMenu end>\r\n            {data.last_days.map(item => (\r\n              <DropdownItem className='w-100' key={item}>\r\n                {item}\r\n              </DropdownItem>\r\n            ))}\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Row>\r\n          <Col sm='2' className='d-flex flex-column flex-wrap text-center'>\r\n            <h1 className='font-large-2 fw-bolder mt-2 mb-0'>{data.totalTicket}</h1>\r\n            <CardText>Tickets</CardText>\r\n          </Col>\r\n          <Col sm='10' className='d-flex justify-content-center'>\r\n            <Chart options={options} series={series} type='radialBar' height={270} id='support-tracker-card' />\r\n          </Col>\r\n        </Row>\r\n        <div className='d-flex justify-content-between mt-1'>\r\n          <div className='text-center'>\r\n            <CardText className='mb-50'>New Tickets</CardText>\r\n            <span className='font-large-1 fw-bold'>{data.newTicket}</span>\r\n          </div>\r\n          <div className='text-center'>\r\n            <CardText className='mb-50'>Open Tickets</CardText>\r\n            <span className='font-large-1 fw-bold'>{data.openTicket}</span>\r\n          </div>\r\n          <div className='text-center'>\r\n            <CardText className='mb-50'>Response Time</CardText>\r\n            <span className='font-large-1 fw-bold'>{data.responseTime}d</span>\r\n          </div>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  ) : null\r\n}\r\nexport default SupportTracker\r\n","import { useContext } from 'react'\nimport { ThemeColors } from '@src/utility/context/ThemeColors'\nimport AvgSessions from '@src/views/ui-elements/cards/development/AvgSessions'\nimport SupportTracker from '@src/views/ui-elements/cards/development/SupportTracker'\nimport { Row, Col } from 'reactstrap'\n\nimport '@styles/react/libs/charts/apex-charts.scss'\n\nconst DevelopmentDashboard = () => {\n  const { colors } = useContext(ThemeColors)\n  \n  return (\n    <div id='dashboard-analytics'>\n      <Row className='match-height'>\n        <Col lg='6' xs='12'>\n          <AvgSessions primary={colors.primary.main} />\n        </Col>\n        <Col lg='6' xs='12'>\n          <SupportTracker primary={colors.primary.main} danger={colors.danger.main} />\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default DevelopmentDashboard"],"sourceRoot":""}