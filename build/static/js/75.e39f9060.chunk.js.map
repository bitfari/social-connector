{"version":3,"sources":["views/extensions/toastify/ToastTypes.js","views/extensions/toastify/ToastifyOptions.js","views/extensions/toastify/ToastPositions.js","views/extensions/toastify/ToastrAnimations.js","views/extensions/toastify/index.js","@core/components/avatar/index.js","@core/components/extensions-header/index.js"],"names":["PrimaryToast","className","size","color","icon","role","SuccessToast","ErrorToast","WarningToast","InfoToast","SuccessProgressToast","ToastTypes","tag","onClick","toast","hideProgressBar","outline","success","error","warning","info","AutoCloseToast","Toastr","autoClose","title","ToastPositions","sm","position","POSITION","TOP_LEFT","TOP_CENTER","TOP_RIGHT","BOTTOM_LEFT","BOTTOM_CENTER","BOTTOM_RIGHT","ToastAnimations","transition","Bounce","Flip","Zoom","Slide","subTitle","link","ToastrAnimations","Avatar","forwardRef","props","ref","img","status","badgeUp","content","Tag","initials","imgWidth","badgeText","imgHeight","badgeColor","imgClassName","contentStyles","rest","classnames","undefined","style","str","results","split","forEach","e","push","join","getInitials","pill","src","alt","height","width","defaultProps","ExtensionsHeader","href","target","rel"],"mappings":"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","file":"static/js/75.e39f9060.chunk.js","sourcesContent":["// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Third Party Components\r\nimport { toast } from 'react-toastify'\r\nimport { Bell, Check, X, AlertTriangle, Info } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'\r\n\r\nconst PrimaryToast = () => (\r\n  <Fragment>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <Avatar size='sm' color='primary' icon={<Bell size={12} />} />\r\n        <h6 className='toast-title'>Default!</h6>\r\n      </div>\r\n      <small className='text-muted'>11 Min Ago</small>\r\n    </div>\r\n    <div className='toastify-body'>\r\n      <span role='img' aria-label='toast-text'>\r\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\r\n      </span>\r\n    </div>\r\n  </Fragment>\r\n)\r\n\r\nconst SuccessToast = () => (\r\n  <Fragment>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\r\n        <h6 className='toast-title'>Success!</h6>\r\n      </div>\r\n      <small className='text-muted'>11 Min Ago</small>\r\n    </div>\r\n    <div className='toastify-body'>\r\n      <span role='img' aria-label='toast-text'>\r\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\r\n      </span>\r\n    </div>\r\n  </Fragment>\r\n)\r\n\r\nconst ErrorToast = () => (\r\n  <Fragment>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <Avatar size='sm' color='danger' icon={<X size={12} />} />\r\n        <h6 className='toast-title'>Error!</h6>\r\n      </div>\r\n      <small className='text-muted'>11 Min Ago</small>\r\n    </div>\r\n    <div className='toastify-body'>\r\n      <span role='img' aria-label='toast-text'>\r\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\r\n      </span>\r\n    </div>\r\n  </Fragment>\r\n)\r\n\r\nconst WarningToast = () => (\r\n  <Fragment>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <Avatar size='sm' color='warning' icon={<AlertTriangle size={12} />} />\r\n        <h6 className='toast-title'>Warning!</h6>\r\n      </div>\r\n      <small className='text-muted'>11 Min Ago</small>\r\n    </div>\r\n    <div className='toastify-body'>\r\n      <span role='img' aria-label='toast-text'>\r\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\r\n      </span>\r\n    </div>\r\n  </Fragment>\r\n)\r\n\r\nconst InfoToast = () => (\r\n  <Fragment>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <Avatar size='sm' color='info' icon={<Info size={12} />} />\r\n        <h6 className='toast-title'>Info!</h6>\r\n      </div>\r\n      <small className='text-muted'>11 Min Ago</small>\r\n    </div>\r\n    <div className='toastify-body'>\r\n      <span role='img' aria-label='toast-text'>\r\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\r\n      </span>\r\n    </div>\r\n  </Fragment>\r\n)\r\n\r\nconst SuccessProgressToast = () => (\r\n  <Fragment>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\r\n        <h6 className='toast-title'>Progress Bar!</h6>\r\n      </div>\r\n      <small className='text-muted'>11 Min Ago</small>\r\n    </div>\r\n    <div className='toastify-body'>\r\n      <span role='img' aria-label='toast-text'>\r\n        👋 Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\r\n      </span>\r\n    </div>\r\n  </Fragment>\r\n)\r\n\r\nconst ToastTypes = () => {\r\n  const notifyDefault = () => toast(<PrimaryToast />, { icon: false, hideProgressBar: true })\r\n  const notifySuccess = () => toast.success(<SuccessToast />, { icon: false, hideProgressBar: true })\r\n  const notifyError = () => toast.error(<ErrorToast />, { icon: false, hideProgressBar: true })\r\n  const notifyWarning = () => toast.warning(<WarningToast />, { icon: false, hideProgressBar: true })\r\n  const notifyInfo = () => toast.info(<InfoToast />, { icon: false, hideProgressBar: true })\r\n  const notifySuccessProgress = () => toast.success(<SuccessProgressToast />, { icon: false })\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Types</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div className='demo-inline-spacing'>\r\n          <Button color='primary' onClick={notifyDefault} outline>\r\n            Default\r\n          </Button>\r\n          <Button color='success' onClick={notifySuccess} outline>\r\n            Success\r\n          </Button>\r\n          <Button color='danger' onClick={notifyError} outline>\r\n            Error\r\n          </Button>\r\n          <Button color='warning' onClick={notifyWarning} outline>\r\n            Warning\r\n          </Button>\r\n          <Button color='info' onClick={notifyInfo} outline>\r\n            Info\r\n          </Button>\r\n          <Button color='success' onClick={notifySuccessProgress} outline>\r\n            Success Progress Bar\r\n          </Button>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ToastTypes\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Third Party Components\r\nimport { toast } from 'react-toastify'\r\nimport { X, Loader, Info } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'\r\n\r\nconst ErrorToast = () => (\r\n  <Fragment>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <Avatar size='sm' color='danger' icon={<X size={12} />} />\r\n        <h6 className='text-danger ms-50 mb-0'>Delayed</h6>\r\n      </div>\r\n      <small className='text-muted'>11 Min Ago</small>\r\n    </div>\r\n    <div className='toastify-body'>\r\n      <span>Candy jelly-o apple pie chocolate bar croissant gummies tiramisu macaroon.</span>\r\n    </div>\r\n  </Fragment>\r\n)\r\n\r\nconst AutoCloseToast = () => (\r\n  <Fragment>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <Avatar size='sm' color='primary' icon={<Loader size={12} />} />\r\n        <h6 className='text-primary ms-50 mb-0'>Auto Close</h6>\r\n      </div>\r\n      <small className='text-muted'>11 Min Ago</small>\r\n    </div>\r\n    <div className='toastify-body'>\r\n      <span>Candy jelly-o apple pie chocolate bar croissant gummies tiramisu macaroon.</span>\r\n    </div>\r\n  </Fragment>\r\n)\r\n\r\nconst InfoToast = () => (\r\n  <Fragment>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <Avatar size='sm' color='info' icon={<Info size={12} />} />\r\n        <h6 className='text-info ms-50 mb-0'>Sticky Toast!</h6>\r\n      </div>\r\n      <small className='text-muted'>11 Min Ago</small>\r\n    </div>\r\n    <div className='toastify-body'>\r\n      <span>Candy jelly-o apple pie chocolate bar croissant gummies tiramisu macaroon.</span>\r\n    </div>\r\n  </Fragment>\r\n)\r\n\r\nconst Toastr = () => {\r\n  const notifyDelay = () => toast.error(<ErrorToast />, { icon: false, autoClose: 10000, hideProgressBar: true })\r\n  const notifySticky = () => toast.info(<InfoToast />, { icon: false, autoClose: false, hideProgressBar: true })\r\n  const notifyAutoClose = () => {\r\n    return toast.success(<AutoCloseToast />, { icon: false, autoClose: 3000, hideProgressBar: true })\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Options</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div className='demo-inline-spacing'>\r\n          <Button color='primary' outline onClick={notifyDelay}>\r\n            Delay\r\n          </Button>\r\n\r\n          <Button color='primary' outline onClick={notifyAutoClose}>\r\n            AutoClose\r\n          </Button>\r\n\r\n          <Button color='primary' outline onClick={notifySticky}>\r\n            Sticky\r\n          </Button>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Toastr\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Third Party Components\r\nimport { Info } from 'react-feather'\r\nimport { toast } from 'react-toastify'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardBody, CardTitle, Button, Row, Col } from 'reactstrap'\r\n\r\nconst InfoToast = ({ title }) => (\r\n  <Fragment>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <Avatar size='sm' color='info' icon={<Info size={12} />} />\r\n        <h6 className='text-info ms-50 mb-0'>{title}</h6>\r\n      </div>\r\n      <small className='text-muted'>11 Min Ago</small>\r\n    </div>\r\n    <div className='toastify-body'>\r\n      <span>I do not think that word means what you think it means.</span>\r\n    </div>\r\n  </Fragment>\r\n)\r\n\r\nconst ToastPositions = () => {\r\n  const notifyTopLeft = () => {\r\n    return toast.info(<InfoToast title='Top Left!' />, {\r\n      icon: false,\r\n      hideProgressBar: true,\r\n      position: toast.POSITION.TOP_LEFT\r\n    })\r\n  }\r\n  const notifyTopCenter = () => {\r\n    return toast.info(<InfoToast title='Top Center!' />, {\r\n      icon: false,\r\n      hideProgressBar: true,\r\n      position: toast.POSITION.TOP_CENTER\r\n    })\r\n  }\r\n  const notifyTopRight = () => {\r\n    return toast.info(<InfoToast title='This Right!' />, {\r\n      icon: false,\r\n      hideProgressBar: true,\r\n      position: toast.POSITION.TOP_RIGHT\r\n    })\r\n  }\r\n\r\n  const notifyBottomLeft = () => {\r\n    return toast.info(<InfoToast title='Bottom Left!' />, {\r\n      icon: false,\r\n      hideProgressBar: true,\r\n      position: toast.POSITION.BOTTOM_LEFT\r\n    })\r\n  }\r\n  const notifyBottomCenter = () => {\r\n    return toast.info(<InfoToast title='Bottom Center!' />, {\r\n      icon: false,\r\n      hideProgressBar: true,\r\n      position: toast.POSITION.BOTTOM_CENTER\r\n    })\r\n  }\r\n  const notifyBottomRight = () => {\r\n    return toast.info(<InfoToast title='This Right!' />, {\r\n      icon: false,\r\n      hideProgressBar: true,\r\n      position: toast.POSITION.BOTTOM_RIGHT\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Positions</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Row>\r\n          <Col sm='12'>\r\n            <h5 className='mb-0'>Top Positions</h5>\r\n            <div className='demo-inline-spacing'>\r\n              <Button color='primary' outline onClick={notifyTopLeft}>\r\n                Top Left\r\n              </Button>\r\n              <Button color='primary' outline onClick={notifyTopCenter}>\r\n                Top Center\r\n              </Button>\r\n              <Button color='primary' outline onClick={notifyTopRight}>\r\n                Top Right\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n          <Col sm='12'>\r\n            <h5 className='mt-2 mb-0'>Bottom Positions</h5>\r\n            <div className='demo-inline-spacing'>\r\n              <Button color='primary' outline onClick={notifyBottomLeft}>\r\n                Bottom Left\r\n              </Button>\r\n\r\n              <Button color='primary' outline onClick={notifyBottomCenter}>\r\n                Bottom Center\r\n              </Button>\r\n\r\n              <Button color='primary' outline onClick={notifyBottomRight}>\r\n                Bottom Right\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ToastPositions\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Third Party Components\r\nimport { Check, X, AlertTriangle, Info } from 'react-feather'\r\nimport { toast, Slide, Zoom, Flip, Bounce } from 'react-toastify'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'\r\n\r\nconst SuccessToast = () => (\r\n  <Fragment>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\r\n        <h6 className='text-success ms-50 mb-0'>Bounce!</h6>\r\n      </div>\r\n      <small className='text-muted'>11 Min Ago</small>\r\n    </div>\r\n    <div className='toastify-body'>\r\n      <span>I do not think that word means what you think it means.</span>\r\n    </div>\r\n  </Fragment>\r\n)\r\n\r\nconst WarningToast = () => (\r\n  <Fragment>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <Avatar size='sm' color='warning' icon={<AlertTriangle size={12} />} />\r\n        <h6 className='text-warning ms-50 mb-0'>Flip!</h6>\r\n      </div>\r\n      <small className='text-muted'>11 Min Ago</small>\r\n    </div>\r\n    <div className='toastify-body'>\r\n      <span>I do not think that word means what you think it means.</span>\r\n    </div>\r\n  </Fragment>\r\n)\r\n\r\nconst ErrorToast = () => (\r\n  <Fragment>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <Avatar size='sm' color='danger' icon={<X size={12} />} />\r\n        <h6 className='text-danger ms-50 mb-0'>Zoom!</h6>\r\n      </div>\r\n      <small className='text-muted'>11 Min Ago</small>\r\n    </div>\r\n    <div className='toastify-body'>\r\n      <span>I do not think that word means what you think it means.</span>\r\n    </div>\r\n  </Fragment>\r\n)\r\n\r\nconst InfoToast = () => (\r\n  <Fragment>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <Avatar size='sm' color='info' icon={<Info size={12} />} />\r\n        <h6 className='text-info ms-50 mb-0'>Slide!</h6>\r\n      </div>\r\n      <small className='text-muted'>11 Min Ago</small>\r\n    </div>\r\n    <div className='toastify-body'>\r\n      <span>I do not think that word means what you think it means.</span>\r\n    </div>\r\n  </Fragment>\r\n)\r\n\r\nconst ToastAnimations = () => {\r\n  const notifyBounce = () => toast.success(<SuccessToast />, { icon: false, transition: Bounce, hideProgressBar: true })\r\n  const notifyFlip = () => toast.warning(<WarningToast />, { icon: false, transition: Flip, hideProgressBar: true })\r\n  const notifyZoom = () => toast.error(<ErrorToast />, { icon: false, transition: Zoom, hideProgressBar: true })\r\n  const notifySlide = () => toast.info(<InfoToast />, { icon: false, transition: Slide, hideProgressBar: true })\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Animations</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div className='demo-inline-spacing'>\r\n          <Button color='primary' outline onClick={notifyBounce}>\r\n            Bounce\r\n          </Button>\r\n\r\n          <Button color='primary' outline onClick={notifyFlip}>\r\n            Flip\r\n          </Button>\r\n\r\n          <Button color='primary' outline onClick={notifyZoom}>\r\n            Zoom\r\n          </Button>\r\n\r\n          <Button color='primary' outline onClick={notifySlide}>\r\n            Slide\r\n          </Button>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ToastAnimations\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Demo Components\r\nimport ToastrTypes from './ToastTypes'\r\nimport ToastrOptions from './ToastifyOptions'\r\nimport ToastrPositions from './ToastPositions'\r\nimport ToastrAnimations from './ToastrAnimations'\r\n\r\n// ** Custom Components\r\nimport ExtensionsHeader from '@components/extensions-header'\r\n\r\nconst Toastr = () => {\r\n  return (\r\n    <Fragment>\r\n      <ExtensionsHeader\r\n        title='React Toastify'\r\n        subTitle='React Toastify makes notification easy 🚀 !'\r\n        link='https://github.com/fkhadra/react-toastify'\r\n      />\r\n\r\n      <Row>\r\n        <Col sm='12'>\r\n          <ToastrTypes />\r\n        </Col>\r\n        <Col sm='12'>\r\n          <ToastrPositions />\r\n        </Col>\r\n        <Col sm='12'>\r\n          <ToastrAnimations />\r\n        </Col>\r\n        <Col sm='12'>\r\n          <ToastrOptions />\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Toastr\r\n","// ** React Imports\r\nimport { forwardRef } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\n// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst Avatar = forwardRef((props, ref) => {\r\n  // ** Props\r\n  const {\r\n    img,\r\n    size,\r\n    icon,\r\n    color,\r\n    status,\r\n    badgeUp,\r\n    content,\r\n    tag: Tag,\r\n    initials,\r\n    imgWidth,\r\n    className,\r\n    badgeText,\r\n    imgHeight,\r\n    badgeColor,\r\n    imgClassName,\r\n    contentStyles,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** Function to extract initials from content\r\n  const getInitials = str => {\r\n    const results = []\r\n    const wordArray = str.split(' ')\r\n    wordArray.forEach(e => {\r\n      results.push(e[0])\r\n    })\r\n    return results.join('')\r\n  }\r\n\r\n  return (\r\n    <Tag\r\n      className={classnames('avatar', {\r\n        [className]: className,\r\n        [`bg-${color}`]: color,\r\n        [`avatar-${size}`]: size\r\n      })}\r\n      ref={ref}\r\n      {...rest}\r\n    >\r\n      {img === false || img === undefined ? (\r\n        <span\r\n          className={classnames('avatar-content', {\r\n            'position-relative': badgeUp\r\n          })}\r\n          style={contentStyles}\r\n        >\r\n          {initials ? getInitials(content) : content}\r\n\r\n          {icon ? icon : null}\r\n          {badgeUp ? (\r\n            <Badge color={badgeColor ? badgeColor : 'primary'} className='badge-sm badge-up' pill>\r\n              {badgeText ? badgeText : '0'}\r\n            </Badge>\r\n          ) : null}\r\n        </span>\r\n      ) : (\r\n        <img\r\n          className={classnames({\r\n            [imgClassName]: imgClassName\r\n          })}\r\n          src={img}\r\n          alt='avatarImg'\r\n          height={imgHeight && !size ? imgHeight : 32}\r\n          width={imgWidth && !size ? imgWidth : 32}\r\n        />\r\n      )}\r\n      {status ? (\r\n        <span\r\n          className={classnames({\r\n            [`avatar-status-${status}`]: status,\r\n            [`avatar-status-${size}`]: size\r\n          })}\r\n        ></span>\r\n      ) : null}\r\n    </Tag>\r\n  )\r\n})\r\n\r\nexport default Avatar\r\n\r\n// ** PropTypes\r\nAvatar.propTypes = {\r\n  icon: Proptypes.node,\r\n  src: Proptypes.string,\r\n  badgeUp: Proptypes.bool,\r\n  content: Proptypes.string,\r\n  badgeText: Proptypes.string,\r\n  className: Proptypes.string,\r\n  imgClassName: Proptypes.string,\r\n  contentStyles: Proptypes.object,\r\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\r\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\r\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\r\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\r\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\r\n  badgeColor: Proptypes.oneOf([\r\n    'primary',\r\n    'secondary',\r\n    'success',\r\n    'danger',\r\n    'info',\r\n    'warning',\r\n    'dark',\r\n    'light-primary',\r\n    'light-secondary',\r\n    'light-success',\r\n    'light-danger',\r\n    'light-info',\r\n    'light-warning',\r\n    'light-dark'\r\n  ]),\r\n  color: Proptypes.oneOf([\r\n    'primary',\r\n    'secondary',\r\n    'success',\r\n    'danger',\r\n    'info',\r\n    'warning',\r\n    'dark',\r\n    'light-primary',\r\n    'light-secondary',\r\n    'light-success',\r\n    'light-danger',\r\n    'light-info',\r\n    'light-warning',\r\n    'light-dark'\r\n  ]),\r\n  initials(props) {\r\n    if (props['initials'] && props['content'] === undefined) {\r\n      return new Error('content prop is required with initials prop.')\r\n    }\r\n    if (props['initials'] && typeof props['content'] !== 'string') {\r\n      return new Error('content prop must be a string.')\r\n    }\r\n    if (typeof props['initials'] !== 'boolean' && props['initials'] !== undefined) {\r\n      return new Error('initials must be a boolean!')\r\n    }\r\n  }\r\n}\r\n\r\n// ** Default Props\r\nAvatar.defaultProps = {\r\n  tag: 'div'\r\n}\r\n","// ** React Imports\r\nimport Proptypes from 'prop-types'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\nconst ExtensionsHeader = props => {\r\n  return (\r\n    <Row className='mb-2'>\r\n      <Col sm='12' className='ms-50'>\r\n        <p className='font-medium-5 mt-1 extension-title' data-tour='extension-title'>\r\n          {props.title}\r\n        </p>\r\n        {props.link ? (\r\n          <a href={props.link} target='_blank' rel='noopener noreferrer'>\r\n            {props.subTitle}\r\n          </a>\r\n        ) : (\r\n          <p className='text-primary'>{props.subTitle}</p>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\nexport default ExtensionsHeader\r\n\r\n// ** PropTypes\r\nExtensionsHeader.propTypes = {\r\n  link: Proptypes.string,\r\n  title: Proptypes.string.isRequired,\r\n  subTitle: Proptypes.string.isRequired\r\n}\r\n"],"sourceRoot":""}