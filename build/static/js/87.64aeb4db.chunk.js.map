{"version":3,"sources":["views/components/navComponent/NavEnd.js","views/components/navComponent/NavBasic.js","views/components/navComponent/NavBorder.js","views/components/navComponent/NavCenter.js","views/components/navComponent/NavDivider.js","views/components/navComponent/NavVertical.js","views/components/navComponent/NavSquareBorder.js","views/components/navComponent/NavVerticalBorder.js","views/components/navComponent/NavComponentSourceCode.js","views/components/navComponent/index.js","@core/components/breadcrumbs/index.js","@core/components/card-snippet/index.js"],"names":["NavEnd","className","href","active","disabled","NavBasic","NavBorder","NavCenter","NavDivider","vertical","NavVertical","NavSquareBorder","NavVerticalBorder","navBasic","navBorder","navCenter","navEnd","navVertical","navVerticalBorder","navSquareBorder","navDivider","NavComponent","useEffect","Prism","highlightAll","breadCrumbTitle","breadCrumbParent","breadCrumbActive","md","sm","title","code","BreadCrumbs","props","breadCrumbParent2","breadCrumbParent3","tag","to","color","size","end","Link","CardSnippet","children","noBody","iconCode","isOpen","setIsOpen","useState","IconCode","Wrapper","Fragment","CardBody","onClick"],"mappings":"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","file":"static/js/87.64aeb4db.chunk.js","sourcesContent":["// ** Reactstrap Imports\r\nimport { Nav, NavItem, NavLink } from 'reactstrap'\r\n\r\nconst NavEnd = () => {\r\n  return (\r\n    <Nav className='justify-content-end'>\r\n      <NavItem>\r\n        <NavLink href='#' active>\r\n          Active\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink href='#'>Link</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink href='#'>Link</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink disabled href='#'>\r\n          Disabled\r\n        </NavLink>\r\n      </NavItem>\r\n    </Nav>\r\n  )\r\n}\r\nexport default NavEnd\r\n","// ** Reactstrap Imports\r\nimport { Nav, NavItem, NavLink } from 'reactstrap'\r\n\r\nconst NavBasic = () => {\r\n  return (\r\n    <Nav>\r\n      <NavItem>\r\n        <NavLink href='#' active>\r\n          Active\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink href='#'>Link</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink href='#'>Link</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink disabled href='#'>\r\n          Disabled\r\n        </NavLink>\r\n      </NavItem>\r\n    </Nav>\r\n  )\r\n}\r\nexport default NavBasic\r\n","// ** Reactstrap Imports\r\nimport { Nav, NavItem, NavLink } from 'reactstrap'\r\n\r\nconst NavBorder = () => {\r\n  return (\r\n    <Nav className='wrap-border'>\r\n      <NavItem>\r\n        <NavLink href='#' active>\r\n          Active\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink href='#'>Link</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink href='#'>Link</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink disabled href='#'>\r\n          Disabled\r\n        </NavLink>\r\n      </NavItem>\r\n    </Nav>\r\n  )\r\n}\r\nexport default NavBorder\r\n","// ** Reactstrap Imports\r\nimport { Nav, NavItem, NavLink } from 'reactstrap'\r\n\r\nconst NavCenter = () => {\r\n  return (\r\n    <Nav className='justify-content-center'>\r\n      <NavItem>\r\n        <NavLink href='#' active>\r\n          Active\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink href='#'>Link</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink href='#'>Link</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink disabled href='#'>\r\n          Disabled\r\n        </NavLink>\r\n      </NavItem>\r\n    </Nav>\r\n  )\r\n}\r\nexport default NavCenter\r\n","// ** Reactstrap Imports\r\nimport { Nav, NavItem, NavLink } from 'reactstrap'\r\n\r\nconst NavDivider = () => {\r\n  return (\r\n    <Nav vertical className='wrap-border square-border'>\r\n      <NavItem>\r\n        <NavLink href='#' active>\r\n          Active\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink href='#'>Link</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink href='#'>Link</NavLink>\r\n      </NavItem>\r\n      <li className='dropdown-divider'>\r\n        <NavLink href='#'>Link</NavLink>\r\n      </li>\r\n      <NavItem>\r\n        <NavLink disabled href='#'>\r\n          Disabled\r\n        </NavLink>\r\n      </NavItem>\r\n    </Nav>\r\n  )\r\n}\r\nexport default NavDivider\r\n","// ** Reactstrap Imports\r\nimport { Nav, NavItem, NavLink } from 'reactstrap'\r\n\r\nconst NavVertical = () => {\r\n  return (\r\n    <Nav vertical>\r\n      <NavItem>\r\n        <NavLink href='#' active>\r\n          Active\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink href='#'>Link</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink href='#'>Link</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink disabled href='#'>\r\n          Disabled\r\n        </NavLink>\r\n      </NavItem>\r\n    </Nav>\r\n  )\r\n}\r\nexport default NavVertical\r\n","// ** Reactstrap Imports\r\nimport { Nav, NavItem, NavLink } from 'reactstrap'\r\n\r\nconst NavSquareBorder = () => {\r\n  return (\r\n    <Nav vertical className='wrap-border square-border'>\r\n      <NavItem>\r\n        <NavLink href='#' active>\r\n          Active\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink href='#'>Link</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink href='#'>Link</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink disabled href='#'>\r\n          Disabled\r\n        </NavLink>\r\n      </NavItem>\r\n    </Nav>\r\n  )\r\n}\r\nexport default NavSquareBorder\r\n","// ** Reactstrap Imports\r\nimport { Nav, NavItem, NavLink } from 'reactstrap'\r\n\r\nconst NavVerticalBorder = () => {\r\n  return (\r\n    <Nav vertical className='wrap-border'>\r\n      <NavItem>\r\n        <NavLink href='#' active>\r\n          Active\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink href='#'>Link</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink href='#'>Link</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink disabled href='#'>\r\n          Disabled\r\n        </NavLink>\r\n      </NavItem>\r\n    </Nav>\r\n  )\r\n}\r\nexport default NavVerticalBorder\r\n","export const navBasic = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Nav, NavItem, NavLink } from 'reactstrap'\r\n\r\nconst NavBasic = () => {\r\n  return (\r\n    <Nav>\r\n      <NavItem>\r\n        <NavLink href='#' active>\r\n          Active\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink href='#'>Link</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink href='#'>Link</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink disabled href='#'>\r\n          Disabled\r\n        </NavLink>\r\n      </NavItem>\r\n    </Nav>\r\n  )\r\n}\r\nexport default NavBasic\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const navBorder = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Nav, NavItem, NavLink } from 'reactstrap'\r\n\r\nconst NavBorder = () => {\r\n  return (\r\n    <Nav className='wrap-border'>\r\n      <NavItem>\r\n        <NavLink href='#' active>\r\n          Active\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink href='#'>Link</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink href='#'>Link</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink disabled href='#'>\r\n          Disabled\r\n        </NavLink>\r\n      </NavItem>\r\n    </Nav>\r\n  )\r\n}\r\nexport default NavBorder\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const navCenter = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Nav, NavItem, NavLink } from 'reactstrap'\r\n\r\nconst NavCenter = () => {\r\n  return (\r\n    <Nav className='justify-content-center'>\r\n      <NavItem>\r\n        <NavLink href='#' active>\r\n          Active\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink href='#'>Link</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink href='#'>Link</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink disabled href='#'>\r\n          Disabled\r\n        </NavLink>\r\n      </NavItem>\r\n    </Nav>\r\n  )\r\n}\r\nexport default NavCenter\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const navEnd = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Nav, NavItem, NavLink } from 'reactstrap'\r\n\r\nconst NavEnd = () => {\r\n  return (\r\n    <Nav className='justify-content-end'>\r\n      <NavItem>\r\n        <NavLink href='#' active>\r\n          Active\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink href='#'>Link</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink href='#'>Link</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink disabled href='#'>\r\n          Disabled\r\n        </NavLink>\r\n      </NavItem>\r\n    </Nav>\r\n  )\r\n}\r\nexport default NavEnd\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const navVertical = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Nav, NavItem, NavLink } from 'reactstrap'\r\n\r\nconst NavVertical = () => {\r\n  return (\r\n    <Nav vertical>\r\n      <NavItem>\r\n        <NavLink href='#' active>\r\n          Active\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink href='#'>Link</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink href='#'>Link</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink disabled href='#'>\r\n          Disabled\r\n        </NavLink>\r\n      </NavItem>\r\n    </Nav>\r\n  )\r\n}\r\nexport default NavVertical\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const navVerticalBorder = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Nav, NavItem, NavLink } from 'reactstrap'\r\n\r\nconst NavVerticalBorder = () => {\r\n  return (\r\n    <Nav vertical className='wrap-border'>\r\n      <NavItem>\r\n        <NavLink href='#' active>\r\n          Active\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink href='#'>Link</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink href='#'>Link</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink disabled href='#'>\r\n          Disabled\r\n        </NavLink>\r\n      </NavItem>\r\n    </Nav>\r\n  )\r\n}\r\nexport default NavVerticalBorder\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const navSquareBorder = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Nav, NavItem, NavLink } from 'reactstrap'\r\n\r\nconst NavSquareBorder = () => {\r\n  return (\r\n    <Nav vertical className='wrap-border square-border'>\r\n      <NavItem>\r\n        <NavLink href='#' active>\r\n          Active\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink href='#'>Link</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink href='#'>Link</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink disabled href='#'>\r\n          Disabled\r\n        </NavLink>\r\n      </NavItem>\r\n    </Nav>\r\n  )\r\n}\r\nexport default NavSquareBorder\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const navDivider = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Nav, NavItem, NavLink } from 'reactstrap'\r\n\r\nconst NavDivider = () => {\r\n  return (\r\n    <Nav vertical className='wrap-border square-border'>\r\n      <NavItem>\r\n        <NavLink href='#' active>\r\n          Active\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink href='#'>Link</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink href='#'>Link</NavLink>\r\n      </NavItem>\r\n      <NavItem className='dropdown-divider'>\r\n        <NavLink href='#'>Link</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink disabled href='#'>\r\n          Disabled\r\n        </NavLink>\r\n      </NavItem>\r\n    </Nav>\r\n  )\r\n}\r\nexport default NavDivider\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n","// ** React Imports\r\nimport { Fragment, useEffect } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, CardText } from 'reactstrap'\r\n\r\n// ** Third Party Components\r\nimport Prism from 'prismjs'\r\n\r\n// ** Custom Components\r\nimport Card from '@components/card-snippet'\r\nimport BreadCrumbs from '@components/breadcrumbs'\r\n\r\n// ** Demo Components\r\nimport NavEnd from './NavEnd'\r\nimport NavBasic from './NavBasic'\r\nimport NavBorder from './NavBorder'\r\nimport NavCenter from './NavCenter'\r\nimport NavDivider from './NavDivider'\r\nimport NavVertical from './NavVertical'\r\nimport NavSquareBorder from './NavSquareBorder'\r\nimport NavVerticalBorder from './NavVerticalBorder'\r\n\r\n// ** Source Code\r\nimport {\r\n  navEnd,\r\n  navBasic,\r\n  navBorder,\r\n  navCenter,\r\n  navDivider,\r\n  navVertical,\r\n  navSquareBorder,\r\n  navVerticalBorder\r\n} from './NavComponentSourceCode'\r\n\r\nconst NavComponent = () => {\r\n  useEffect(() => {\r\n    Prism.highlightAll()\r\n  }, [])\r\n  return (\r\n    <Fragment>\r\n      <BreadCrumbs breadCrumbTitle='Navs' breadCrumbParent='Components' breadCrumbActive='Navs' />\r\n      <Row className='match-height'>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Base Nav' code={navBasic}>\r\n            <CardText>\r\n              The base nav component provides a strong foundation for building all types of navigation components.\r\n            </CardText>\r\n            <NavBasic />\r\n          </Card>\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <Card title='With Border' code={navBorder}>\r\n            <CardText>\r\n              Use Class <code>.wrap-border</code> with your <code>nav</code> tag to wrap your nav with a border\r\n            </CardText>\r\n            <NavBorder />\r\n          </Card>\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Center Alignment' code={navCenter}>\r\n            <CardText>\r\n              Use Class <code>.justify-content-center</code> with your <code>nav</code> tag to align your nav to center.\r\n            </CardText>\r\n            <NavCenter />\r\n          </Card>\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <Card title='End Alignment' code={navEnd}>\r\n            <CardText>\r\n              Use Class <code>.justify-content-end</code> with your <code>nav</code> tag to align your nav to End.\r\n            </CardText>\r\n            <NavEnd />\r\n          </Card>\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Vertical Nav' code={navVertical}>\r\n            <CardText>\r\n              Use prop <code>vertical</code> with nav tag to make it vertical.\r\n            </CardText>\r\n            <NavVertical />\r\n          </Card>\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Vertical Nav With Border' code={navVerticalBorder}>\r\n            <CardText>\r\n              To wrap with border, use <code>.wrap-border class</code>.\r\n            </CardText>\r\n            <NavVerticalBorder />\r\n          </Card>\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Nav With square Border' code={navSquareBorder}>\r\n            <CardText>\r\n              To wrap with square border, use <code>.square-border</code> class with <code>.wrap-border</code> class.\r\n            </CardText>\r\n            <NavSquareBorder />\r\n          </Card>\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Nav With Divider' code={navDivider}>\r\n            <CardText>\r\n              To add divider, use <code>.dropdown-divider</code> class to <code>NavItem</code>\r\n            </CardText>\r\n            <NavDivider />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default NavComponent\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-start mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  {breadCrumbParent}\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\r\n        <div className='breadcrumb-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' end>\r\n              <DropdownItem tag={Link} to='/apps/focus'>\r\n                <CheckSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Focus</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/instafriend'>\r\n                <MessageSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Instafriend</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/tellfari'>\r\n                <Mail className='me-1' size={14} />\r\n                <span className='align-middle'>Tellfari</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/book'>\r\n                <Calendar className='me-1' size={14} />\r\n                <span className='align-middle'>Book</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n","// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport { Code } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\r\n\r\nconst CardSnippet = props => {\r\n  // ** Props\r\n  const { title, children, noBody, code, iconCode } = props\r\n\r\n  // ** State\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  // ** If user passes custom icon then render that else render default icon\r\n  const IconCode = iconCode ? iconCode : <Code size={15} />\r\n\r\n  // ** To toggle collapse\r\n  const toggle = () => setIsOpen(!isOpen)\r\n\r\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\r\n  const Wrapper = noBody ? Fragment : CardBody\r\n\r\n  return (\r\n    <Card className='card-snippet'>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>{title}</CardTitle>\r\n        <div className='views cursor-pointer' onClick={toggle}>\r\n          {IconCode}\r\n        </div>\r\n      </CardHeader>\r\n      <Wrapper>{children}</Wrapper>\r\n      <Collapse isOpen={isOpen}>\r\n        <CardBody>{code}</CardBody>\r\n      </Collapse>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CardSnippet\r\n\r\n// ** PropTypes\r\nCardSnippet.propTypes = {\r\n  code: PropTypes.node,\r\n  noBody: PropTypes.bool,\r\n  children: PropTypes.any,\r\n  iconCode: PropTypes.node,\r\n  className: PropTypes.string,\r\n  title: PropTypes.string.isRequired\r\n}\r\n"],"sourceRoot":""}