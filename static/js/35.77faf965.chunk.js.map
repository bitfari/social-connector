{"version":3,"sources":["../../../src/js/polyfill.js","../../../src/js/util.js","../../../src/js/listeners.js","../../../src/js/index.js","@core/components/wizard/index.js","views/forms/wizard/steps/SocialLinks.js","views/forms/wizard/WizardVertical.js","views/forms/wizard/steps-with-validation/Address.js","views/forms/wizard/steps-with-validation/PersonalInfo.js","views/forms/wizard/steps-with-validation/AccountDetails.js","views/forms/wizard/WizardHorizontal.js","views/forms/wizard/WizardModernVertical.js","views/forms/wizard/index.js","@core/components/breadcrumbs/index.js"],"names":["matches","window","closest","element","WinEvent","createCustomEvent","document","params","e","Boolean","originPreventDefault","evt","bubbles","cancelable","detail","this","Object","get","polyfill","MILLISECONDS_MULTIPLIER","ClassName","ACTIVE","LINEAR","BLOCK","NONE","FADE","VERTICAL","transitionEndEvent","customProperty","show","stepperNode","indexStep","options","done","stepper","showEvent","from","to","activeStep","step","activeContent","content","showStep","showContent","stepList","trigger","currentTrigger","contentList","toIndex","shownEvent","duration","getTransitionDurationFromElement","emulateTransitionEnd","transitionDuration","parseFloat","called","emulatedDuration","detectAnimation","buildClickStepLinearListener","event","buildClickStepNonLinearListener","stepIndex","DEFAULT_OPTIONS","linear","animation","selectors","steps","_options","slice","call","_element","querySelectorAll","value","writable","_steps","_setLinkListeners","next","nextStep","_currentIndex","length","previous","previousStep","tempIndex","stepNumber","reset","destroy","Wizard","forwardRef","props","ref","type","className","contentClassName","headerClassName","separator","instance","activeIndex","setActiveIndex","useState","useEffect","Stepper","current","addEventListener","classnames","vertical","map","index","crossed","active","id","icon","title","subtitle","defaultProps","size","SocialLinks","WizardVertical","Address","errors","handleSubmit","useForm","onSubmit","isObjEmpty","tag","Col","md","for","name","placeholder","Ripple","color","PersonalInfo","onClick","AccountDetails","SignupSchema","yup","shape","required","email","oneOf","resolver","yupResolver","outline","disabled","WizardHorizontal","setStepper","useRef","el","WizardModernVertical","breadCrumbTitle","breadCrumbParent","breadCrumbActive","sm","BreadCrumbs","breadCrumbParent2","breadCrumbParent3","end","Link"],"mappings":"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","file":"static/js/35.77faf965.chunk.js","sourcesContent":["let matches = window.Element.prototype.matches\nlet closest = (element, selector) => element.closest(selector)\nlet WinEvent = (inType, params) => new window.Event(inType, params)\nlet createCustomEvent = (eventName, params) => {\n  const cEvent = new window.CustomEvent(eventName, params)\n\n  return cEvent\n}\n\n/* istanbul ignore next */\nfunction polyfill () {\n  if (!window.Element.prototype.matches) {\n    matches = window.Element.prototype.msMatchesSelector ||\n      window.Element.prototype.webkitMatchesSelector\n  }\n\n  if (!window.Element.prototype.closest) {\n    closest = (element, selector) => {\n      if (!document.documentElement.contains(element)) {\n        return null\n      }\n\n      do {\n        if (matches.call(element, selector)) {\n          return element\n        }\n\n        element = element.parentElement || element.parentNode\n      } while (element !== null && element.nodeType === 1)\n\n      return null\n    }\n  }\n\n  if (!window.Event || typeof window.Event !== 'function') {\n    WinEvent = (inType, params) => {\n      params = params || {}\n      const e = document.createEvent('Event')\n      e.initEvent(inType, Boolean(params.bubbles), Boolean(params.cancelable))\n      return e\n    }\n  }\n\n  if (typeof window.CustomEvent !== 'function') {\n    const originPreventDefault = window.Event.prototype.preventDefault\n\n    createCustomEvent = (eventName, params) => {\n      const evt = document.createEvent('CustomEvent')\n\n      params = params || { bubbles: false, cancelable: false, detail: null }\n      evt.initCustomEvent(eventName, params.bubbles, params.cancelable, params.detail)\n      evt.preventDefault = function () {\n        if (!this.cancelable) {\n          return\n        }\n\n        originPreventDefault.call(this)\n        Object.defineProperty(this, 'defaultPrevented', {\n          get: function () { return true }\n        })\n      }\n\n      return evt\n    }\n  }\n}\n\npolyfill()\n\nexport {\n  closest,\n  WinEvent,\n  createCustomEvent\n}\n","import { WinEvent, createCustomEvent } from './polyfill'\n\nconst MILLISECONDS_MULTIPLIER = 1000\n\nconst ClassName = {\n  ACTIVE: 'active',\n  LINEAR: 'linear',\n  BLOCK: 'dstepper-block',\n  NONE: 'dstepper-none',\n  FADE: 'fade',\n  VERTICAL: 'vertical'\n}\n\nconst transitionEndEvent = 'transitionend'\nconst customProperty = 'bsStepper'\n\nconst show = (stepperNode, indexStep, options, done) => {\n  const stepper = stepperNode[customProperty]\n\n  if (stepper._steps[indexStep].classList.contains(ClassName.ACTIVE) || stepper._stepsContents[indexStep].classList.contains(ClassName.ACTIVE)) {\n    return\n  }\n\n  const showEvent = createCustomEvent('show.bs-stepper', {\n    cancelable: true,\n    detail: {\n      from: stepper._currentIndex,\n      to: indexStep,\n      indexStep\n    }\n  })\n  stepperNode.dispatchEvent(showEvent)\n\n  const activeStep = stepper._steps.filter(step => step.classList.contains(ClassName.ACTIVE))\n  const activeContent = stepper._stepsContents.filter(content => content.classList.contains(ClassName.ACTIVE))\n\n  if (showEvent.defaultPrevented) {\n    return\n  }\n\n  if (activeStep.length) {\n    activeStep[0].classList.remove(ClassName.ACTIVE)\n  }\n  if (activeContent.length) {\n    activeContent[0].classList.remove(ClassName.ACTIVE)\n\n    if (!stepperNode.classList.contains(ClassName.VERTICAL) && !stepper.options.animation) {\n      activeContent[0].classList.remove(ClassName.BLOCK)\n    }\n  }\n\n  showStep(stepperNode, stepper._steps[indexStep], stepper._steps, options)\n  showContent(stepperNode, stepper._stepsContents[indexStep], stepper._stepsContents, activeContent, done)\n}\n\nconst showStep = (stepperNode, step, stepList, options) => {\n  stepList.forEach(step => {\n    const trigger = step.querySelector(options.selectors.trigger)\n\n    trigger.setAttribute('aria-selected', 'false')\n    // if stepper is in linear mode, set disabled attribute on the trigger\n    if (stepperNode.classList.contains(ClassName.LINEAR)) {\n      trigger.setAttribute('disabled', 'disabled')\n    }\n  })\n\n  step.classList.add(ClassName.ACTIVE)\n  const currentTrigger = step.querySelector(options.selectors.trigger)\n\n  currentTrigger.setAttribute('aria-selected', 'true')\n  // if stepper is in linear mode, remove disabled attribute on current\n  if (stepperNode.classList.contains(ClassName.LINEAR)) {\n    currentTrigger.removeAttribute('disabled')\n  }\n}\n\nconst showContent = (stepperNode, content, contentList, activeContent, done) => {\n  const stepper = stepperNode[customProperty]\n  const toIndex = contentList.indexOf(content)\n  const shownEvent = createCustomEvent('shown.bs-stepper', {\n    cancelable: true,\n    detail: {\n      from: stepper._currentIndex,\n      to: toIndex,\n      indexStep: toIndex\n    }\n  })\n\n  function complete () {\n    content.classList.add(ClassName.BLOCK)\n    content.removeEventListener(transitionEndEvent, complete)\n    stepperNode.dispatchEvent(shownEvent)\n    done()\n  }\n\n  if (content.classList.contains(ClassName.FADE)) {\n    content.classList.remove(ClassName.NONE)\n    const duration = getTransitionDurationFromElement(content)\n\n    content.addEventListener(transitionEndEvent, complete)\n    if (activeContent.length) {\n      activeContent[0].classList.add(ClassName.NONE)\n    }\n\n    content.classList.add(ClassName.ACTIVE)\n    emulateTransitionEnd(content, duration)\n  } else {\n    content.classList.add(ClassName.ACTIVE)\n    content.classList.add(ClassName.BLOCK)\n    stepperNode.dispatchEvent(shownEvent)\n    done()\n  }\n}\n\nconst getTransitionDurationFromElement = element => {\n  if (!element) {\n    return 0\n  }\n\n  // Get transition-duration of the element\n  let transitionDuration = window.getComputedStyle(element).transitionDuration\n  const floatTransitionDuration = parseFloat(transitionDuration)\n\n  // Return 0 if element or transition duration is not found\n  if (!floatTransitionDuration) {\n    return 0\n  }\n\n  // If multiple durations are defined, take the first\n  transitionDuration = transitionDuration.split(',')[0]\n\n  return parseFloat(transitionDuration) * MILLISECONDS_MULTIPLIER\n}\n\nconst emulateTransitionEnd = (element, duration) => {\n  let called = false\n  const durationPadding = 5\n  const emulatedDuration = duration + durationPadding\n  function listener () {\n    called = true\n    element.removeEventListener(transitionEndEvent, listener)\n  }\n\n  element.addEventListener(transitionEndEvent, listener)\n  window.setTimeout(() => {\n    if (!called) {\n      element.dispatchEvent(WinEvent(transitionEndEvent))\n    }\n\n    element.removeEventListener(transitionEndEvent, listener)\n  }, emulatedDuration)\n}\n\nconst detectAnimation = (contentList, options) => {\n  if (options.animation) {\n    contentList.forEach(content => {\n      content.classList.add(ClassName.FADE)\n      content.classList.add(ClassName.NONE)\n    })\n  }\n}\n\nexport {\n  show,\n  ClassName,\n  customProperty,\n  detectAnimation\n}\n","import { closest } from './polyfill'\r\nimport { customProperty, show } from './util'\r\n\r\nconst buildClickStepLinearListener = () => function clickStepLinearListener (event) {\r\n  event.preventDefault()\r\n}\r\n\r\nconst buildClickStepNonLinearListener = options => function clickStepNonLinearListener (event) {\r\n  event.preventDefault()\r\n\r\n  const step = closest(event.target, options.selectors.steps)\r\n  const stepperNode = closest(step, options.selectors.stepper)\r\n  const stepper = stepperNode[customProperty]\r\n  const stepIndex = stepper._steps.indexOf(step)\r\n\r\n  show(stepperNode, stepIndex, options, () => {\r\n    stepper._currentIndex = stepIndex\r\n  })\r\n}\r\n\r\nexport {\r\n  buildClickStepLinearListener,\r\n  buildClickStepNonLinearListener\r\n}\r\n","import { show, customProperty, detectAnimation, ClassName } from './util'\r\nimport { buildClickStepLinearListener, buildClickStepNonLinearListener } from './listeners'\r\n\r\nconst DEFAULT_OPTIONS = {\r\n  linear: true,\r\n  animation: false,\r\n  selectors: {\r\n    steps: '.step',\r\n    trigger: '.step-trigger',\r\n    stepper: '.bs-stepper'\r\n  }\r\n}\r\n\r\nclass Stepper {\r\n  constructor (element, _options = {}) {\r\n    this._element = element\r\n    this._currentIndex = 0\r\n    this._stepsContents = []\r\n\r\n    this.options = {\r\n      ...DEFAULT_OPTIONS,\r\n      ..._options\r\n    }\r\n\r\n    this.options.selectors = {\r\n      ...DEFAULT_OPTIONS.selectors,\r\n      ...this.options.selectors\r\n    }\r\n\r\n    if (this.options.linear) {\r\n      this._element.classList.add(ClassName.LINEAR)\r\n    }\r\n\r\n    this._steps = [].slice.call(this._element.querySelectorAll(this.options.selectors.steps))\r\n\r\n    this._steps.filter(step => step.hasAttribute('data-target'))\r\n      .forEach(step => {\r\n        this._stepsContents.push(\r\n          this._element.querySelector(step.getAttribute('data-target'))\r\n        )\r\n      })\r\n\r\n    detectAnimation(this._stepsContents, this.options)\r\n    this._setLinkListeners()\r\n    Object.defineProperty(this._element, customProperty, {\r\n      value: this,\r\n      writable: true\r\n    })\r\n\r\n    if (this._steps.length) {\r\n      show(this._element, this._currentIndex, this.options, () => {})\r\n    }\r\n  }\r\n\r\n  // Private\r\n\r\n  _setLinkListeners () {\r\n    this._steps.forEach(step => {\r\n      const trigger = step.querySelector(this.options.selectors.trigger)\r\n\r\n      if (this.options.linear) {\r\n        this._clickStepLinearListener = buildClickStepLinearListener(this.options)\r\n        trigger.addEventListener('click', this._clickStepLinearListener)\r\n      } else {\r\n        this._clickStepNonLinearListener = buildClickStepNonLinearListener(this.options)\r\n        trigger.addEventListener('click', this._clickStepNonLinearListener)\r\n      }\r\n    })\r\n  }\r\n\r\n  // Public\r\n\r\n  next () {\r\n    const nextStep = (this._currentIndex + 1) <= this._steps.length - 1 ? this._currentIndex + 1 : (this._steps.length - 1)\r\n\r\n    show(this._element, nextStep, this.options, () => {\r\n      this._currentIndex = nextStep\r\n    })\r\n  }\r\n\r\n  previous () {\r\n    const previousStep = (this._currentIndex - 1) >= 0 ? this._currentIndex - 1 : 0\r\n\r\n    show(this._element, previousStep, this.options, () => {\r\n      this._currentIndex = previousStep\r\n    })\r\n  }\r\n\r\n  to (stepNumber) {\r\n    const tempIndex = stepNumber - 1\r\n    const nextStep = tempIndex >= 0 && tempIndex < this._steps.length\r\n      ? tempIndex\r\n      : 0\r\n\r\n    show(this._element, nextStep, this.options, () => {\r\n      this._currentIndex = nextStep\r\n    })\r\n  }\r\n\r\n  reset () {\r\n    show(this._element, 0, this.options, () => {\r\n      this._currentIndex = 0\r\n    })\r\n  }\r\n\r\n  destroy () {\r\n    this._steps.forEach(step => {\r\n      const trigger = step.querySelector(this.options.selectors.trigger)\r\n\r\n      if (this.options.linear) {\r\n        trigger.removeEventListener('click', this._clickStepLinearListener)\r\n      } else {\r\n        trigger.removeEventListener('click', this._clickStepNonLinearListener)\r\n      }\r\n    })\r\n\r\n    this._element[customProperty] = undefined\r\n    this._element = undefined\r\n    this._currentIndex = undefined\r\n    this._steps = undefined\r\n    this._stepsContents = undefined\r\n    this._clickStepLinearListener = undefined\r\n    this._clickStepNonLinearListener = undefined\r\n  }\r\n}\r\n\r\nexport default Stepper\r\n","// ** React Imports\r\nimport { useEffect, useState, Fragment, forwardRef } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Stepper from 'bs-stepper'\r\nimport classnames from 'classnames'\r\nimport { PropTypes } from 'prop-types'\r\nimport { ChevronRight } from 'react-feather'\r\n\r\n// ** Styles\r\nimport 'bs-stepper/dist/css/bs-stepper.min.css'\r\nimport '../../../@core/scss/base/plugins/forms/form-wizard.scss'\r\n\r\nconst Wizard = forwardRef((props, ref) => {\r\n  // ** Props\r\n  const { type, className, contentClassName, headerClassName, steps, separator, options, instance } = props\r\n\r\n  // ** State\r\n  const [activeIndex, setActiveIndex] = useState(0)\r\n\r\n  // ** Vars\r\n  let stepper = null\r\n\r\n  // ** Step change listener on mount\r\n  useEffect(() => {\r\n    stepper = new Stepper(ref.current, options)\r\n\r\n    ref.current.addEventListener('shown.bs-stepper', function (event) {\r\n      setActiveIndex(event.detail.indexStep)\r\n    })\r\n\r\n    if (instance) {\r\n      instance(stepper)\r\n    }\r\n  }, [])\r\n\r\n  // ** Renders Wizard Header\r\n  const renderHeader = () => {\r\n    return steps.map((step, index) => {\r\n      return (\r\n        <Fragment key={step.id}>\r\n          {index !== 0 && index !== steps.length ? <div className='line'>{separator}</div> : null}\r\n          <div\r\n            className={classnames('step', {\r\n              crossed: activeIndex > index,\r\n              active: index === activeIndex\r\n            })}\r\n            data-target={`#${step.id}`}\r\n          >\r\n            <button type='button' className='step-trigger'>\r\n              <span className='bs-stepper-box'>{step.icon ? step.icon : index + 1}</span>\r\n              <span className='bs-stepper-label'>\r\n                <span className='bs-stepper-title'>{step.title}</span>\r\n                {step.subtitle ? <span className='bs-stepper-subtitle'>{step.subtitle}</span> : null}\r\n              </span>\r\n            </button>\r\n          </div>\r\n        </Fragment>\r\n      )\r\n    })\r\n  }\r\n\r\n  // ** Renders Wizard Content\r\n  const renderContent = () => {\r\n    return steps.map((step, index) => {\r\n      return (\r\n        <div\r\n          className={classnames('content', {\r\n            [contentClassName]: contentClassName,\r\n            'active dstepper-block': activeIndex === index\r\n          })}\r\n          id={step.id}\r\n          key={step.id}\r\n        >\r\n          {step.content}\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className={classnames('bs-stepper', {\r\n        [className]: className,\r\n        vertical: type === 'vertical',\r\n        'vertical wizard-modern': type === 'modern-vertical',\r\n        'wizard-modern': type === 'modern-horizontal'\r\n      })}\r\n    >\r\n      <div className={classnames('bs-stepper-header', { [headerClassName]: headerClassName })}>{renderHeader()}</div>\r\n      <div className='bs-stepper-content'>{renderContent()}</div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Wizard\r\n\r\n// ** Default Props\r\nWizard.defaultProps = {\r\n  options: {},\r\n  type: 'horizontal',\r\n  separator: <ChevronRight size={17} />\r\n}\r\n\r\n// ** PropTypes\r\nWizard.propTypes = {\r\n  type: PropTypes.string,\r\n  instance: PropTypes.func,\r\n  options: PropTypes.object,\r\n  className: PropTypes.string,\r\n  separator: PropTypes.element,\r\n  headerClassName: PropTypes.string,\r\n  contentClassName: PropTypes.string,\r\n  steps: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      subtitle: PropTypes.string,\r\n      icon: PropTypes.any,\r\n      content: PropTypes.any.isRequired\r\n    })\r\n  ).isRequired\r\n}\r\n","import { Fragment } from 'react'\r\nimport { ArrowLeft } from 'react-feather'\r\nimport { Label, FormGroup, Row, Col, Form, Input, Button } from 'reactstrap'\r\n\r\nconst SocialLinks = ({ stepper, type }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className='content-header'>\r\n        <h5 className='mb-0'>Social Links</h5>\r\n        <small>Enter Your Social Links.</small>\r\n      </div>\r\n      <Form onSubmit={e => e.preventDefault()}>\r\n        <Row>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`twitter-${type}`}>\r\n              Twitter\r\n            </Label>\r\n            <Input type='text' id={`twitter-${type}`} name='twitter' placeholder='https://twitter.com/abc' />\r\n          </FormGroup>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`facebook-${type}`}>\r\n              Facebook\r\n            </Label>\r\n            <Input type='text' id={`facebook-${type}`} name='facebook' placeholder='https://facebook.com/abc' />\r\n          </FormGroup>\r\n        </Row>\r\n        <Row>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`google-${type}`}>\r\n              Google+\r\n            </Label>\r\n            <Input type='text' id={`google-${type}`} name='google' placeholder='https://plus.google.com/abc' />\r\n          </FormGroup>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`linkedin-${type}`}>\r\n              Linkedin\r\n            </Label>\r\n            <Input type='text' id={`linkedin-${type}`} name='linkedin' placeholder='https://linkedin.com/abc' />\r\n          </FormGroup>\r\n        </Row>\r\n        <div className='d-flex justify-content-between'>\r\n          <Button.Ripple color='primary' className='btn-prev' onClick={() => stepper.previous()}>\r\n            <ArrowLeft size={14} className='align-middle mr-sm-25 mr-0'></ArrowLeft>\r\n            <span className='align-middle d-sm-inline-block d-none'>Previous</span>\r\n          </Button.Ripple>\r\n          <Button.Ripple color='success' className='btn-submit' onClick={() => alert('submitted')}>\r\n            Submit\r\n          </Button.Ripple>\r\n        </div>\r\n      </Form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default SocialLinks\r\n","import { useRef, useState } from 'react'\r\nimport Wizard from '@components/wizard'\r\nimport Address from './steps/Address'\r\nimport SocialLinks from './steps/SocialLinks'\r\nimport PersonalInfo from './steps/PersonalInfo'\r\nimport AccountDetails from './steps/AccountDetails'\r\n\r\nconst WizardVertical = () => {\r\n  const [stepper, setStepper] = useState(null)\r\n  const ref = useRef(null)\r\n\r\n  const steps = [\r\n    {\r\n      id: 'account-details',\r\n      title: 'Account Details',\r\n      subtitle: 'Enter Your Account Details.',\r\n      content: <AccountDetails stepper={stepper} type='wizard-vertical' />\r\n    },\r\n    {\r\n      id: 'personal-info',\r\n      title: 'Personal Info',\r\n      subtitle: 'Add Personal Info',\r\n      content: <PersonalInfo stepper={stepper} type='wizard-vertical' />\r\n    },\r\n    {\r\n      id: 'step-address',\r\n      title: 'Address',\r\n      subtitle: 'Add Address',\r\n      content: <Address stepper={stepper} type='wizard-vertical' />\r\n    },\r\n    {\r\n      id: 'social-links',\r\n      title: 'Social Links',\r\n      subtitle: 'Add Social Links',\r\n      content: <SocialLinks stepper={stepper} type='wizard-vertical' />\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <div className='vertical-wizard'>\r\n      <Wizard\r\n        type='vertical'\r\n        ref={ref}\r\n        steps={steps}\r\n        options={{\r\n          linear: false\r\n        }}\r\n        instance={el => setStepper(el)}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WizardVertical\r\n","import { Fragment } from 'react'\r\nimport { isObjEmpty } from '@utils'\r\nimport { useForm } from 'react-hook-form'\r\nimport { ArrowLeft, ArrowRight } from 'react-feather'\r\nimport { Label, FormGroup, Row, Col, Button, Form, Input } from 'reactstrap'\r\n\r\nconst Address = ({ stepper, type }) => {\r\n  const { errors, handleSubmit, trigger } = useForm()\r\n\r\n  const onSubmit = () => {\r\n    trigger()\r\n    if (isObjEmpty(errors)) {\r\n      stepper.next()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='content-header'>\r\n        <h5 className='mb-0'>Address</h5>\r\n        <small>Enter the Screen Physical Address</small>\r\n      </div>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Row>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`address-${type}`}>\r\n              Address\r\n            </Label>\r\n            <Input\r\n              type='text'\r\n              id={`address-${type}`}\r\n              name={`address-${type}`}\r\n              placeholder='123 Street, City, Zip Code'\r\n            />\r\n          </FormGroup>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`landmark-${type}`}>\r\n              Closest Landmark\r\n            </Label>\r\n            <Input\r\n              type='text'\r\n              name={`landmark-${type}`}\r\n              id={`landmark-${type}`}\r\n              placeholder='Name a nearby landmark if any'\r\n            />\r\n          </FormGroup>\r\n        </Row>\r\n        <Row>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`pincode-${type}`}>\r\n              Pincode\r\n            </Label>\r\n            <Input\r\n              type='text'\r\n              name={`pincode-${type}`}\r\n              id={`pincode-${type}`}\r\n              placeholder='type a six digit pincode and save it on a note'\r\n            />\r\n          </FormGroup>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`city-${type}`}>\r\n              City\r\n            </Label>\r\n            <Input\r\n              type='text'\r\n              name={`city-${type}`}\r\n              id={`city-${type}`}\r\n              placeholder='New York'\r\n            />\r\n          </FormGroup>\r\n        </Row>\r\n        <div className='d-flex justify-content-between'>\r\n          <Button.Ripple color='primary' className='btn-prev'>\r\n            <ArrowLeft size={14} className='align-middle mr-sm-25 mr-0'></ArrowLeft>\r\n            <span className='align-middle d-sm-inline-block d-none'>Previous</span>\r\n          </Button.Ripple>\r\n          <Button.Ripple type='submit' color='primary' className='btn-next'>\r\n            <span className='align-middle d-sm-inline-block d-none'>Next</span>\r\n            <ArrowRight size={14} className='align-middle ml-sm-25 ml-0'></ArrowRight>\r\n          </Button.Ripple>\r\n        </div>\r\n      </Form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Address\r\n","import { Fragment } from 'react'\r\nimport Select from 'react-select'\r\nimport { useForm } from 'react-hook-form'\r\nimport { ArrowLeft, ArrowRight } from 'react-feather'\r\nimport { isObjEmpty } from '@utils'\r\nimport { Label, FormGroup, Row, Col, Button, Form, Input } from 'reactstrap'\r\n\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\n\r\nconst PersonalInfo = ({ stepper, type }) => {\r\n  const { errors, handleSubmit, trigger } = useForm()\r\n\r\n  const onSubmit = () => {\r\n    trigger()\r\n    if (isObjEmpty(errors)) {\r\n      stepper.next()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='content-header'>\r\n        <h5 className='mb-0'>Payment Info</h5>\r\n        <small>Enter Your Business Info.</small>\r\n      </div>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Row>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`first-name-${type}`}>\r\n              STX Address\r\n            </Label>\r\n            <Input\r\n              type='text'\r\n              name={`first-name-${type}`}\r\n              id={`first-name-${type}`}\r\n              placeholder='SP31234567890...'\r\n             />\r\n          </FormGroup>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`last-name-${type}`}>\r\n              Screen SerialNumber\r\n            </Label>\r\n            <Input\r\n              type='text'\r\n              name={`last-name-${type}`}\r\n              id={`last-name-${type}`}\r\n              placeholder='12345'\r\n            />\r\n          </FormGroup>\r\n        </Row>\r\n        <div className='d-flex justify-content-between'>\r\n          <Button.Ripple color='primary' className='btn-prev' onClick={() => stepper.previous()}>\r\n            <ArrowLeft size={14} className='align-middle mr-sm-25 mr-0'></ArrowLeft>\r\n            <span className='align-middle d-sm-inline-block d-none'>Previous</span>\r\n          </Button.Ripple>\r\n          <Button.Ripple type='submit' color='primary' className='btn-next'>\r\n            <span className='align-middle d-sm-inline-block d-none'>Next</span>\r\n            <ArrowRight size={14} className='align-middle ml-sm-25 ml-0'></ArrowRight>\r\n          </Button.Ripple>\r\n        </div>\r\n      </Form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default PersonalInfo\r\n","import * as yup from 'yup'\r\nimport { Fragment } from 'react'\r\nimport { isObjEmpty } from '@utils'\r\nimport { useForm } from 'react-hook-form'\r\nimport { ArrowLeft, ArrowRight } from 'react-feather'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport { Form, Label, Input, FormGroup, Row, Col, Button } from 'reactstrap'\r\n\r\nconst AccountDetails = ({ stepper, type }) => {\r\n  const SignupSchema = yup.object().shape({\r\n    [`username-${type}`]: yup.string().required(),\r\n    [`email-${type}`]: yup.string().email().required(),\r\n    [`password-val-${type}`]: yup.string().required(),\r\n    'confirm-password-val': yup\r\n      .string()\r\n      .required()\r\n      .oneOf([yup.ref(`password-val-${type}`), null], 'Passwords must match')\r\n  })\r\n\r\n  const { errors, handleSubmit, trigger } = useForm({\r\n    resolver: yupResolver(SignupSchema)\r\n  })\r\n\r\n  const onSubmit = () => {\r\n    trigger()\r\n    if (isObjEmpty(errors)) {\r\n      stepper.next()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='content-header'>\r\n        <h5 className='mb-0'>Screen Details</h5>\r\n        <small className='text-muted'>Enter Your Account Details.</small>\r\n      </div>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Row>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`username-${type}`}>\r\n              Username\r\n            </Label>\r\n          </FormGroup>\r\n          <FormGroup tag={Col} md='6'>\r\n            <Label className='form-label' for={`email-${type}`}>\r\n              Email\r\n            </Label>\r\n            <Input\r\n              type='email'\r\n              name={`email-${type}`}\r\n              id={`email-${type}`}\r\n              placeholder='yourbusiness@email.com'\r\n            />\r\n          </FormGroup>\r\n        </Row>\r\n        <Row>\r\n          <div className='form-group form-password-toggle col-md-6'>\r\n            <Label className='form-label' for={`password-val-${type}`}>\r\n              Password\r\n            </Label>\r\n            <Input\r\n              type='password'\r\n              name={`password-val-${type}`}\r\n              id={`password-val-${type}`}\r\n            />\r\n          </div>\r\n          <div className='form-group form-password-toggle col-md-6'>\r\n            <Label className='form-label' for='confirm-password-val'>\r\n              Confirm Password\r\n            </Label>\r\n            <Input\r\n              type='password'\r\n              name='confirm-password-val'\r\n              id='confirm-password-val'\r\n            />\r\n          </div>\r\n        </Row>\r\n        <div className='d-flex justify-content-between'>\r\n          <Button.Ripple color='secondary' className='btn-prev' outline disabled>\r\n            <ArrowLeft size={14} className='align-middle mr-sm-25 mr-0'></ArrowLeft>\r\n            <span className='align-middle d-sm-inline-block d-none'>Previous</span>\r\n          </Button.Ripple>\r\n          <Button.Ripple type='submit' color='primary' className='btn-next'>\r\n            <span className='align-middle d-sm-inline-block d-none'>Next</span>\r\n            <ArrowRight size={14} className='align-middle ml-sm-25 ml-0'></ArrowRight>\r\n          </Button.Ripple>\r\n        </div>\r\n      </Form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AccountDetails\r\n","import { useRef, useState } from 'react'\r\nimport Wizard from '@components/wizard'\r\nimport { ArrowRight } from 'react-feather'\r\nimport Address from './steps-with-validation/Address'\r\nimport PersonalInfo from './steps-with-validation/PersonalInfo'\r\nimport AccountDetails from './steps-with-validation/AccountDetails'\r\n\r\nconst WizardHorizontal = () => {\r\n  const [stepper, setStepper] = useState(null)\r\n  const ref = useRef(null)\r\n\r\n  const steps = [\r\n    {\r\n      id: 'account-details',\r\n      title: 'Screen Details',\r\n      subtitle: 'Register Your Screen.',\r\n      content: <AccountDetails stepper={stepper} type='wizard-horizontal' />\r\n    },\r\n    {\r\n      id: 'personal-info',\r\n      title: 'Payment Info',\r\n      subtitle: 'Add Wallet Address',\r\n      content: <PersonalInfo stepper={stepper} type='wizard-horizontal' />\r\n    },\r\n    {\r\n      id: 'step-address',\r\n      title: 'Location',\r\n      subtitle: 'Add Screen Location',\r\n      content: <Address stepper={stepper} type='wizard-horizontal' />\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <div className='horizontal-wizard'>\r\n      <Wizard instance={el => setStepper(el)} ref={ref} steps={steps} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WizardHorizontal\r\n","import { useRef, useState } from 'react'\r\nimport Wizard from '@components/wizard'\r\nimport Address from './steps/Address'\r\nimport SocialLinks from './steps/SocialLinks'\r\nimport PersonalInfo from './steps/PersonalInfo'\r\nimport AccountDetails from './steps/AccountDetails'\r\nimport { FileText, User, MapPin, Link } from 'react-feather'\r\n\r\nconst WizardModernVertical = () => {\r\n  const [stepper, setStepper] = useState(null)\r\n  const ref = useRef(null)\r\n\r\n  const steps = [\r\n    {\r\n      id: 'account-details',\r\n      title: 'Account Details',\r\n      subtitle: 'Enter Your Account Details.',\r\n      icon: <FileText size={18} />,\r\n      content: <AccountDetails stepper={stepper} type='modern-vertical' />\r\n    },\r\n    {\r\n      id: 'personal-info',\r\n      title: 'Personal Info',\r\n      subtitle: 'Add Personal Info',\r\n      icon: <User size={18} />,\r\n      content: <PersonalInfo stepper={stepper} type='modern-vertical' />\r\n    },\r\n    {\r\n      id: 'step-address',\r\n      title: 'Address',\r\n      subtitle: 'Add Address',\r\n      icon: <MapPin size={18} />,\r\n      content: <Address stepper={stepper} type='modern-vertical' />\r\n    },\r\n    {\r\n      id: 'social-links',\r\n      title: 'Social Links',\r\n      subtitle: 'Add Social Links',\r\n      icon: <Link size={18} />,\r\n      content: <SocialLinks stepper={stepper} type='modern-vertical' />\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <div className='modern-vertical-wizard'>\r\n      <Wizard\r\n        type='modern-vertical'\r\n        ref={ref}\r\n        steps={steps}\r\n        options={{\r\n          linear: false\r\n        }}\r\n        instance={el => setStepper(el)}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WizardModernVertical\r\n","import { Fragment } from 'react'\r\nimport { Row, Col } from 'reactstrap'\r\nimport WizardModern from './WizardModern'\r\nimport WizardVertical from './WizardVertical'\r\nimport WizardHorizontal from './WizardHorizontal'\r\nimport WizardModernVertical from './WizardModernVertical'\r\nimport BreadCrumbs from '@components/breadcrumbs'\r\n\r\nconst Wizard = () => {\r\n  return (\r\n    <Fragment>\r\n      <BreadCrumbs breadCrumbTitle='New Screen' breadCrumbParent='Form' breadCrumbActive='New Screen' />\r\n      <Row>\r\n        <Col sm='12'>\r\n          <WizardHorizontal />\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default Wizard\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-start mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  {breadCrumbParent}\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\r\n        <div className='breadcrumb-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' end>\r\n              <DropdownItem tag={Link} to='/apps/focus'>\r\n                <CheckSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Focus</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/instafriend'>\r\n                <MessageSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Instafriend</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/tellfari'>\r\n                <Mail className='me-1' size={14} />\r\n                <span className='align-middle'>Tellfari</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/book'>\r\n                <Calendar className='me-1' size={14} />\r\n                <span className='align-middle'>Book</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n"],"sourceRoot":""}