{"version":3,"sources":["views/ui-elements/cards/network/StatsCard.js","@core/components/widgets/stats/ChartOptions.js","@core/components/widgets/stats/StatsWithLineChart.js","views/ui-elements/cards/network/Newsletter.js","views/ui-elements/cards/network/SiteTraffic.js","views/ui-elements/cards/network/ActiveUsers.js","@core/components/widgets/stats/StatsWithAreaChart.js","views/ui-elements/cards/network/QuaterlySales.js","views/ui-elements/cards/network/OrdersReceived.js","views/ui-elements/cards/network/RevenueGenerated.js","views/ui-elements/cards/network/SubscribersGained.js","@core/components/widgets/stats/StatsVertical.js","@core/components/widgets/stats/StatsHorizontal.js","views/ui-elements/cards/network/index.js","@core/components/breadcrumbs/index.js","@core/components/avatar/index.js","@core/components/widgets/stats/TinyChartStats.js","views/ui-elements/cards/network/OrdersBarChart.js","views/ui-elements/cards/network/ProfitLineChart.js"],"names":["StatsCard","cols","data","title","subtitle","color","icon","size","className","tag","map","item","index","colMargin","Object","keys","margin","classnames","length","StatsWithLineChart","stats","statTitle","series","options","type","height","rest","defaultProps","chart","toolbar","show","sparkline","enabled","dropShadow","top","left","blur","opacity","grid","colors","dataLabels","stroke","curve","width","fill","gradient","shadeIntensity","gradientToColors","opacityFrom","opacityTo","stops","xaxis","labels","axisBorder","yaxis","tooltip","x","Newsletter","warning","setData","useState","useEffect","axios","get","then","res","id","SiteTraffic","ActiveUsers","success","StatsWithAreaChart","props","QuarterlySales","danger","analyticsData","sales","OrdersReceived","kFormatter","orders","RevenueGenerated","revenue","SubscribersGained","subscribers","StatsVertical","StatsHorizontal","renderStats","statsMargin","StatisticsCards","context","useContext","ThemeColors","breadCrumbTitle","breadCrumbParent","breadCrumbActive","lg","xs","OrdersBarChart","main","ProfitLineChart","info","sm","md","xl","QuaterlySales","BreadCrumbs","breadCrumbParent2","breadCrumbParent3","to","active","end","Link","Avatar","forwardRef","ref","img","status","badgeUp","content","Tag","initials","imgWidth","badgeText","imgHeight","badgeColor","imgClassName","contentStyles","undefined","style","str","results","split","forEach","e","push","join","getInitials","pill","src","alt","TinyChartStats","stacked","padding","right","bottom","plotOptions","bar","horizontal","columnWidth","borderRadius","backgroundBarColors","backgroundBarRadius","legend","axisTicks","statistics","zoom","borderColor","strokeDashArray","lines","markers","strokeColors","strokeWidth","strokeOpacity","fillOpacity","discrete","seriesIndex","dataPointIndex","fillColor","strokeColor","shape","radius","hover","fontSize"],"mappings":"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","file":"static/js/47.a89c58c1.chunk.js","sourcesContent":["// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { TrendingUp, User, Box, DollarSign } from 'react-feather'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col } from 'reactstrap'\r\n\r\nconst StatsCard = ({ cols }) => {\r\n  const data = [\r\n    {\r\n      title: '230k',\r\n      subtitle: 'Sales',\r\n      color: 'light-primary',\r\n      icon: <TrendingUp size={24} />\r\n    },\r\n    {\r\n      title: '8.549k',\r\n      subtitle: 'Customers',\r\n      color: 'light-info',\r\n      icon: <User size={24} />\r\n    },\r\n    {\r\n      title: '1.423k',\r\n      subtitle: 'Products',\r\n      color: 'light-danger',\r\n      icon: <Box size={24} />\r\n    },\r\n    {\r\n      title: '$9745',\r\n      subtitle: 'Revenue',\r\n      color: 'light-success',\r\n      icon: <DollarSign size={24} />\r\n    }\r\n  ]\r\n\r\n  const renderData = () => {\r\n    return data.map((item, index) => {\r\n      const colMargin = Object.keys(cols)\r\n      const margin = index === 2 ? 'sm' : colMargin[0]\r\n      return (\r\n        <Col\r\n          key={index}\r\n          {...cols}\r\n          className={classnames({\r\n            [`mb-2 mb-${margin}-0`]: index !== data.length - 1\r\n          })}\r\n        >\r\n          <div className='d-flex align-items-center'>\r\n            <Avatar color={item.color} icon={item.icon} className='me-2' />\r\n            <div className='my-auto'>\r\n              <h4 className='fw-bolder mb-0'>{item.title}</h4>\r\n              <CardText className='font-small-3 mb-0'>{item.subtitle}</CardText>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Card className='card-statistics'>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Statistics</CardTitle>\r\n        <CardText className='card-text font-small-2 me-25 mb-0'>Updated 1 month ago</CardText>\r\n      </CardHeader>\r\n      <CardBody className='statistics-body'>\r\n        <Row>{renderData()}</Row>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default StatsCard\r\n","// ** Area Chart Common Options\r\nexport const areaChartOptions = {\r\n  chart: {\r\n    toolbar: {\r\n      show: false\r\n    },\r\n    sparkline: {\r\n      enabled: true\r\n    }\r\n  },\r\n  grid: {\r\n    show: false\r\n  },\r\n  colors: ['#7367F0'],\r\n  dataLabels: {\r\n    enabled: false\r\n  },\r\n  stroke: {\r\n    curve: 'smooth',\r\n    width: 2.5\r\n  },\r\n  fill: {\r\n    type: 'gradient',\r\n    gradient: {\r\n      shadeIntensity: 0.9,\r\n      opacityFrom: 0.7,\r\n      opacityTo: 0.5,\r\n      stops: [0, 80, 100]\r\n    }\r\n  },\r\n  xaxis: {\r\n    labels: {\r\n      show: false\r\n    },\r\n    axisBorder: {\r\n      show: false\r\n    }\r\n  },\r\n  yaxis: {\r\n    labels: {\r\n      show: false\r\n    }\r\n  },\r\n  tooltip: {\r\n    x: { show: false }\r\n  }\r\n}\r\n\r\n// ** Line Chart Common Options\r\nexport const lineChartOptions = {\r\n  chart: {\r\n    toolbar: {\r\n      show: false\r\n    },\r\n    sparkline: {\r\n      enabled: true\r\n    },\r\n    dropShadow: {\r\n      enabled: true,\r\n      top: 5,\r\n      left: 0,\r\n      blur: 4,\r\n      opacity: 0.1\r\n    }\r\n  },\r\n  grid: {\r\n    show: false\r\n  },\r\n  colors: ['#7367F0'],\r\n  dataLabels: {\r\n    enabled: false\r\n  },\r\n  stroke: {\r\n    curve: 'smooth',\r\n    width: 5\r\n  },\r\n  fill: {\r\n    type: 'gradient',\r\n    gradient: {\r\n      shadeIntensity: 1,\r\n      gradientToColors: ['#A9A2F6'],\r\n      opacityFrom: 1,\r\n      opacityTo: 1,\r\n      stops: [0, 100, 100, 100]\r\n    }\r\n  },\r\n\r\n  xaxis: {\r\n    labels: {\r\n      show: false\r\n    },\r\n    axisBorder: {\r\n      show: false\r\n    }\r\n  },\r\n  yaxis: {\r\n    labels: {\r\n      show: false\r\n    }\r\n  },\r\n  tooltip: {\r\n    x: { show: false }\r\n  }\r\n}\r\n","// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport Chart from 'react-apexcharts'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardText } from 'reactstrap'\r\n\r\n// ** Default Options\r\nimport { lineChartOptions } from './ChartOptions'\r\n\r\nconst StatsWithLineChart = ({ icon, color, stats, statTitle, series, options, type, height, ...rest }) => {\r\n  return (\r\n    <Card {...rest}>\r\n      <CardHeader className='align-items-start pb-0'>\r\n        <div>\r\n          <h2 className='fw-bolder'>{stats}</h2>\r\n          <CardText>{statTitle}</CardText>\r\n        </div>\r\n        <Avatar className='avatar-stats p-50 m-0' color={`light-${color}`} icon={icon} />\r\n      </CardHeader>\r\n      <Chart options={options} series={series} type={type} height={height ? height : 100} />\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default StatsWithLineChart\r\n\r\n// ** PropTypes\r\nStatsWithLineChart.propTypes = {\r\n  type: PropTypes.string,\r\n  height: PropTypes.string,\r\n  options: PropTypes.object,\r\n  icon: PropTypes.element.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n  stats: PropTypes.string.isRequired,\r\n  series: PropTypes.array.isRequired,\r\n  statTitle: PropTypes.string.isRequired\r\n}\r\n\r\n// ** Default Props\r\nStatsWithLineChart.defaultProps = {\r\n  options: lineChartOptions,\r\n  color: 'primary'\r\n}\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport { Mail } from 'react-feather'\r\n\r\n// ** Custom Components\r\nimport StatsWithLineChart from '@components/widgets/stats/StatsWithLineChart'\r\n\r\nconst Newsletter = ({ warning }) => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-network/newsletter').then(res => setData(res.data))\r\n  }, [])\r\n\r\n  const options = {\r\n    chart: {\r\n      id: 'newsletter',\r\n      toolbar: {\r\n        show: false\r\n      },\r\n      sparkline: {\r\n        enabled: true\r\n      },\r\n      dropShadow: {\r\n        enabled: true,\r\n        top: 5,\r\n        left: 0,\r\n        blur: 4,\r\n        opacity: 0.1\r\n      }\r\n    },\r\n    grid: {\r\n      show: false\r\n    },\r\n    colors: [warning],\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    stroke: {\r\n      curve: 'smooth',\r\n      width: 5\r\n    },\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        shadeIntensity: 1,\r\n        gradientToColors: ['#ffc085'],\r\n        opacityFrom: 1,\r\n        opacityTo: 1,\r\n        stops: [0, 100, 100, 100]\r\n      }\r\n    },\r\n\r\n    xaxis: {\r\n      labels: {\r\n        show: false\r\n      },\r\n      axisBorder: {\r\n        show: false\r\n      }\r\n    },\r\n    yaxis: {\r\n      labels: {\r\n        show: false\r\n      }\r\n    },\r\n    tooltip: {\r\n      x: { show: false }\r\n    }\r\n  }\r\n\r\n  return data !== null ? (\r\n    <StatsWithLineChart\r\n      icon={<Mail size={21} />}\r\n      color='warning'\r\n      stats='28.7k'\r\n      statTitle='Newsletter'\r\n      series={data.series}\r\n      type='line'\r\n      options={options}\r\n    />\r\n  ) : null\r\n}\r\n\r\nexport default Newsletter\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport { Monitor } from 'react-feather'\r\n\r\n// ** Custom Components\r\nimport StatsWithLineChart from '@components/widgets/stats/StatsWithLineChart'\r\n\r\nconst SiteTraffic = () => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-network/site-traffic').then(res => setData(res.data))\r\n  }, [])\r\n\r\n  return data !== null ? (\r\n    <StatsWithLineChart\r\n      icon={<Monitor size={21} />}\r\n      color='primary'\r\n      stats='78.9k'\r\n      statTitle='Site Traffic'\r\n      series={data.series}\r\n      type='line'\r\n    />\r\n  ) : null\r\n}\r\n\r\nexport default SiteTraffic\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport { UserCheck } from 'react-feather'\r\n\r\n// ** Custom Components\r\nimport StatsWithLineChart from '@components/widgets/stats/StatsWithLineChart'\r\n\r\nconst ActiveUsers = ({ success }) => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-network/active-users').then(res => setData(res.data))\r\n  }, [])\r\n\r\n  const options = {\r\n    chart: {\r\n      id: 'activeUsers',\r\n      toolbar: {\r\n        show: false\r\n      },\r\n      sparkline: {\r\n        enabled: true\r\n      },\r\n      dropShadow: {\r\n        enabled: true,\r\n        top: 5,\r\n        left: 0,\r\n        blur: 4,\r\n        opacity: 0.1\r\n      }\r\n    },\r\n    grid: {\r\n      show: false\r\n    },\r\n    colors: [success],\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    stroke: {\r\n      curve: 'smooth',\r\n      width: 5\r\n    },\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        shadeIntensity: 1,\r\n        gradientToColors: ['#55DD92'],\r\n        opacityFrom: 1,\r\n        opacityTo: 1,\r\n        stops: [0, 100, 100, 100]\r\n      }\r\n    },\r\n\r\n    xaxis: {\r\n      labels: {\r\n        show: false\r\n      },\r\n      axisBorder: {\r\n        show: false\r\n      }\r\n    },\r\n    yaxis: {\r\n      labels: {\r\n        show: false\r\n      }\r\n    },\r\n    tooltip: {\r\n      x: { show: false }\r\n    }\r\n  }\r\n\r\n  return data !== null ? (\r\n    <StatsWithLineChart\r\n      icon={<UserCheck size={21} />}\r\n      color='success'\r\n      stats='659.8k'\r\n      statTitle='Active Users'\r\n      series={data.series}\r\n      options={options}\r\n      type='line'\r\n    />\r\n  ) : null\r\n}\r\n\r\nexport default ActiveUsers\r\n","// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport Chart from 'react-apexcharts'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody } from 'reactstrap'\r\n\r\n// ** Default Options\r\nimport { areaChartOptions } from './ChartOptions'\r\n\r\nconst StatsWithAreaChart = props => {\r\n  // ** Props\r\n  const { icon, color, stats, statTitle, series, options, type, height, className, ...rest } = props\r\n  return (\r\n    <Card {...rest}>\r\n      <CardBody\r\n        className={classnames('pb-0', {\r\n          [className]: className\r\n        })}\r\n      >\r\n        <Avatar className='avatar-stats p-50 m-0' color={`light-${color}`} icon={icon} />\r\n        <h2 className='fw-bolder mt-1'>{stats}</h2>\r\n        <p className='card-text'>{statTitle}</p>\r\n      </CardBody>\r\n      <Chart options={options} series={series} type={type} height={height ? height : 100} />\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default StatsWithAreaChart\r\n\r\n// ** PropTypes\r\nStatsWithAreaChart.propTypes = {\r\n  type: PropTypes.string,\r\n  height: PropTypes.string,\r\n  options: PropTypes.object,\r\n  className: PropTypes.string,\r\n  icon: PropTypes.element.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n  stats: PropTypes.string.isRequired,\r\n  series: PropTypes.array.isRequired,\r\n  statTitle: PropTypes.string.isRequired\r\n}\r\n\r\n// ** Default Props\r\nStatsWithAreaChart.defaultProps = {\r\n  color: 'primary',\r\n  options: areaChartOptions\r\n}\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport { ShoppingCart } from 'react-feather'\r\n\r\n// ** Custom Components\r\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\r\n\r\nconst QuarterlySales = ({ danger }) => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  const options = {\r\n    chart: {\r\n      id: 'revenue',\r\n      toolbar: {\r\n        show: false\r\n      },\r\n      sparkline: {\r\n        enabled: true\r\n      }\r\n    },\r\n    grid: {\r\n      show: false\r\n    },\r\n    colors: [danger],\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    stroke: {\r\n      curve: 'smooth',\r\n      width: 2.5\r\n    },\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        shadeIntensity: 0.9,\r\n        opacityFrom: 0.7,\r\n        opacityTo: 0.5,\r\n        stops: [0, 80, 100]\r\n      }\r\n    },\r\n\r\n    xaxis: {\r\n      labels: {\r\n        show: false\r\n      },\r\n      axisBorder: {\r\n        show: false\r\n      }\r\n    },\r\n    yaxis: {\r\n      labels: {\r\n        show: false\r\n      }\r\n    },\r\n    tooltip: {\r\n      x: { show: false }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-network/sales').then(res => setData(res.data))\r\n  }, [])\r\n\r\n  return data !== null ? (\r\n    <StatsWithAreaChart\r\n      icon={<ShoppingCart size={21} />}\r\n      color='danger'\r\n      stats={data.analyticsData.sales}\r\n      statTitle='Quarterly Sales'\r\n      options={options}\r\n      series={data.series}\r\n      type='area'\r\n    />\r\n  ) : null\r\n}\r\nexport default QuarterlySales\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport { Package } from 'react-feather'\r\n\r\n// ** Custom Components\r\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\r\n\r\nconst OrdersReceived = ({ kFormatter, warning }) => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  const options = {\r\n    chart: {\r\n      id: 'revenue',\r\n      toolbar: {\r\n        show: false\r\n      },\r\n      sparkline: {\r\n        enabled: true\r\n      }\r\n    },\r\n    grid: {\r\n      show: false\r\n    },\r\n    colors: [warning],\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    stroke: {\r\n      curve: 'smooth',\r\n      width: 2.5\r\n    },\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        shadeIntensity: 0.9,\r\n        opacityFrom: 0.7,\r\n        opacityTo: 0.5,\r\n        stops: [0, 80, 100]\r\n      }\r\n    },\r\n\r\n    xaxis: {\r\n      labels: {\r\n        show: false\r\n      },\r\n      axisBorder: {\r\n        show: false\r\n      }\r\n    },\r\n    yaxis: {\r\n      labels: {\r\n        show: false\r\n      }\r\n    },\r\n    tooltip: {\r\n      x: { show: false }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-network/orders').then(res => setData(res.data))\r\n    return () => setData(null)\r\n  }, [])\r\n\r\n  return data !== null ? (\r\n    <StatsWithAreaChart\r\n      icon={<Package size={21} />}\r\n      color='warning'\r\n      stats={kFormatter(data.analyticsData.orders)}\r\n      statTitle='Orders Received'\r\n      options={options}\r\n      series={data.series}\r\n      type='area'\r\n    />\r\n  ) : null\r\n}\r\nexport default OrdersReceived\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport { CreditCard } from 'react-feather'\r\n\r\n// ** Custom Components\r\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\r\n\r\nconst RevenueGenerated = ({ kFormatter, success }) => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  const options = {\r\n    chart: {\r\n      id: 'revenue',\r\n      toolbar: {\r\n        show: false\r\n      },\r\n      sparkline: {\r\n        enabled: true\r\n      }\r\n    },\r\n    grid: {\r\n      show: false\r\n    },\r\n    colors: [success],\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    stroke: {\r\n      curve: 'smooth',\r\n      width: 2.5\r\n    },\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        shadeIntensity: 0.9,\r\n        opacityFrom: 0.7,\r\n        opacityTo: 0.5,\r\n        stops: [0, 80, 100]\r\n      }\r\n    },\r\n\r\n    xaxis: {\r\n      labels: {\r\n        show: false\r\n      },\r\n      axisBorder: {\r\n        show: false\r\n      }\r\n    },\r\n    yaxis: {\r\n      labels: {\r\n        show: false\r\n      }\r\n    },\r\n    tooltip: {\r\n      x: { show: false }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-network/revenue').then(res => setData(res.data))\r\n  }, [])\r\n\r\n  return data !== null ? (\r\n    <StatsWithAreaChart\r\n      icon={<CreditCard size={21} />}\r\n      color='success'\r\n      stats={kFormatter(data.analyticsData.revenue)}\r\n      statTitle='Revenue Generated'\r\n      options={options}\r\n      series={data.series}\r\n      type='area'\r\n    />\r\n  ) : null\r\n}\r\nexport default RevenueGenerated\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport { Users } from 'react-feather'\r\n\r\n// ** Custom Components\r\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\r\n\r\nconst SubscribersGained = ({ kFormatter }) => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-network/subscribers').then(res => setData(res.data))\r\n    return () => setData(null)\r\n  }, [])\r\n\r\n  return data !== null ? (\r\n    <StatsWithAreaChart\r\n      icon={<Users size={21} />}\r\n      color='primary'\r\n      stats={kFormatter(data.analyticsData.subscribers)}\r\n      statTitle='Subscribers Gained'\r\n      series={data.series}\r\n      type='area'\r\n    />\r\n  ) : null\r\n}\r\n\r\nexport default SubscribersGained\r\n","// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody } from 'reactstrap'\r\n\r\nconst StatsVertical = ({ icon, color, stats, statTitle, className }) => {\r\n  return (\r\n    <Card className='text-center'>\r\n      <CardBody className={className}>\r\n        <div className={`avatar p-50 m-0 mb-1 ${color ? `bg-light-${color}` : 'bg-light-primary'}`}>\r\n          <div className='avatar-content'>{icon}</div>\r\n        </div>\r\n        <h2 className='fw-bolder'>{stats}</h2>\r\n        <p className='card-text line-ellipsis'>{statTitle}</p>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default StatsVertical\r\n\r\n// ** PropTypes\r\nStatsVertical.propTypes = {\r\n  className: PropTypes.string,\r\n  icon: PropTypes.element.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n  stats: PropTypes.string.isRequired,\r\n  statTitle: PropTypes.string.isRequired\r\n}\r\n","// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody } from 'reactstrap'\r\n\r\nconst StatsHorizontal = ({ icon, color, stats, renderStats, statTitle, className, statsMargin }) => {\r\n  return (\r\n    <Card>\r\n      <CardBody className={className}>\r\n        <div className='d-flex justify-content-between align-items-center'>\r\n          <div>\r\n            {renderStats ? (\r\n              renderStats\r\n            ) : (\r\n              <h2\r\n                className={classnames('fw-bolder', {\r\n                  'mb-0': !statsMargin,\r\n                  [statsMargin]: statsMargin\r\n                })}\r\n              >\r\n                {stats}\r\n              </h2>\r\n            )}\r\n\r\n            <p className='card-text'>{statTitle}</p>\r\n          </div>\r\n          <div className={`avatar avatar-stats p-50 m-0 ${color ? `bg-light-${color}` : 'bg-light-primary'}`}>\r\n            <div className='avatar-content'>{icon}</div>\r\n          </div>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default StatsHorizontal\r\n\r\n// ** PropTypes\r\nStatsHorizontal.propTypes = {\r\n  stats: PropTypes.string,\r\n  renderStats: PropTypes.any,\r\n  className: PropTypes.string,\r\n  icon: PropTypes.element.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n  statTitle: PropTypes.string.isRequired,\r\n  statsMargin: PropTypes.oneOf(['mb-0', 'mb-25', 'mb-50', 'mb-75', 'mb-1', 'mb-2', 'mb-3', 'mb-4', 'mb-5'])\r\n}\r\n","// ** React Imports\r\nimport { Fragment, useContext } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Utils\r\nimport { kFormatter } from '@utils'\r\n\r\n// ** Context\r\nimport { ThemeColors } from '@src/utility/context/ThemeColors'\r\n\r\n// ** Custom Components\r\nimport StatsCard from './StatsCard'\r\nimport Newsletter from './Newsletter'\r\nimport SiteTraffic from './SiteTraffic'\r\nimport ActiveUsers from './ActiveUsers'\r\nimport QuaterlySales from './QuaterlySales'\r\nimport OrdersReceived from './OrdersReceived'\r\nimport OrdersBarChart from './OrdersBarChart'\r\nimport ProfitLineChart from './ProfitLineChart'\r\nimport RevenueGenerated from './RevenueGenerated'\r\nimport Breadcrumbs from '@components/breadcrumbs'\r\nimport SubscribersGained from './SubscribersGained'\r\nimport StatsVertical from '@components/widgets/stats/StatsVertical'\r\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\r\n\r\n// ** Icons Imports\r\nimport {\r\n  Eye,\r\n  Cpu,\r\n  Heart,\r\n  Award,\r\n  Truck,\r\n  Server,\r\n  Activity,\r\n  ShoppingBag,\r\n  AlertOctagon,\r\n  MessageSquare\r\n} from 'react-feather'\r\n\r\nconst StatisticsCards = () => {\r\n  // ** Context\r\n  const context = useContext(ThemeColors)\r\n\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumbs breadCrumbTitle='Statistics Cards' breadCrumbParent='Card' breadCrumbActive='Statistics Cards' />\r\n\r\n      <Row>\r\n        {/* Orders Bar Chart */}\r\n        <Col lg='2' xs='6'>\r\n          <OrdersBarChart warning={context.colors.warning.main} />\r\n        </Col>\r\n        {/* Orders Bar Chart */}\r\n\r\n        {/* Profit Line Chart */}\r\n        <Col lg='2' xs='6'>\r\n          <ProfitLineChart info={context.colors.info.main} />\r\n        </Col>\r\n        {/* Profit Line Chart */}\r\n\r\n        {/* Stats Card */}\r\n        <Col lg='8' sm='12'>\r\n          <StatsCard cols={{ md: '3', sm: '6', xs: '12' }} />\r\n        </Col>\r\n        {/* Stats Card */}\r\n      </Row>\r\n\r\n      <Row>\r\n        {/* Stats With Icons */}\r\n        <Col xl='2' md='4' sm='6'>\r\n          <StatsVertical icon={<Eye size={21} />} color='info' stats='36.9k' statTitle='Views' />\r\n        </Col>\r\n        <Col xl='2' md='4' sm='6'>\r\n          <StatsVertical icon={<MessageSquare size={21} />} color='warning' stats='12k' statTitle='Comments' />\r\n        </Col>\r\n        <Col xl='2' md='4' sm='6'>\r\n          <StatsVertical icon={<ShoppingBag size={21} />} color='danger' stats='97.8k' statTitle='Orders' />\r\n        </Col>\r\n        <Col xl='2' md='4' sm='6'>\r\n          <StatsVertical icon={<Heart size={21} />} color='primary' stats='26.8' statTitle='Bookmarks' />\r\n        </Col>\r\n        <Col xl='2' md='4' sm='6'>\r\n          <StatsVertical icon={<Award size={21} />} color='success' stats='689' statTitle='Reviews' />\r\n        </Col>\r\n        <Col xl='2' md='4' sm='6'>\r\n          <StatsVertical icon={<Truck size={21} />} color='danger' stats='2.1k' statTitle='Returns' />\r\n        </Col>\r\n        {/* Stats With Icons */}\r\n      </Row>\r\n\r\n      <Row>\r\n        {/* Stats With Icons Horizontal */}\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal icon={<Cpu size={21} />} color='primary' stats='86%' statTitle='CPU Usage' />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal icon={<Server size={21} />} color='success' stats='1.2gb' statTitle='Memory Usage' />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal icon={<Activity size={21} />} color='danger' stats='0.1%' statTitle='Downtime Ratio' />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal icon={<AlertOctagon size={21} />} color='warning' stats='13' statTitle='Issues Found' />\r\n        </Col>\r\n        {/* Stats With Icons Horizontal */}\r\n      </Row>\r\n\r\n      <Row>\r\n        {/* Stats Area Charts */}\r\n        <Col lg='3' sm='6'>\r\n          <SubscribersGained kFormatter={kFormatter} />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <RevenueGenerated kFormatter={kFormatter} success={context.colors.success.main} />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <QuaterlySales danger={context.colors.danger.main} />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <OrdersReceived kFormatter={kFormatter} warning={context.colors.warning.main} />\r\n        </Col>\r\n        {/* Stats Area Charts */}\r\n      </Row>\r\n\r\n      <Row>\r\n        {/* Stats Line Charts */}\r\n        <Col lg='4' sm='6'>\r\n          <SiteTraffic />\r\n        </Col>\r\n        <Col lg='4' sm='6'>\r\n          <ActiveUsers success={context.colors.success.main} />\r\n        </Col>\r\n        <Col lg='4' sm='6'>\r\n          <Newsletter warning={context.colors.warning.main} />\r\n        </Col>\r\n        {/* Stats Line Charts */}\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default StatisticsCards\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-start mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  {breadCrumbParent}\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\r\n        <div className='breadcrumb-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' end>\r\n              <DropdownItem tag={Link} to='/apps/focus'>\r\n                <CheckSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Focus</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/instafriend'>\r\n                <MessageSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Instafriend</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/tellfari'>\r\n                <Mail className='me-1' size={14} />\r\n                <span className='align-middle'>Tellfari</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/book'>\r\n                <Calendar className='me-1' size={14} />\r\n                <span className='align-middle'>Book</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n","// ** React Imports\r\nimport { forwardRef } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\n// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst Avatar = forwardRef((props, ref) => {\r\n  // ** Props\r\n  const {\r\n    img,\r\n    size,\r\n    icon,\r\n    color,\r\n    status,\r\n    badgeUp,\r\n    content,\r\n    tag: Tag,\r\n    initials,\r\n    imgWidth,\r\n    className,\r\n    badgeText,\r\n    imgHeight,\r\n    badgeColor,\r\n    imgClassName,\r\n    contentStyles,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** Function to extract initials from content\r\n  const getInitials = str => {\r\n    const results = []\r\n    const wordArray = str.split(' ')\r\n    wordArray.forEach(e => {\r\n      results.push(e[0])\r\n    })\r\n    return results.join('')\r\n  }\r\n\r\n  return (\r\n    <Tag\r\n      className={classnames('avatar', {\r\n        [className]: className,\r\n        [`bg-${color}`]: color,\r\n        [`avatar-${size}`]: size\r\n      })}\r\n      ref={ref}\r\n      {...rest}\r\n    >\r\n      {img === false || img === undefined ? (\r\n        <span\r\n          className={classnames('avatar-content', {\r\n            'position-relative': badgeUp\r\n          })}\r\n          style={contentStyles}\r\n        >\r\n          {initials ? getInitials(content) : content}\r\n\r\n          {icon ? icon : null}\r\n          {badgeUp ? (\r\n            <Badge color={badgeColor ? badgeColor : 'primary'} className='badge-sm badge-up' pill>\r\n              {badgeText ? badgeText : '0'}\r\n            </Badge>\r\n          ) : null}\r\n        </span>\r\n      ) : (\r\n        <img\r\n          className={classnames({\r\n            [imgClassName]: imgClassName\r\n          })}\r\n          src={img}\r\n          alt='avatarImg'\r\n          height={imgHeight && !size ? imgHeight : 32}\r\n          width={imgWidth && !size ? imgWidth : 32}\r\n        />\r\n      )}\r\n      {status ? (\r\n        <span\r\n          className={classnames({\r\n            [`avatar-status-${status}`]: status,\r\n            [`avatar-status-${size}`]: size\r\n          })}\r\n        ></span>\r\n      ) : null}\r\n    </Tag>\r\n  )\r\n})\r\n\r\nexport default Avatar\r\n\r\n// ** PropTypes\r\nAvatar.propTypes = {\r\n  icon: Proptypes.node,\r\n  src: Proptypes.string,\r\n  badgeUp: Proptypes.bool,\r\n  content: Proptypes.string,\r\n  badgeText: Proptypes.string,\r\n  className: Proptypes.string,\r\n  imgClassName: Proptypes.string,\r\n  contentStyles: Proptypes.object,\r\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\r\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\r\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\r\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\r\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\r\n  badgeColor: Proptypes.oneOf([\r\n    'primary',\r\n    'secondary',\r\n    'success',\r\n    'danger',\r\n    'info',\r\n    'warning',\r\n    'dark',\r\n    'light-primary',\r\n    'light-secondary',\r\n    'light-success',\r\n    'light-danger',\r\n    'light-info',\r\n    'light-warning',\r\n    'light-dark'\r\n  ]),\r\n  color: Proptypes.oneOf([\r\n    'primary',\r\n    'secondary',\r\n    'success',\r\n    'danger',\r\n    'info',\r\n    'warning',\r\n    'dark',\r\n    'light-primary',\r\n    'light-secondary',\r\n    'light-success',\r\n    'light-danger',\r\n    'light-info',\r\n    'light-warning',\r\n    'light-dark'\r\n  ]),\r\n  initials(props) {\r\n    if (props['initials'] && props['content'] === undefined) {\r\n      return new Error('content prop is required with initials prop.')\r\n    }\r\n    if (props['initials'] && typeof props['content'] !== 'string') {\r\n      return new Error('content prop must be a string.')\r\n    }\r\n    if (typeof props['initials'] !== 'boolean' && props['initials'] !== undefined) {\r\n      return new Error('initials must be a boolean!')\r\n    }\r\n  }\r\n}\r\n\r\n// ** Default Props\r\nAvatar.defaultProps = {\r\n  tag: 'div'\r\n}\r\n","// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport Chart from 'react-apexcharts'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody } from 'reactstrap'\r\n\r\nconst TinyChartStats = props => {\r\n  // ** Props\r\n  const { title, stats, options, series, type, height } = props\r\n\r\n  return (\r\n    <Card className='card-tiny-line-stats'>\r\n      <CardBody className='pb-50'>\r\n        <h6>{title}</h6>\r\n        <h2 className='fw-bolder mb-1'>{stats}</h2>\r\n        <Chart options={options} series={series} type={type} height={height} />\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default TinyChartStats\r\n\r\n// ** PropTypes\r\nTinyChartStats.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  stats: PropTypes.string.isRequired,\r\n  series: PropTypes.array.isRequired,\r\n  options: PropTypes.object.isRequired\r\n}\r\n\r\n// ** Default Props\r\nTinyChartStats.defaultProps = {\r\n  height: 100\r\n}\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\n\r\n// ** Custom Components\r\nimport TinyChartStats from '@components/widgets/stats/TinyChartStats'\r\n\r\nconst OrdersBarChart = ({ warning }) => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-network/orders-bar-chart').then(res => setData(res.data))\r\n    return () => setData(null)\r\n  }, [])\r\n\r\n  const options = {\r\n    chart: {\r\n      stacked: true,\r\n      toolbar: {\r\n        show: false\r\n      }\r\n    },\r\n    grid: {\r\n      show: false,\r\n      padding: {\r\n        left: 0,\r\n        right: 0,\r\n        top: -15,\r\n        bottom: -15\r\n      }\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: false,\r\n        columnWidth: '20%',\r\n        borderRadius: [0, 5],\r\n        colors: {\r\n          backgroundBarColors: ['#f3f3f3', '#f3f3f3', '#f3f3f3', '#f3f3f3', '#f3f3f3'],\r\n          backgroundBarRadius: 5\r\n        }\r\n      }\r\n    },\r\n    legend: {\r\n      show: false\r\n    },\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    colors: [warning],\r\n    xaxis: {\r\n      labels: {\r\n        show: false\r\n      },\r\n      axisBorder: {\r\n        show: false\r\n      },\r\n      axisTicks: {\r\n        show: false\r\n      }\r\n    },\r\n    yaxis: {\r\n      show: false\r\n    },\r\n    tooltip: {\r\n      x: {\r\n        show: false\r\n      }\r\n    }\r\n  }\r\n\r\n  return data !== null ? (\r\n    <TinyChartStats\r\n      height={70}\r\n      type='bar'\r\n      options={options}\r\n      title={data.title}\r\n      stats={data.statistics}\r\n      series={data.series}\r\n    />\r\n  ) : null\r\n}\r\n\r\nexport default OrdersBarChart\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\n\r\n// ** Custom Components\r\nimport TinyChartStats from '@components/widgets/stats/TinyChartStats'\r\n\r\nconst ProfitLineChart = ({ info }) => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-network/profit-line-chart').then(res => setData(res.data))\r\n    return () => setData(null)\r\n  }, [])\r\n\r\n  const options = {\r\n    chart: {\r\n      toolbar: {\r\n        show: false\r\n      },\r\n      zoom: {\r\n        enabled: false\r\n      }\r\n    },\r\n    grid: {\r\n      borderColor: '#EBEBEB',\r\n      strokeDashArray: 5,\r\n      xaxis: {\r\n        lines: {\r\n          show: true\r\n        }\r\n      },\r\n      yaxis: {\r\n        lines: {\r\n          show: false\r\n        }\r\n      },\r\n      padding: {\r\n        top: -30,\r\n        bottom: -10\r\n      }\r\n    },\r\n    stroke: {\r\n      width: 3\r\n    },\r\n    colors: [info],\r\n    series: [\r\n      {\r\n        data: [0, 20, 5, 30, 15, 45]\r\n      }\r\n    ],\r\n    markers: {\r\n      size: 2,\r\n      colors: info,\r\n      strokeColors: info,\r\n      strokeWidth: 2,\r\n      strokeOpacity: 1,\r\n      strokeDashArray: 0,\r\n      fillOpacity: 1,\r\n      discrete: [\r\n        {\r\n          seriesIndex: 0,\r\n          dataPointIndex: 5,\r\n          fillColor: '#ffffff',\r\n          strokeColor: info,\r\n          size: 5\r\n        }\r\n      ],\r\n      shape: 'circle',\r\n      radius: 2,\r\n      hover: {\r\n        size: 3\r\n      }\r\n    },\r\n    xaxis: {\r\n      labels: {\r\n        show: true,\r\n        style: {\r\n          fontSize: '0px'\r\n        }\r\n      },\r\n      axisBorder: {\r\n        show: false\r\n      },\r\n      axisTicks: {\r\n        show: false\r\n      }\r\n    },\r\n    yaxis: {\r\n      show: false\r\n    },\r\n    tooltip: {\r\n      x: {\r\n        show: false\r\n      }\r\n    }\r\n  }\r\n\r\n  return data !== null ? (\r\n    <TinyChartStats\r\n      height={70}\r\n      type='line'\r\n      options={options}\r\n      title={data.title}\r\n      stats={data.statistics}\r\n      series={data.series}\r\n    />\r\n  ) : null\r\n}\r\n\r\nexport default ProfitLineChart\r\n"],"sourceRoot":""}