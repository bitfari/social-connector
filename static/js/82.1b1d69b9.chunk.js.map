{"version":3,"sources":["views/components/buttons/ButtonTags.js","views/components/buttons/ButtonsFlat.js","views/components/buttons/ButtonsIcon.js","views/components/buttons/ButtonSizes.js","views/components/buttons/ButtonBlock.js","views/components/buttons/ButtonGroup.js","views/components/buttons/ButtonsRound.js","views/components/buttons/ButtonsFilled.js","views/components/buttons/ButtonsRelief.js","views/components/buttons/ButtonsOutline.js","views/components/buttons/ButtonsGradient.js","views/components/buttons/ButtonsIconOnly.js","views/components/buttons/ButtonCheckboxRadio.js","views/components/buttons/ButtonsSourceCode.js","views/components/buttons/index.js","@core/components/breadcrumbs/index.js","@core/components/card-snippet/index.js"],"names":["ButtonTags","color","className","target","rel","href","Ripple","tag","Link","to","type","value","FlatButtons","ButtonsIcon","outline","size","disabled","ButtonSizes","md","sm","ButtonBlock","lg","block","ButtonGroups","RoundButtons","FilledButtons","ReliefButtons","OutlineButtons","GradientButtons","ButtonsIconOnly","ButtonCheckboxRadio","cSelected","setCSelected","useState","rSelected","setRSelected","onCheckboxBtnClick","selected","index","indexOf","push","splice","onClick","active","includes","JSON","stringify","filledButtons","outlineButtons","flatButtons","gradientButtons","reliefButtons","roundButtons","iconButtons","iconOnlyButtons","buttonGroup","buttonCBRadio","buttonSizes","buttonBlock","buttonTags","Buttons","useEffect","Prism","highlightAll","breadCrumbTitle","breadCrumbParent","breadCrumbActive","title","code","ButtonGroup","BreadCrumbs","props","breadCrumbParent2","breadCrumbParent3","end","CardSnippet","children","noBody","iconCode","isOpen","setIsOpen","IconCode","Wrapper","Fragment","CardBody"],"mappings":"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","file":"static/js/82.1b1d69b9.chunk.js","sourcesContent":["// ** React Imports\r\nimport { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Reactstrap Imports\r\nimport { Button, Alert } from 'reactstrap'\r\n\r\nconst ButtonTags = () => {\r\n  return (\r\n    <Fragment>\r\n      <Alert color='warning'>\r\n        <div className='alert-body'>\r\n          <strong>Note:</strong> Link button will redirect you to another page\r\n        </div>\r\n      </Alert>\r\n\r\n      <div className='demo-inline-spacing'>\r\n        <a\r\n          color='primary'\r\n          target='_blank'\r\n          rel='noopener noreferrer'\r\n          className='btn btn-primary'\r\n          href='https://pixinvent.com/'\r\n        >\r\n          Link\r\n        </a>\r\n        <Button.Ripple color='primary' tag={Link} to='/'>\r\n          Router\r\n        </Button.Ripple>\r\n        <Button.Ripple color='primary' tag='button'>\r\n          Button\r\n        </Button.Ripple>\r\n        <input className='btn btn-primary' type='button' value='Input' />\r\n        <input className='btn btn-primary' type='submit' value='Submit' />\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default ButtonTags\r\n","// ** Reactstrap Imports\r\nimport { Button } from 'reactstrap'\r\n\r\nconst FlatButtons = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Button.Ripple color='flat-primary'>Primary</Button.Ripple>\r\n      <Button.Ripple color='flat-secondary'>Secondary</Button.Ripple>\r\n      <Button.Ripple color='flat-success'>Success</Button.Ripple>\r\n      <Button.Ripple color='flat-danger'>Danger</Button.Ripple>\r\n      <Button.Ripple color='flat-warning'>Warning</Button.Ripple>\r\n      <Button.Ripple color='flat-info'>Info</Button.Ripple>\r\n      <Button.Ripple color='flat-dark'>Dark</Button.Ripple>\r\n    </div>\r\n  )\r\n}\r\nexport default FlatButtons\r\n","// ** Reactstrap Imports\r\nimport { Button } from 'reactstrap'\r\n\r\n// ** Icons Imports\r\nimport { Home, Star, Check } from 'react-feather'\r\n\r\nconst ButtonsIcon = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Button.Ripple outline color='primary'>\r\n        <Home size={14} />\r\n        <span className='align-middle ms-25'>Home</span>\r\n      </Button.Ripple>\r\n      <Button.Ripple color='warning'>\r\n        <Star size={14} />\r\n        <span className='align-middle ms-25'>Star</span>\r\n      </Button.Ripple>\r\n      <Button.Ripple color='flat-success'>\r\n        <Check size={14} />\r\n        <span className='align-middle ms-25'>Done</span>\r\n      </Button.Ripple>\r\n      <Button.Ripple outline color='primary' disabled>\r\n        <Home size={14} />\r\n        <span className='align-middle ms-25'>Home</span>\r\n      </Button.Ripple>\r\n    </div>\r\n  )\r\n}\r\nexport default ButtonsIcon\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Button, Row, Col } from 'reactstrap'\r\n\r\nconst ButtonSizes = () => {\r\n  return (\r\n    <Fragment>\r\n      <Row>\r\n        <Col md={6} sm={12}>\r\n          <div className='demo-inline-spacing'>\r\n            <Button.Ripple color='primary' size='lg'>\r\n              Large\r\n            </Button.Ripple>\r\n            <Button.Ripple color='primary'>Default</Button.Ripple>\r\n            <Button.Ripple color='primary' size='sm'>\r\n              Small\r\n            </Button.Ripple>\r\n          </div>\r\n        </Col>\r\n        <Col md={6} sm={12}>\r\n          <div className='demo-inline-spacing'>\r\n            <Button.Ripple outline color='primary' size='lg'>\r\n              Large\r\n            </Button.Ripple>\r\n            <Button.Ripple outline color='primary'>\r\n              Default\r\n            </Button.Ripple>\r\n            <Button.Ripple outline color='primary' size='sm'>\r\n              Small\r\n            </Button.Ripple>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default ButtonSizes\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Button, Row, Col } from 'reactstrap'\r\n\r\nconst ButtonBlock = () => {\r\n  return (\r\n    <Fragment>\r\n      <Row>\r\n        <Col className='d-grid mb-1 mb-lg-0' lg={6} md={12}>\r\n          <Button.Ripple color='primary'>Block Level Button</Button.Ripple>\r\n        </Col>\r\n        <Col lg={6} md={12}>\r\n          <Button.Ripple block outline color='primary'>\r\n            Block Level Button\r\n          </Button.Ripple>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ButtonBlock\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Button, ButtonGroup, Row, Col } from 'reactstrap'\r\n\r\n// ** Icons Imports\r\nimport { Facebook, Twitter, Instagram } from 'react-feather'\r\n\r\nconst ButtonGroups = () => {\r\n  return (\r\n    <Fragment>\r\n      <Row>\r\n        <Col md={6} sm={12}>\r\n          <ButtonGroup className='mb-1'>\r\n            <Button color='primary'>Left</Button>\r\n            <Button color='primary'>Middle</Button>\r\n            <Button color='primary'>Right</Button>\r\n          </ButtonGroup>\r\n        </Col>\r\n        <Col md={6} sm={12}>\r\n          <ButtonGroup className='mb-1'>\r\n            <Button outline color='primary'>\r\n              <Facebook size={15} />\r\n            </Button>\r\n            <Button outline color='primary'>\r\n              <Twitter size={15} />\r\n            </Button>\r\n            <Button outline color='primary'>\r\n              <Instagram size={15} />\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default ButtonGroups\r\n","// ** Reactstrap Imports\r\nimport { Button } from 'reactstrap'\r\n\r\nconst RoundButtons = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Button.Ripple className='round' color='primary' outline>\r\n        Primary\r\n      </Button.Ripple>\r\n      <Button.Ripple className='round' color='secondary' outline>\r\n        Secondary\r\n      </Button.Ripple>\r\n      <Button.Ripple className='round' color='success' outline>\r\n        Success\r\n      </Button.Ripple>\r\n      <Button.Ripple className='round' color='danger' outline>\r\n        Danger\r\n      </Button.Ripple>\r\n      <Button.Ripple className='round' color='warning' outline>\r\n        Warning\r\n      </Button.Ripple>\r\n      <Button.Ripple className='round' color='info' outline>\r\n        Info\r\n      </Button.Ripple>\r\n      <Button.Ripple className='round' color='dark' outline>\r\n        Dark\r\n      </Button.Ripple>\r\n    </div>\r\n  )\r\n}\r\nexport default RoundButtons\r\n","// ** Reactstrap Imports\r\nimport { Button } from 'reactstrap'\r\n\r\nconst FilledButtons = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Button.Ripple color='primary'>Primary</Button.Ripple>\r\n      <Button.Ripple color='secondary'>Secondary</Button.Ripple>\r\n      <Button.Ripple color='success'>Success</Button.Ripple>\r\n      <Button.Ripple color='danger'>Danger</Button.Ripple>\r\n      <Button.Ripple color='warning'>Warning</Button.Ripple>\r\n      <Button.Ripple color='info'>Info</Button.Ripple>\r\n      <Button.Ripple color='dark'>Dark</Button.Ripple>\r\n    </div>\r\n  )\r\n}\r\nexport default FilledButtons\r\n","// ** Reactstrap Imports\r\nimport { Button } from 'reactstrap'\r\n\r\nconst ReliefButtons = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Button color='relief-primary'>Primary</Button>\r\n      <Button color='relief-secondary'>Secondary</Button>\r\n      <Button color='relief-success'>Success</Button>\r\n      <Button color='relief-danger'>Danger</Button>\r\n      <Button color='relief-warning'>Warning</Button>\r\n      <Button color='relief-info'>Info</Button>\r\n      <Button color='relief-dark'>Dark</Button>\r\n    </div>\r\n  )\r\n}\r\nexport default ReliefButtons\r\n","// ** Reactstrap Imports\r\nimport { Button } from 'reactstrap'\r\n\r\nconst OutlineButtons = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Button.Ripple color='primary' outline>\r\n        Primary\r\n      </Button.Ripple>\r\n      <Button.Ripple color='secondary' outline>\r\n        Secondary\r\n      </Button.Ripple>\r\n      <Button.Ripple color='success' outline>\r\n        Success\r\n      </Button.Ripple>\r\n      <Button.Ripple color='danger' outline>\r\n        Danger\r\n      </Button.Ripple>\r\n      <Button.Ripple color='warning' outline>\r\n        Warning\r\n      </Button.Ripple>\r\n      <Button.Ripple color='info' outline>\r\n        Info\r\n      </Button.Ripple>\r\n      <Button.Ripple color='dark' outline>\r\n        Dark\r\n      </Button.Ripple>\r\n    </div>\r\n  )\r\n}\r\nexport default OutlineButtons\r\n","// ** Reactstrap Imports\r\nimport { Button } from 'reactstrap'\r\n\r\nconst GradientButtons = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Button color='gradient-primary'>Primary</Button>\r\n      <Button color='gradient-secondary'>Secondary</Button>\r\n      <Button color='gradient-success'>Success</Button>\r\n      <Button color='gradient-danger'>Danger</Button>\r\n      <Button color='gradient-warning'>Warning</Button>\r\n      <Button color='gradient-info'>Info</Button>\r\n      <Button color='gradient-dark'>Dark</Button>\r\n    </div>\r\n  )\r\n}\r\nexport default GradientButtons\r\n","// ** Reactstrap Imports\r\nimport { Button } from 'reactstrap'\r\n\r\n// ** Icons Imports\r\nimport { Search, Inbox, Camera } from 'react-feather'\r\n\r\nconst ButtonsIconOnly = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Button.Ripple className='btn-icon' outline color='primary'>\r\n        <Search size={16} />\r\n      </Button.Ripple>\r\n      <Button.Ripple className='btn-icon' color='warning'>\r\n        <Inbox size={16} />\r\n      </Button.Ripple>\r\n      <Button.Ripple className='btn-icon' color='flat-success'>\r\n        <Camera size={16} />\r\n      </Button.Ripple>\r\n      <Button.Ripple className='btn-icon' outline color='primary' disabled>\r\n        <Search size={16} />\r\n      </Button.Ripple>\r\n      <Button.Ripple className='btn-icon rounded-circle' outline color='primary'>\r\n        <Search size={16} />\r\n      </Button.Ripple>\r\n      <Button.Ripple className='btn-icon rounded-circle' color='warning'>\r\n        <Inbox size={16} />\r\n      </Button.Ripple>\r\n      <Button.Ripple className='btn-icon rounded-circle' color='flat-success'>\r\n        <Camera size={16} />\r\n      </Button.Ripple>\r\n      <Button.Ripple className='btn-icon rounded-circle' outline color='primary' disabled>\r\n        <Search size={16} />\r\n      </Button.Ripple>\r\n    </div>\r\n  )\r\n}\r\nexport default ButtonsIconOnly\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Button, ButtonGroup, Row, Col, CardText } from 'reactstrap'\r\n\r\nconst ButtonCheckboxRadio = () => {\r\n  // ** States\r\n  const [cSelected, setCSelected] = useState([1])\r\n  const [rSelected, setRSelected] = useState(1)\r\n\r\n  const onCheckboxBtnClick = selected => {\r\n    const index = cSelected.indexOf(selected)\r\n    if (index < 0) {\r\n      cSelected.push(selected)\r\n    } else {\r\n      cSelected.splice(index, 1)\r\n    }\r\n    setCSelected([...cSelected])\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md='12' lg='6'>\r\n        <ButtonGroup className='mb-1'>\r\n          <Button color='primary' onClick={() => onCheckboxBtnClick(1)} active={cSelected.includes(1)}>\r\n            Active\r\n          </Button>\r\n          <Button color='primary' onClick={() => onCheckboxBtnClick(2)} active={cSelected.includes(2)}>\r\n            Checkbox\r\n          </Button>\r\n          <Button color='primary' onClick={() => onCheckboxBtnClick(3)} active={cSelected.includes(3)}>\r\n            Checkbox\r\n          </Button>\r\n        </ButtonGroup>\r\n        <CardText className='mb-1 mb-lg-0'>Selected: {JSON.stringify(cSelected)}</CardText>\r\n      </Col>\r\n      <Col md='12' lg='6'>\r\n        <ButtonGroup className='mb-1'>\r\n          <Button color='primary' onClick={() => setRSelected(1)} active={rSelected === 1} outline>\r\n            Active\r\n          </Button>\r\n          <Button color='primary' onClick={() => setRSelected(2)} active={rSelected === 2} outline>\r\n            Radio\r\n          </Button>\r\n          <Button color='primary' onClick={() => setRSelected(3)} active={rSelected === 3} outline>\r\n            Radio\r\n          </Button>\r\n        </ButtonGroup>\r\n        <CardText>Selected: {rSelected}</CardText>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ButtonCheckboxRadio\r\n","export const filledButtons = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Button } from 'reactstrap'\r\n\r\nconst FilledButtons = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Button.Ripple color='primary'>Primary</Button.Ripple>\r\n      <Button.Ripple color='secondary'>Secondary</Button.Ripple>\r\n      <Button.Ripple color='success'>Success</Button.Ripple>\r\n      <Button.Ripple color='danger'>Danger</Button.Ripple>\r\n      <Button.Ripple color='warning'>Warning</Button.Ripple>\r\n      <Button.Ripple color='info'>Info</Button.Ripple>\r\n      <Button.Ripple color='dark'>Dark</Button.Ripple>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default FilledButtons\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const outlineButtons = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Button } from 'reactstrap'\r\n\r\nconst OutlineButtons = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Button.Ripple color='primary' outline>\r\n        Primary\r\n      </Button.Ripple>\r\n      <Button.Ripple color='secondary' outline>\r\n        Secondary\r\n      </Button.Ripple>\r\n      <Button.Ripple color='success' outline>\r\n        Success\r\n      </Button.Ripple>\r\n      <Button.Ripple color='danger' outline>\r\n        Danger\r\n      </Button.Ripple>\r\n      <Button.Ripple color='warning' outline>\r\n        Warning\r\n      </Button.Ripple>\r\n      <Button.Ripple color='info' outline>\r\n        Info\r\n      </Button.Ripple>\r\n      <Button.Ripple color='dark' outline>\r\n        Dark\r\n      </Button.Ripple>\r\n    </div>\r\n  )\r\n}\r\nexport default OutlineButtons\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const flatButtons = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Button } from 'reactstrap'\r\n\r\nconst FlatButtons = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Button.Ripple color='flat-primary'>Primary</Button.Ripple>\r\n      <Button.Ripple color='flat-secondary'>Secondary</Button.Ripple>\r\n      <Button.Ripple color='flat-success'>Success</Button.Ripple>\r\n      <Button.Ripple color='flat-danger'>Danger</Button.Ripple>\r\n      <Button.Ripple color='flat-warning'>Warning</Button.Ripple>\r\n      <Button.Ripple color='flat-info'>Info</Button.Ripple>\r\n      <Button.Ripple color='flat-dark'>Dark</Button.Ripple>\r\n    </div>\r\n  )\r\n}\r\nexport default FlatButtons\r\n    `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const gradientButtons = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Button } from 'reactstrap'\r\n\r\nconst GradientButtons = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Button color='gradient-primary'>Primary</Button>\r\n      <Button color='gradient-secondary'>Secondary</Button>\r\n      <Button color='gradient-success'>Success</Button>\r\n      <Button color='gradient-danger'>Danger</Button>\r\n      <Button color='gradient-warning'>Warning</Button>\r\n      <Button color='gradient-info'>Info</Button>\r\n      <Button color='gradient-dark'>Dark</Button>\r\n    </div>\r\n  )\r\n}\r\nexport default GradientButtons\r\n      `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const reliefButtons = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Button } from 'reactstrap'\r\n\r\nconst ReliefButtons = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Button color='relief-primary'>Primary</Button>\r\n      <Button color='relief-secondary'>Secondary</Button>\r\n      <Button color='relief-success'>Success</Button>\r\n      <Button color='relief-danger'>Danger</Button>\r\n      <Button color='relief-warning'>Warning</Button>\r\n      <Button color='relief-info'>Info</Button>\r\n      <Button color='relief-dark'>Dark</Button>\r\n    </div>\r\n  )\r\n}\r\nexport default ReliefButtons`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const roundButtons = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Button } from 'reactstrap'\r\n\r\nconst RoundButtons = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Button.Ripple className='round' color='primary' outline>\r\n        Primary\r\n      </Button.Ripple>\r\n      <Button.Ripple className='round' color='secondary' outline>\r\n        Secondary\r\n      </Button.Ripple>\r\n      <Button.Ripple className='round' color='success' outline>\r\n        Success\r\n      </Button.Ripple>\r\n      <Button.Ripple className='round' color='danger' outline>\r\n        Danger\r\n      </Button.Ripple>\r\n      <Button.Ripple className='round' color='warning' outline>\r\n        Warning\r\n      </Button.Ripple>\r\n      <Button.Ripple className='round' color='info' outline>\r\n        Info\r\n      </Button.Ripple>\r\n      <Button.Ripple className='round' color='dark' outline>\r\n        Dark\r\n      </Button.Ripple>\r\n    </div>\r\n  )\r\n}\r\nexport default RoundButtons`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const iconButtons = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Button } from 'reactstrap'\r\nimport { Home, Star, Check } from 'react-feather'\r\n\r\nconst ButtonsIcon = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Button.Ripple outline color='primary'>\r\n        <Home size={14} />\r\n        <span className='align-middle ms-25'>Home</span>\r\n      </Button.Ripple>\r\n      <Button.Ripple color='warning'>\r\n        <Star size={14} />\r\n        <span className='align-middle ms-25'>Star</span>\r\n      </Button.Ripple>\r\n      <Button.Ripple color='flat-success'>\r\n        <Check size={14} />\r\n        <span className='align-middle ms-25'>Done</span>\r\n      </Button.Ripple>\r\n      <Button.Ripple outline color='primary' disabled>\r\n        <Home size={14} />\r\n        <span className='align-middle ms-25'>Home</span>\r\n      </Button.Ripple>\r\n    </div>\r\n  )\r\n}\r\nexport default ButtonsIcon\r\n              `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const iconOnlyButtons = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Button } from 'reactstrap'\r\nimport { Search, Inbox, Camera } from 'react-feather'\r\n\r\nconst ButtonsIconOnly = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Button.Ripple className='btn-icon' outline color='primary'>\r\n        <Search size={16} />\r\n      </Button.Ripple>\r\n      <Button.Ripple className='btn-icon' color='warning'>\r\n        <Inbox size={16} />\r\n      </Button.Ripple>\r\n      <Button.Ripple className='btn-icon' color='flat-success'>\r\n        <Camera size={16} />\r\n      </Button.Ripple>\r\n      <Button.Ripple className='btn-icon' outline color='primary' disabled>\r\n        <Search size={16} />\r\n      </Button.Ripple>\r\n      <Button.Ripple className='btn-icon rounded-circle' outline color='primary'>\r\n        <Search size={16} />\r\n      </Button.Ripple>\r\n      <Button.Ripple className='btn-icon rounded-circle' color='warning'>\r\n        <Inbox size={16} />\r\n      </Button.Ripple>\r\n      <Button.Ripple className='btn-icon rounded-circle' color='flat-success'>\r\n        <Camera size={16} />\r\n      </Button.Ripple>\r\n      <Button.Ripple className='btn-icon rounded-circle' outline color='primary' disabled>\r\n        <Search size={16} />\r\n      </Button.Ripple>\r\n    </div>\r\n  )\r\n}\r\nexport default ButtonsIconOnly`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const buttonGroup = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Button, ButtonGroup, Row, Col } from 'reactstrap'\r\nimport { Facebook, Twitter, Instagram } from 'react-feather'\r\n\r\nconst ButtonGroups = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Row>\r\n        <Col md={6} sm={12}>\r\n          <ButtonGroup className='mb-1'>\r\n            <Button color='primary'>Left</Button>\r\n            <Button color='primary'>Middle</Button>\r\n            <Button color='primary'>Right</Button>\r\n          </ButtonGroup>\r\n        </Col>\r\n        <Col md={6} sm={12}>\r\n          <ButtonGroup className='mb-1'>\r\n            <Button outline color='primary'>\r\n              <Facebook size={15} />\r\n            </Button>\r\n            <Button outline color='primary'>\r\n              <Twitter size={15} />\r\n            </Button>\r\n            <Button outline color='primary'>\r\n              <Instagram size={15} />\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default ButtonGroups`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const buttonCBRadio = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\nimport React, { useState } from 'react'\r\nimport { Button, ButtonGroup, Row, Col, CardText } from 'reactstrap'\r\n\r\nconst ButtonCheckboxRadio = () => {\r\n  const [cSelected, setCSelected] = useState([])\r\n  const [rSelected, setRSelected] = useState(null)\r\n\r\n  const onCheckboxBtnClick = selected => {\r\n    const index = cSelected.indexOf(selected)\r\n    if (index < 0) {\r\n      cSelected.push(selected)\r\n    } else {\r\n      cSelected.splice(index, 1)\r\n    }\r\n    setCSelected([...cSelected])\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md='12' lg='6'>\r\n        <ButtonGroup className='mb-1'>\r\n          <Button color='primary' onClick={() => onCheckboxBtnClick(1)} active={cSelected.includes(1)}>\r\n            Active\r\n          </Button>\r\n          <Button color='primary' onClick={() => onCheckboxBtnClick(2)} active={cSelected.includes(2)}>\r\n            Checkbox\r\n          </Button>\r\n          <Button color='primary' onClick={() => onCheckboxBtnClick(3)} active={cSelected.includes(3)}>\r\n            Checkbox\r\n          </Button>\r\n        </ButtonGroup>\r\n        <CardText>Selected: {JSON.stringify(cSelected)}</CardText>\r\n      </Col>\r\n      <Col md='12' lg='6'>\r\n        <ButtonGroup className='mb-1'>\r\n          <Button color='primary' onClick={() => setRSelected(1)} active={rSelected === 1}>\r\n            Active\r\n          </Button>\r\n          <Button color='primary' onClick={() => setRSelected(2)} active={rSelected === 2}>\r\n            Radio\r\n          </Button>\r\n          <Button color='primary' onClick={() => setRSelected(3)} active={rSelected === 3}>\r\n            Radio\r\n          </Button>\r\n        </ButtonGroup>\r\n        <CardText>Selected: {rSelected}</CardText>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ButtonCheckboxRadio`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const buttonSizes = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Button, Row, Col } from 'reactstrap'\r\n\r\nconst ButtonSizes = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Row>\r\n        <Col md={6} sm={12}>\r\n          <div className='d-inline-block me-1 mb-1'>\r\n            <Button.Ripple color='primary' size='lg'>\r\n              Large\r\n            </Button.Ripple>\r\n          </div>\r\n          <div className='d-inline-block me-1 mb-1'>\r\n            <Button.Ripple color='primary'>Default</Button.Ripple>\r\n          </div>\r\n          <div className='d-inline-block mb-1'>\r\n            <Button.Ripple color='primary' size='sm'>\r\n              Small\r\n            </Button.Ripple>\r\n          </div>\r\n        </Col>\r\n        <Col md={6} sm={12}>\r\n          <div className='d-inline-block me-1 mb-1'>\r\n            <Button.Ripple\r\n              outline\r\n              className='me-1 mb-1'\r\n              color='primary'\r\n              size='lg'\r\n            >\r\n              Large\r\n            </Button.Ripple>\r\n          </div>\r\n          <div className='d-inline-block me-1 mb-1'>\r\n            <Button.Ripple outline color='primary'>\r\n              Default\r\n            </Button.Ripple>\r\n          </div>\r\n          <div className='d-inline-block mb-1'>\r\n            <Button.Ripple outline color='primary' size='sm'>\r\n              Small\r\n            </Button.Ripple>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default ButtonSizes\r\n              `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const buttonBlock = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Button, Row, Col } from 'reactstrap'\r\n\r\nconst ButtonBlock = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Row>\r\n        <Col className='d-grid mb-1 mb-lg-0' lg={6} md={12}>\r\n          <Button.Ripple color='primary'>Block Level Button</Button.Ripple>\r\n        </Col>\r\n        <Col lg={6} md={12}>\r\n          <Button.Ripple block outline color='primary'>\r\n            Block Level Button\r\n          </Button.Ripple>\r\n        </Col>\r\n      </Row>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ButtonBlock`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const buttonTags = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Button } from 'reactstrap'\r\n\r\nconst ButtonTags = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <a\r\n        className='me-1 mb-1 btn btn-primary'\r\n        color='primary'\r\n        href='https://pixinvent.com/'\r\n        target='_blank'\r\n        rel='noopener noreferrer'\r\n      >\r\n        Link\r\n      </a>\r\n      <Button className='me-1 mb-1' color='primary' tag='button'>\r\n        Button\r\n      </Button>\r\n      <input\r\n        className='me-1 mb-1 btn btn-primary'\r\n        type='button'\r\n        value='Input'\r\n      />\r\n      <input\r\n        className='me-1 mb-1 btn btn-primary'\r\n        type='submit'\r\n        value='Submit'\r\n      />\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default ButtonTags\r\n              `}\r\n    </code>\r\n  </pre>\r\n)\r\n","// ** React Imports\r\nimport { Fragment, useEffect } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Prism from 'prismjs'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, CardText } from 'reactstrap'\r\n\r\n// ** Demo Components\r\nimport ButtonTags from './ButtonTags'\r\nimport FlatButtons from './ButtonsFlat'\r\nimport IconButtons from './ButtonsIcon'\r\nimport ButtonSizes from './ButtonSizes'\r\nimport ButtonBlock from './ButtonBlock'\r\nimport ButtonGroups from './ButtonGroup'\r\nimport RoundButtons from './ButtonsRound'\r\nimport FilledButtons from './ButtonsFilled'\r\nimport ReliefButtons from './ButtonsRelief'\r\nimport OutlineButtons from './ButtonsOutline'\r\nimport GradientButtons from './ButtonsGradient'\r\nimport IconOnlyButtons from './ButtonsIconOnly'\r\nimport ButtonCheckboxRadio from './ButtonCheckboxRadio'\r\n\r\n// ** Custom Components\r\nimport Card from '@components/card-snippet'\r\nimport BreadCrumbs from '@components/breadcrumbs'\r\n\r\n// ** Source Code\r\nimport {\r\n  buttonTags,\r\n  flatButtons,\r\n  iconButtons,\r\n  buttonGroup,\r\n  buttonSizes,\r\n  buttonBlock,\r\n  roundButtons,\r\n  filledButtons,\r\n  buttonCBRadio,\r\n  reliefButtons,\r\n  outlineButtons,\r\n  gradientButtons,\r\n  iconOnlyButtons\r\n} from './ButtonsSourceCode'\r\n\r\nconst Buttons = () => {\r\n  useEffect(() => {\r\n    Prism.highlightAll()\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <BreadCrumbs breadCrumbTitle='Buttons' breadCrumbParent='Components' breadCrumbActive='Buttons' />\r\n      <Row>\r\n        <Col sm='12'>\r\n          <Card title='Filled' code={filledButtons}>\r\n            <CardText className='mb-0'>\r\n              Reactstrap includes six predefined button styles, each serving its own semantic purpose.\r\n            </CardText>\r\n            <FilledButtons />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Outline' code={outlineButtons}>\r\n            <CardText className='mb-0'>\r\n              Use prop <code>outline</code> with button tag to create an outline button.\r\n            </CardText>\r\n            <OutlineButtons />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Flat' code={flatButtons}>\r\n            <CardText className='mb-0'>\r\n              Use <code>color=\"flat-{'colorName'}\"</code> to create a flat button.\r\n            </CardText>\r\n            <FlatButtons />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Gradient' code={gradientButtons}>\r\n            <CardText className='mb-0'>\r\n              Use <code>color=\"gradient-{'colorName'}\"</code> to create a gradient button.\r\n            </CardText>\r\n            <GradientButtons />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Relief' code={reliefButtons}>\r\n            <CardText className='mb-0'>\r\n              Use <code>color=relief-{'colorName'}</code> to create a relief button.\r\n            </CardText>\r\n            <ReliefButtons />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Round' code={roundButtons}>\r\n            <CardText className='mb-0'>\r\n              Use class <code>.round</code> create a square button.\r\n            </CardText>\r\n            <RoundButtons />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Icons' code={iconButtons}>\r\n            <IconButtons />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Icon Only' code={iconOnlyButtons}>\r\n            <CardText className='mb-0'>\r\n              You can use class <code>.btn-icon</code>. You can create a rounded button by using{' '}\r\n              <code>.rounded-circle</code> with <code>.btn-icon</code>. You can only use <code>.btn-icon</code> when you\r\n              only want icon in your button\r\n            </CardText>\r\n            <IconOnlyButtons />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Button Groups' code={buttonGroup}>\r\n            <CardText>Group a series of buttons together on a single line with the button group.</CardText>\r\n            <ButtonGroups />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Checkbox & radio group' code={buttonCBRadio}>\r\n            <ButtonCheckboxRadio />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Sizes' code={buttonSizes}>\r\n            <CardText className='mb-0'>\r\n              Use <code>size</code> prop to change size of a button.\r\n            </CardText>\r\n            <ButtonSizes />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Block Level Buttons' code={buttonBlock}>\r\n            <CardText>\r\n              Create block level buttons with a mix of our display and gap utilities or by using prop <code>block</code>\r\n              .\r\n            </CardText>\r\n            <ButtonBlock />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Button Tags' code={buttonTags}>\r\n            <ButtonTags />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default Buttons\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-start mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  {breadCrumbParent}\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\r\n        <div className='breadcrumb-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' end>\r\n              <DropdownItem tag={Link} to='/apps/focus'>\r\n                <CheckSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Focus</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/instafriend'>\r\n                <MessageSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Instafriend</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/tellfari'>\r\n                <Mail className='me-1' size={14} />\r\n                <span className='align-middle'>Tellfari</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/book'>\r\n                <Calendar className='me-1' size={14} />\r\n                <span className='align-middle'>Book</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n","// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport { Code } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\r\n\r\nconst CardSnippet = props => {\r\n  // ** Props\r\n  const { title, children, noBody, code, iconCode } = props\r\n\r\n  // ** State\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  // ** If user passes custom icon then render that else render default icon\r\n  const IconCode = iconCode ? iconCode : <Code size={15} />\r\n\r\n  // ** To toggle collapse\r\n  const toggle = () => setIsOpen(!isOpen)\r\n\r\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\r\n  const Wrapper = noBody ? Fragment : CardBody\r\n\r\n  return (\r\n    <Card className='card-snippet'>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>{title}</CardTitle>\r\n        <div className='views cursor-pointer' onClick={toggle}>\r\n          {IconCode}\r\n        </div>\r\n      </CardHeader>\r\n      <Wrapper>{children}</Wrapper>\r\n      <Collapse isOpen={isOpen}>\r\n        <CardBody>{code}</CardBody>\r\n      </Collapse>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CardSnippet\r\n\r\n// ** PropTypes\r\nCardSnippet.propTypes = {\r\n  code: PropTypes.node,\r\n  noBody: PropTypes.bool,\r\n  children: PropTypes.any,\r\n  iconCode: PropTypes.node,\r\n  className: PropTypes.string,\r\n  title: PropTypes.string.isRequired\r\n}\r\n"],"sourceRoot":""}