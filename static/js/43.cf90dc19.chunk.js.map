{"version":3,"sources":["views/pages/knowledge-base/KnowledgeBaseHeader.js","views/pages/knowledge-base/KnowledgeBaseCategory.js","@core/components/breadcrumbs/index.js","assets/images/banner/banner.png"],"names":["FaqFilter","searchTerm","setSearchTerm","handleFilter","id","className","style","backgroundImage","require","default","onSubmit","e","preventDefault","size","value","onChange","target","placeholder","KnowledgeBaseCategory","data","setData","useState","filteredData","setFilteredData","useEffect","axios","get","then","res","params","useParams","Content","item","IconTag","Icon","icon","md","sm","classnames","iconColor","title","questions","length","map","listItem","tag","Link","to","category","slug","question","breadCrumbTitle","breadCrumbParent","breadCrumbParent2","breadCrumbActive","knowledgeBaseSearchQueryLower","toLowerCase","arr","filter","includes","queObj","BreadCrumbs","props","breadCrumbParent3","active","color","end"],"mappings":"kHAAA,4BA0CeA,IApCG,IAAkD,IAAjD,WAAEC,EAAF,cAAcC,EAAd,aAA6BC,GAAmB,EASjE,OACE,qBAAKC,GAAG,wBAAR,SACE,cAAC,IAAD,CACEC,UAAU,oBACVC,MAAO,CACLC,gBAAgB,OAAD,OAASC,EAAQ,KAAwCC,QAAzD,MAHnB,SAME,eAAC,IAAD,CAAUJ,UAAU,cAApB,UACE,oBAAIA,UAAU,eAAd,8CACA,eAAC,IAAD,CAAUA,UAAU,OAApB,+BACoB,sBAAMA,UAAU,YAAhB,kDAEpB,cAAC,IAAD,CAAMA,UAAU,kBAAkBK,SAAUC,GAAKA,EAAEC,iBAAnD,SACE,eAAC,IAAD,CAAYP,UAAU,oBAAtB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAQQ,KAAM,OAEhB,cAAC,IAAD,CAAOC,MAAOb,EAAYc,SAAUJ,GA1B/BA,KACXR,EACFA,EAAaQ,GAEbT,EAAcS,EAAEK,OAAOF,QAsB0BC,CAASJ,GAAIM,YAAY,oC,yDCjChF,uHAgHeC,UA3Fe,KAE5B,MAAOC,EAAMC,GAAWC,mBAAS,OAC9BC,EAAcC,GAAmBF,mBAAS,KAC1CpB,EAAYC,GAAiBmB,mBAAS,IAEzCG,qBAAU,KACRC,IAAMC,IAAI,sBAAsBC,MAAKC,GAAOR,EAAQQ,EAAIT,UACvD,IAEH,MAAMU,EAASC,cAETC,EAAU,IAAe,IAAd,KAAEC,GAAW,EAC5B,MAAMC,EAAUC,EAAKF,EAAKG,MAC1B,OACE,cAAC,IAAD,CAAK9B,UAAU,oBAAoB+B,GAAG,IAAIC,GAAG,IAA7C,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,qBAAIhC,UAAU,WAAd,UACE,cAAC4B,EAAD,CACEpB,KAAM,GACNR,UAAWiC,IAAW,QAAS,CAC7B,CAACN,EAAKO,WAAYP,EAAKO,cAG3B,iCACGP,EAAKQ,MADR,eACoBR,EAAKS,UAAUC,OADnC,WAIF,cAAC,IAAD,CAAWrC,UAAU,yBAArB,SACG2B,EAAKS,UAAUE,KAAIC,GAClB,cAAC,IAAD,CACEC,IAAKC,IACLC,GAAE,gCAA2BlB,EAAOmB,SAAlC,YAA8CJ,EAASK,MACzD5C,UAAU,YAHZ,SAMGuC,EAASM,UAFLN,EAASxC,gBAsC9B,OACE,eAAC,WAAD,WACE,cAAC,IAAD,CACE+C,gBAAgB,iBAChBC,iBAAiB,QACjBC,kBAAkB,iBAClBC,iBAAiB,aAEnB,cAAC,IAAD,CAAqBrD,WAAYA,EAAYC,cAAeA,EAAeC,aA5B1DQ,IACnB,MAAMG,EAAQH,EAAEK,OAAOF,MACrByC,EAAgC5C,EAAEK,OAAOF,MAAM0C,cAEjDtD,EAAcS,EAAEK,OAAOF,OAEvB,IAAI2C,EAAM,GAEN3C,EAAM4B,SACRe,EAAMtC,EAAKuC,QAAO1B,GAEdA,EAAKQ,MAAMgB,cAAcG,SAASJ,IAClCvB,EAAKS,UAAUiB,QAAOE,GAAUA,EAAOV,SAASM,cAAcG,SAASJ,KAAgCb,UAK7GnB,EAAgB,IAAIkC,OAYR,OAATtC,EACC,qBAAKf,GAAG,0BAAR,SACE,cAAC,KAAD,CAAKC,UAAU,sCAAf,UApCYJ,EAAWyC,OAASpB,EAAeH,GAEpCwB,KAAIX,GAAQ,cAACD,EAAD,CAAuBC,KAAMA,GAAfA,EAAK5B,UAoC1C,U,iCC3GV,wEAuFeyD,IAtEKC,IAElB,MAAM,gBAAEX,EAAF,iBAAmBC,EAAnB,kBAAqCC,EAArC,kBAAwDU,EAAxD,iBAA2ET,GAAqBQ,EAEtG,OACE,sBAAKzD,UAAU,qBAAf,UACE,qBAAKA,UAAU,2CAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,sBAAKA,UAAU,SAAf,UACG8C,EAAkB,oBAAI9C,UAAU,wCAAd,SAAuD8C,IAAwB,GAClG,qBAAK9C,UAAU,6DAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAgBwC,IAAI,KAApB,SACE,cAAC,IAAD,CAAME,GAAG,IAAT,oBAEF,cAAC,IAAD,CAAgBF,IAAI,KAAKxC,UAAU,eAAnC,SACG+C,IAEFC,EACC,cAAC,IAAD,CAAgBR,IAAI,KAAKxC,UAAU,eAAnC,SACGgD,IAGH,GAEDU,EACC,cAAC,IAAD,CAAgBlB,IAAI,KAAKxC,UAAU,eAAnC,SACG0D,IAGH,GAEF,cAAC,IAAD,CAAgBlB,IAAI,KAAKmB,QAAM,EAA/B,SACGV,gBAOb,qBAAKjD,UAAU,qEAAf,SACE,qBAAKA,UAAU,4BAAf,SACE,eAAC,KAAD,WACE,cAAC,IAAD,CAAgB4D,MAAM,UAAUpD,KAAK,KAAKR,UAAU,qCAApD,SACE,cAAC,IAAD,CAAMQ,KAAM,OAEd,eAAC,IAAD,CAAcgC,IAAI,KAAKqB,KAAG,EAA1B,UACE,eAAC,IAAD,CAAcrB,IAAKC,IAAMC,GAAG,cAA5B,UACE,cAAC,IAAD,CAAa1C,UAAU,OAAOQ,KAAM,KACpC,sBAAMR,UAAU,eAAhB,sBAEF,eAAC,IAAD,CAAcwC,IAAKC,IAAMC,GAAG,oBAA5B,UACE,cAAC,IAAD,CAAe1C,UAAU,OAAOQ,KAAM,KACtC,sBAAMR,UAAU,eAAhB,4BAEF,eAAC,IAAD,CAAcwC,IAAKC,IAAMC,GAAG,iBAA5B,UACE,cAAC,IAAD,CAAM1C,UAAU,OAAOQ,KAAM,KAC7B,sBAAMR,UAAU,eAAhB,yBAEF,eAAC,IAAD,CAAcwC,IAAKC,IAAMC,GAAG,aAA5B,UACE,cAAC,IAAD,CAAU1C,UAAU,OAAOQ,KAAM,KACjC,sBAAMR,UAAU,eAAhB,oC,iCC9EhB,OAAe,cAA0B","file":"static/js/43.cf90dc19.chunk.js","sourcesContent":["// ** Icons Imports\r\nimport { Search } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody, CardText, Form, Input, InputGroup, InputGroupText } from 'reactstrap'\r\n\r\nconst FaqFilter = ({ searchTerm, setSearchTerm, handleFilter }) => {\r\n  const onChange = e => {\r\n    if (handleFilter) {\r\n      handleFilter(e)\r\n    } else {\r\n      setSearchTerm(e.target.value)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id='knowledge-base-search'>\r\n      <Card\r\n        className='knowledge-base-bg'\r\n        style={{\r\n          backgroundImage: `url(${require('@src/assets/images/banner/banner.png').default})`\r\n        }}\r\n      >\r\n        <CardBody className='text-center'>\r\n          <h2 className='text-primary'>Dedicated Source Used on Website</h2>\r\n          <CardText className='mb-2'>\r\n            Popular searches: <span className='fw-bolder'>Sales automation, Email marketing</span>\r\n          </CardText>\r\n          <Form className='kb-search-input' onSubmit={e => e.preventDefault()}>\r\n            <InputGroup className='input-group-merge'>\r\n              <InputGroupText>\r\n                <Search size={14} />\r\n              </InputGroupText>\r\n              <Input value={searchTerm} onChange={e => onChange(e)} placeholder='Ask a question...' />\r\n            </InputGroup>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FaqFilter\r\n","// ** React Imports\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { Fragment, useState, useEffect } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport * as Icon from 'react-feather'\r\nimport classnames from 'classnames'\r\n\r\n// ** Custom Components\r\nimport Breadcrumbs from '@components/breadcrumbs'\r\n\r\n// ** Demo Components\r\nimport KnowledgeBaseHeader from './KnowledgeBaseHeader'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, Card, CardBody, ListGroup, ListGroupItem } from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/base/pages/page-knowledge-base.scss'\r\n\r\nconst KnowledgeBaseCategory = () => {\r\n  // ** States\r\n  const [data, setData] = useState(null),\r\n    [filteredData, setFilteredData] = useState([]),\r\n    [searchTerm, setSearchTerm] = useState('')\r\n\r\n  useEffect(() => {\r\n    axios.get('/faq/data/category').then(res => setData(res.data))\r\n  }, [])\r\n\r\n  const params = useParams()\r\n\r\n  const Content = ({ item }) => {\r\n    const IconTag = Icon[item.icon]\r\n    return (\r\n      <Col className='kb-search-content' md='4' sm='6'>\r\n        <Card>\r\n          <CardBody>\r\n            <h6 className='kb-title'>\r\n              <IconTag\r\n                size={20}\r\n                className={classnames('me-50', {\r\n                  [item.iconColor]: item.iconColor\r\n                })}\r\n              />\r\n              <span>\r\n                {item.title} {`(${item.questions.length})`}\r\n              </span>\r\n            </h6>\r\n            <ListGroup className='list-group-circle mt-2'>\r\n              {item.questions.map(listItem => (\r\n                <ListGroupItem\r\n                  tag={Link}\r\n                  to={`/pages/knowledge-base/${params.category}/${listItem.slug}`}\r\n                  className='text-body'\r\n                  key={listItem.id}\r\n                >\r\n                  {listItem.question}\r\n                </ListGroupItem>\r\n              ))}\r\n            </ListGroup>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    )\r\n  }\r\n\r\n  const renderContent = () => {\r\n    const dataToMap = searchTerm.length ? filteredData : data\r\n\r\n    return dataToMap.map(item => <Content key={item.id} item={item} />)\r\n  }\r\n\r\n  const handleFilter = e => {\r\n    const value = e.target.value,\r\n      knowledgeBaseSearchQueryLower = e.target.value.toLowerCase()\r\n\r\n    setSearchTerm(e.target.value)\r\n\r\n    let arr = []\r\n\r\n    if (value.length) {\r\n      arr = data.filter(item => {\r\n        return (\r\n          item.title.toLowerCase().includes(knowledgeBaseSearchQueryLower) ||\r\n          item.questions.filter(queObj => queObj.question.toLowerCase().includes(knowledgeBaseSearchQueryLower)).length\r\n        )\r\n      })\r\n    }\r\n\r\n    setFilteredData([...arr])\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumbs\r\n        breadCrumbTitle='Knowledge Base'\r\n        breadCrumbParent='Pages'\r\n        breadCrumbParent2='Knowledge Base'\r\n        breadCrumbActive='Category'\r\n      />\r\n      <KnowledgeBaseHeader searchTerm={searchTerm} setSearchTerm={setSearchTerm} handleFilter={handleFilter} />\r\n      {data !== null ? (\r\n        <div id='knowledge-base-category'>\r\n          <Row className='kb-search-content-info match-height'>{renderContent()}</Row>\r\n        </div>\r\n      ) : null}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default KnowledgeBaseCategory\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-start mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  {breadCrumbParent}\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\r\n        <div className='breadcrumb-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' end>\r\n              <DropdownItem tag={Link} to='/apps/focus'>\r\n                <CheckSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Focus</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/instafriend'>\r\n                <MessageSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Instafriend</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/tellfari'>\r\n                <Mail className='me-1' size={14} />\r\n                <span className='align-middle'>Tellfari</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/book'>\r\n                <Calendar className='me-1' size={14} />\r\n                <span className='align-middle'>Book</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n","export default __webpack_public_path__ + \"static/media/banner.06ea9907.png\";"],"sourceRoot":""}