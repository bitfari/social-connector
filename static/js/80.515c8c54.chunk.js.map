{"version":3,"sources":["views/components/badgePills/BadgePillGlow.js","views/components/badgePills/BadgeBlock.js","views/components/badgePills/BadgePillLink.js","views/components/badgePills/BadgePillLight.js","views/components/badgePills/BadgeNotification.js","views/components/badgePills/BadgePillContextual.js","views/components/badgePills/BadgePillSourceCode.js","views/components/badgePills/index.js","@core/components/breadcrumbs/index.js","@core/components/card-snippet/index.js"],"names":["BadgePillGlow","className","color","pill","BadgePillBlock","BadgePillLink","href","size","BadgePillLight","BadgePillNotification","BadgePillContextual","badgePillLight","badgePillGlow","badgePillContextual","badgePillNotification","badgePillLink","badgePillBlock","BadgePill","useEffect","Prism","highlightAll","breadCrumbTitle","breadCrumbParent","breadCrumbActive","sm","title","code","BadgeNotification","md","BreadCrumbs","props","breadCrumbParent2","breadCrumbParent3","tag","to","active","end","Link","CardSnippet","children","noBody","iconCode","isOpen","setIsOpen","useState","IconCode","Wrapper","Fragment","CardBody","onClick"],"mappings":"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","file":"static/js/80.515c8c54.chunk.js","sourcesContent":["// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgePillGlow = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Badge color='primary' pill className='badge-glow'>\r\n        Primary\r\n      </Badge>\r\n      <Badge color='secondary' pill className='badge-glow'>\r\n        Secondary\r\n      </Badge>\r\n      <Badge color='success' pill className='badge-glow'>\r\n        Success\r\n      </Badge>\r\n      <Badge color='danger' pill className='badge-glow'>\r\n        Danger\r\n      </Badge>\r\n      <Badge color='warning' pill className='badge-glow'>\r\n        Warning\r\n      </Badge>\r\n      <Badge color='info' pill className='badge-glow'>\r\n        Info\r\n      </Badge>\r\n      <Badge color='dark' pill className='badge-glow'>\r\n        Dark\r\n      </Badge>\r\n    </div>\r\n  )\r\n}\r\nexport default BadgePillGlow\r\n","// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgePillBlock = () => {\r\n  return (\r\n    <Badge pill color='danger' className='d-block'>\r\n      <span>Block Badge Pill</span>\r\n    </Badge>\r\n  )\r\n}\r\nexport default BadgePillBlock\r\n","// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\n// ** Icons Imports\r\nimport { Link } from 'react-feather'\r\n\r\nconst BadgePillLink = () => {\r\n  return (\r\n    <Badge color='primary' pill href='#'>\r\n      <Link size={12} />\r\n      <span className='align-middle ms-50'>Link Badge Pill</span>\r\n    </Badge>\r\n  )\r\n}\r\nexport default BadgePillLink\r\n","// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgePillLight = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Badge color='light-primary' pill>\r\n        Primary\r\n      </Badge>\r\n      <Badge color='light-secondary' pill>\r\n        Secondary\r\n      </Badge>\r\n      <Badge color='light-success' pill>\r\n        Success\r\n      </Badge>\r\n      <Badge color='light-danger' pill>\r\n        Danger\r\n      </Badge>\r\n      <Badge color='light-warning' pill>\r\n        Warning\r\n      </Badge>\r\n      <Badge color='light-info' pill>\r\n        Info\r\n      </Badge>\r\n    </div>\r\n  )\r\n}\r\nexport default BadgePillLight\r\n","// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\n// ** Icons Imports\r\nimport { Bell } from 'react-feather'\r\n\r\nconst BadgePillNotification = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <div className='position-relative'>\r\n        <Badge pill color='primary' className='badge-up'>\r\n          4\r\n        </Badge>\r\n        <Bell className='text-primary' size={22} />\r\n      </div>\r\n      <div className='position-relative'>\r\n        <Badge pill color='danger' className='badge-up'>\r\n          5\r\n        </Badge>\r\n        <Bell className='text-danger' size={22} />\r\n      </div>\r\n      <div className='position-relative'>\r\n        <Badge pill color='info' className='badge-up'>\r\n          6\r\n        </Badge>\r\n        <Bell className='text-info' size={22} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BadgePillNotification\r\n","// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgePillContextual = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Badge color='primary' pill>\r\n        Primary\r\n      </Badge>\r\n      <Badge color='secondary' pill>\r\n        Secondary\r\n      </Badge>\r\n      <Badge color='success' pill>\r\n        Success\r\n      </Badge>\r\n      <Badge color='danger' pill>\r\n        Danger\r\n      </Badge>\r\n      <Badge color='warning' pill>\r\n        Warning\r\n      </Badge>\r\n      <Badge color='info' pill>\r\n        Info\r\n      </Badge>\r\n      <Badge color='dark' pill>\r\n        Dark\r\n      </Badge>\r\n    </div>\r\n  )\r\n}\r\nexport default BadgePillContextual\r\n","export const badgePillLight = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgePillLight = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Badge color='light-primary' pill>\r\n        Primary\r\n      </Badge>\r\n      <Badge color='light-secondary' pill>\r\n        Secondary\r\n      </Badge>\r\n      <Badge color='light-success' pill>\r\n        Success\r\n      </Badge>\r\n      <Badge color='light-danger' pill>\r\n      Danger\r\n      </Badge>\r\n      <Badge color='light-warning' pill>\r\n        Warning\r\n      </Badge>\r\n      <Badge color='light-info' pill>\r\n        Info\r\n      </Badge>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default BadgePillLight\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgePillGlow = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgePillGlow = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Badge color='primary' pill className='badge-glow'>\r\n        Primary\r\n      </Badge>\r\n      <Badge color='secondary' pill className='badge-glow'>\r\n        Secondary\r\n      </Badge>\r\n      <Badge color='success' pill className='badge-glow'>\r\n        Success\r\n      </Badge>\r\n      <Badge color='danger' pill className='badge-glow'>\r\n        Danger\r\n      </Badge>\r\n      <Badge color='warning' pill className='badge-glow'>\r\n        Warning\r\n      </Badge>\r\n      <Badge color='info' pill className='badge-glow'>\r\n        Info\r\n      </Badge>\r\n      <Badge color='dark' pill className='badge-glow mb-1'>\r\n        Dark\r\n      </Badge>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default BadgePillGlow\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgePillContextual = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgePillContextual = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Badge color='primary' pill>\r\n        Primary\r\n      </Badge>\r\n      <Badge color='secondary' pill>\r\n        Secondary\r\n      </Badge>\r\n      <Badge color='success' pill>\r\n        Success\r\n      </Badge>\r\n      <Badge color='danger' pill>\r\n        Danger\r\n      </Badge>\r\n      <Badge color='warning' pill>\r\n        Warning\r\n      </Badge>\r\n      <Badge color='info' pill>\r\n        Info\r\n      </Badge>\r\n      <Badge color='dark' pill>\r\n        Dark\r\n      </Badge>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default BadgePillContextual\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgePillNotification = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Badge } from 'reactstrap'\r\nimport { Bell } from 'react-feather'\r\n\r\nconst BadgePillNotification = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <div className='position-relative'>\r\n        <Badge pill color='primary' className='badge-up'>\r\n          4\r\n        </Badge>\r\n        <Bell className='text-primary' size={22} />\r\n      </div>\r\n      <div className='position-relative'>\r\n        <Badge pill color='danger' className='badge-up'>\r\n          5\r\n        </Badge>\r\n        <Bell className='text-danger' size={22} />\r\n      </div>\r\n      <div className='position-relative'>\r\n        <Badge pill color='info' className='badge-up'>\r\n          6\r\n        </Badge>\r\n        <Bell className='text-info' size={22} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BadgePillNotification\r\n\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgePillLink = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Badge } from 'reactstrap'\r\nimport { Link } from 'react-feather'\r\n\r\nconst BadgePillLink = () => {\r\n  return (\r\n    <Badge color='primary' pill href='#'>\r\n      <Link size={12} />\r\n      <span className='align-middle ms-50'>Link Badge Pill</span>\r\n    </Badge>\r\n  )\r\n}\r\nexport default BadgePillLink\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgePillBlock = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgePillBlock = () => {\r\n  return (\r\n    <Badge pill color='primary' className='d-block'>\r\n      <span>Block Badge Pill</span>\r\n    </Badge>\r\n  )\r\n}\r\nexport default BadgePillBlock\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n","// ** React Imports\r\nimport { Fragment, useEffect } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, CardText } from 'reactstrap'\r\n\r\n// ** Third Party Components\r\nimport Prism from 'prismjs'\r\n\r\n// ** Custom Components\r\nimport Card from '@components/card-snippet'\r\nimport BreadCrumbs from '@components/breadcrumbs'\r\n\r\n// ** Demo Components\r\nimport BadgeGlow from './BadgePillGlow'\r\nimport BadgePillBlock from './BadgeBlock'\r\nimport BadgePillLink from './BadgePillLink'\r\nimport BadgePillLight from './BadgePillLight'\r\nimport BadgeNotification from './BadgeNotification'\r\nimport BadgePillContextual from './BadgePillContextual'\r\n\r\n// ** Source Code\r\nimport {\r\n  badgePillGlow,\r\n  badgePillLink,\r\n  badgePillBlock,\r\n  badgePillLight,\r\n  badgePillContextual,\r\n  badgePillNotification\r\n} from './BadgePillSourceCode'\r\n\r\nconst BadgePill = () => {\r\n  useEffect(() => {\r\n    Prism.highlightAll()\r\n  }, [])\r\n  return (\r\n    <Fragment>\r\n      <BreadCrumbs breadCrumbTitle='Pill Badges' breadCrumbParent='Components' breadCrumbActive='Pill Badges' />\r\n      <Row>\r\n        <Col sm='12'>\r\n          <Card title='Contextual' code={badgePillContextual}>\r\n            <CardText className='mb-0'>\r\n              Use prop <code>pill</code> with <code>Badge</code> tag to create badge pill.\r\n            </CardText>\r\n            <BadgePillContextual />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Glow' code={badgePillGlow}>\r\n            <CardText className='mb-0'>\r\n              Use class <code>.badge-glow</code> with <code>Badge</code> tag to add glow effect to your badge.\r\n            </CardText>\r\n            <BadgeGlow />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Light' code={badgePillLight}>\r\n            <CardText className='mb-0'>\r\n              Use prop <code>pill</code> and <code>color=\"light-COLOR_NAME\"</code> with <code>Badge</code> tag to create\r\n              a light badge pill.\r\n            </CardText>\r\n            <BadgePillLight />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Notifications' code={badgePillNotification}>\r\n            <CardText className='mb-0'>\r\n              Use <code>.badge-up</code> to set pill badge to higher than other text. So that it can work with\r\n              notifications also.\r\n            </CardText>\r\n            <BadgeNotification />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <Row className='match-height'>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Link' code={badgePillLink}>\r\n            <CardText>\r\n              Use <code>href=\"#\"</code> prop to use badge as a link.\r\n            </CardText>\r\n            <BadgePillLink />\r\n          </Card>\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Block' code={badgePillBlock}>\r\n            <CardText>\r\n              Use <code>.d-block</code> class to make badge display as block.\r\n            </CardText>\r\n            <BadgePillBlock />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default BadgePill\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-start mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  {breadCrumbParent}\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\r\n        <div className='breadcrumb-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' end>\r\n              <DropdownItem tag={Link} to='/apps/focus'>\r\n                <CheckSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Focus</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/instafriend'>\r\n                <MessageSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Instafriend</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/tellfari'>\r\n                <Mail className='me-1' size={14} />\r\n                <span className='align-middle'>Tellfari</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/book'>\r\n                <Calendar className='me-1' size={14} />\r\n                <span className='align-middle'>Book</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n","// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport { Code } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\r\n\r\nconst CardSnippet = props => {\r\n  // ** Props\r\n  const { title, children, noBody, code, iconCode } = props\r\n\r\n  // ** State\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  // ** If user passes custom icon then render that else render default icon\r\n  const IconCode = iconCode ? iconCode : <Code size={15} />\r\n\r\n  // ** To toggle collapse\r\n  const toggle = () => setIsOpen(!isOpen)\r\n\r\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\r\n  const Wrapper = noBody ? Fragment : CardBody\r\n\r\n  return (\r\n    <Card className='card-snippet'>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>{title}</CardTitle>\r\n        <div className='views cursor-pointer' onClick={toggle}>\r\n          {IconCode}\r\n        </div>\r\n      </CardHeader>\r\n      <Wrapper>{children}</Wrapper>\r\n      <Collapse isOpen={isOpen}>\r\n        <CardBody>{code}</CardBody>\r\n      </Collapse>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CardSnippet\r\n\r\n// ** PropTypes\r\nCardSnippet.propTypes = {\r\n  code: PropTypes.node,\r\n  noBody: PropTypes.bool,\r\n  children: PropTypes.any,\r\n  iconCode: PropTypes.node,\r\n  className: PropTypes.string,\r\n  title: PropTypes.string.isRequired\r\n}\r\n"],"sourceRoot":""}